openapi: 3.0.1
info:
  title: Customer Profile API
  description: This is a Customer Profile REST API.
  version: 1.60.0
servers:
  - url: http://localhost:8080/
tags:
  - name: Contact API V1
    x-displayName: Contact
  - name: Contact API V1 Document
    x-displayName: Contact Document
  - name: Contact API V1 Note
    x-displayName: Contact Note
  - name: Contact API V1 Ownership
    x-displayName: Contact Ownership
  - name: Contact API V1 Relation
    x-displayName: Contact Relation
  - name: Contact API V1 Task
    x-displayName: Contact Task
  - name: Contact API V1 Vehicle
    x-displayName: Contact Vehicle
  - name: Contact API V2
    x-displayName: Contact
  - name: Contact API V2 Dealer History
    x-displayName: Contact Dealer History
  - name: Contact API V2 Interest Categories
    x-displayName: Contact Interest Categories
  - name: Contact API V2 Notes
    x-displayName: Contact Notes
  - name: Contact API V2 Search
    x-displayName: Contact Search
  - name: Contact API V2 Tags
    x-displayName: Contact Tags
  - name: Contact API V2 Type
    x-displayName: Contact Type
  - name: Contact API V2 Usage
    x-displayName: Contact Usage
  - name: Contact API V2 Vehicle Preferences
    x-displayName: Contact Vehicle Preferences
  - name: Config
    x-displayName: Config
  - name: Consents
    x-displayName: Consents
  - name: Contact Status
    x-displayName: Contact Status
  - name: Country
    x-displayName: Country
  - name: Customer
    x-displayName: Customer
  - name: Data Quality
    x-displayName: Data Quality
  - name: Declaration
    x-displayName: Declaration
  - name: Documents
    x-displayName: Documents
  - name: EF
    x-displayName: EF
  - name: Interest
    x-displayName: Interest
  - name: Language
    x-displayName: Language
  - name: Lead
    x-displayName: Lead
  - name: MonitoringEndpoint
    x-displayName: MonitoringEndpoint
  - name: Offer
    x-displayName: Offer
  - name: Ownership API Consents
    x-displayName: Consents
  - name: Ownership API Customer Usage
    x-displayName: Customer Usage
  - name: Ownership API Download
    x-displayName: Download
  - name: Ownership API Driver
    x-displayName: Driver
  - name: Ownership API Email
    x-displayName: Email
  - name: Ownership API Form
    x-displayName: Form
  - name: Ownership API Ownership
    x-displayName: Ownership
  - name: Privacy
    x-displayName: Privacy
  - name: Storage
    x-displayName: Storage
  - name: Sync
    x-displayName: Sync
  - name: Tasks
    x-displayName: Tasks
  - name: Test Drive
    x-displayName: Test Drive
  - name: Vehicle
    x-displayName: Vehicle
paths:
  /v1/declaration-campaign-sender:
    get:
      tags:
        - Config
      summary: Retrieve enabled declaration campaign senders
      description: >-
        This operation is used to retrieve a list of all enabled declaration
        campaign senders.
      operationId: getDeclarationCampaignSenders
      responses:
        '200':
          description: List of all enabled declaration campaign senders
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/CP_API_DeclarationCampaignSender
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      security:
        - CP_API_api_key: []
  /v1/declarations/{declarationId}:
    get:
      tags:
        - Declaration
      summary: Get declaration by ID
      description: This operation is used to retrieve single declaration by ID.
      operationId: getDeclaration
      parameters:
        - name: declarationId
          in: path
          description: Declaration ID
          required: true
          schema:
            type: integer
            format: int32
        - name: overrideAccess
          in: query
          schema:
            type: boolean
      responses:
        '200':
          description: Declaration found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Declaration'
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      security:
        - CP_API_api_key: []
    put:
      tags:
        - Declaration
      summary: Updated declaration
      description: This operation is used to update declaration.
      operationId: updateDeclaration
      parameters:
        - name: declarationId
          in: path
          description: Declaration ID
          required: true
          schema:
            type: integer
            format: int32
        - name: overrideAccess
          in: query
          schema:
            type: boolean
      requestBody:
        description: Declaration object that needs to be validated and updated.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CP_API_Declaration'
        required: false
      responses:
        '201':
          description: Declaration updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Declaration'
        '400':
          description: Client bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      x-codegen-request-body-name: body
      security:
        - CP_API_api_key: []
    delete:
      tags:
        - Declaration
      summary: Delete declaration
      description: This operation deletes declaration by ID.
      operationId: deleteDeclaration
      parameters:
        - name: declarationId
          in: path
          description: Declaration ID
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '204':
          description: Declaration successfully deleted
          content: {}
        '400':
          description: Client bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '404':
          description: 'Contact not found '
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      security:
        - CP_API_api_key: []
  /v1/declarations/{declarationId}/driver:
    delete:
      tags:
        - Declaration
      summary: Delete declaration driver
      description: This operation deletes driver from declaration by ID.
      operationId: deleteDeclarationDriver
      parameters:
        - name: declarationId
          in: path
          description: Declaration ID
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '204':
          description: Declaration driver successfully deleted
          content: {}
        '400':
          description: Client bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '404':
          description: 'Contact not found '
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      security:
        - CP_API_api_key: []
  /v1/declarations:
    get:
      tags:
        - Declaration
      summary: Get declaration list by VIN
      description: This operation is used to retrieve declaration list by VIN.
      operationId: getDeclarationByVin
      parameters:
        - name: vin
          in: query
          description: VIN
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Declaration found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Declaration'
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      security:
        - CP_API_api_key: []
    post:
      tags:
        - Declaration
      summary: Create new declaration
      description: This operation is used to create new declaration.
      operationId: createDeclaration
      requestBody:
        description: Declaration object that needs to be validated and stored to the CP.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CP_API_Declaration'
        required: false
      responses:
        '201':
          description: Declaration successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Declaration'
        '400':
          description: Client bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      x-codegen-request-body-name: body
      security:
        - CP_API_api_key: []
  /v1/declarations/brands:
    get:
      tags:
        - Declaration
      summary: Get brand list
      description: This operation is used to retrieve brand list.
      operationId: getBrands
      responses:
        '200':
          description: Brand list found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CP_API_Brand'
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      security:
        - CP_API_api_key: []
  /v1/declarations/dealers:
    get:
      tags:
        - Declaration
      summary: Get declaration dealer list
      description: This operation is used to retrieve declaration dealer list.
      operationId: getDealers
      responses:
        '200':
          description: Dealer list found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CP_API_Dealer'
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      security:
        - CP_API_api_key: []
  /v1/declarations/employees:
    get:
      tags:
        - Declaration
      operationId: getDeclarationEmployees
      responses:
        '200':
          description: List of all visible declaration employees
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/CP_API_DeclarationEmployee
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      security:
        - CP_API_api_key: []
  /v1/declarations/first:
    get:
      tags:
        - Declaration
      summary: Get first declaration by VIN
      description: This operation is used to retrieve first declaration by VIN.
      operationId: getFirstDeclarationByVin
      parameters:
        - name: vin
          in: query
          description: VIN
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Declaration found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Declaration'
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      security:
        - CP_API_api_key: []
  /v1/declarations/active:
    get:
      tags:
        - Declaration
      summary: Get active declaration by VIN
      description: This operation is used to retrieve active declaration by VIN.
      operationId: getActiveDeclarationByVin
      parameters:
        - name: vin
          in: query
          description: VIN
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Declaration found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Declaration'
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      security:
        - CP_API_api_key: []
  /v1/declaration-owner-change-reason:
    get:
      tags:
        - Config
      summary: Retrieve declaration owner change reasons
      description: >-
        This operation is used to retrieve a list of all declaration owner
        change reasons.
      operationId: getDeclarationOwnerChangeReason
      responses:
        '200':
          description: List of all declaration owner change reasons
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CP_API_DeclarationOwnerChangeReason
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      security:
        - CP_API_api_key: []
  /v1/declaration-status:
    get:
      tags:
        - Config
      summary: Retrieve visible declaration statuses
      description: >-
        This operation is used to retrieve a list of all visible declaration
        statuses.
      operationId: getDeclarationStatus
      responses:
        '200':
          description: List of all visible declaration statuses
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_DeclarationStatus'
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      security:
        - CP_API_api_key: []
  /v1/declaration-tag:
    get:
      tags:
        - Config
      summary: Retrieve enabled declaration tags
      description: >-
        This operation is used to retrieve a list of all enabled declaration
        tags.
      operationId: getDeclarationTags
      responses:
        '200':
          description: List of all enabled declaration tags
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CP_API_DeclarationTag'
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      security:
        - CP_API_api_key: []
  /v1/declaration-type:
    get:
      tags:
        - Config
      summary: Retrieve visible declaration types
      description: >-
        This operation is used to retrieve a list of all visible declaration
        types.
      operationId: getDeclarationType
      responses:
        '200':
          description: List of all visible declaration types
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CP_API_DeclarationType'
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      security:
        - CP_API_api_key: []
  /v1/vehicles/all/{contactId}:
    get:
      tags:
        - Vehicle
      summary: Get list of all contact vehicles
      description: >-
        This operation is used to retrieve history of all vehicles that contact
        owned and currently own. List is ordered by current contact vehicles and
        ownership start date (from newest to oldest). Also worthy of considering
        that depending on market country different filters will be applied when
        fetching data from database.
      operationId: getVehicles
      parameters:
        - name: contactId
          in: path
          description: Contact ID
          required: true
          schema:
            type: integer
            format: int32
        - name: page
          in: query
          description: Page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: pageSize
          in: query
          description: Page size
          schema:
            type: integer
            format: int32
            default: 20
        - name: fetchDriver
          in: query
          description: fetchDriver
          schema:
            type: boolean
            default: false
        - name: isBusiness
          in: query
          description: isBusiness
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: History list of vehicles for contact
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CP_API_VehicleHistoryPageResult
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      security:
        - CP_API_api_key: []
  /v1/vehicles:
    post:
      tags:
        - Vehicle
      summary: Add vehicle to contact
      description: >-
        This operation is used for changing ownership of a vehicle. Requested
        vehicle will be updated/created and connection will be made to contact
        (contactId) that have been sent as path param. In the same time
        ownership to previous owner (if there is one) will be closed.
      operationId: createContactVehicle
      parameters:
        - name: contactId
          in: query
          description: Owner contact ID
          schema:
            type: integer
            format: int32
        - name: registrationPlate
          in: query
          description: New registration plate
          schema:
            type: string
        - name: startDate
          in: query
          description: Date when ownership started
          schema:
            type: string
      requestBody:
        description: Vehicle object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CP_API_Vehicle'
        required: true
      responses:
        '201':
          description: Vehicle successfully stored/updated and connected to contact.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Response'
        '204':
          description: Contact not found for ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '400':
          description: No vehicle message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      x-codegen-request-body-name: body
      security:
        - CP_API_api_key: []
  /v1/declarations-search:
    post:
      tags:
        - Declaration
      summary: Declarations search
      description: This operation is used for searching declarations in local database.
      operationId: searchDeclarations
      requestBody:
        description: Declaration search object that contains search data.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CP_API_DeclarationSearch'
        required: false
      responses:
        '200':
          description: Search result page with one or more declarations found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_PageResult'
        '400':
          description: Client bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      x-codegen-request-body-name: body
      security:
        - CP_API_api_key: []
  /v1/data-source:
    get:
      tags:
        - Config
      summary: Retrieve external system names (data-sources)
      description: >-
        This operation is used to retrieve a list of all external system names
        (aka. data-sources).
      operationId: getDataSources
      parameters:
        - name: onlyParent
          in: query
          description: >-
            Get all parent data-source names (If false/null, all data-sources
            are retrieved)
          schema:
            type: boolean
        - name: onlyActive
          in: query
          description: >-
            Get all data-sources which we receive usage actions from (If
            false/null, all statuses are retrieved)
          schema:
            type: boolean
      responses:
        '200':
          description: List of all data source names
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      security:
        - CP_API_api_key: []
  /v1/address-status:
    get:
      tags:
        - Config
      summary: Retrieve enabled address statuses
      description: >-
        This operation is used to retrieve a list of all enabled address
        statuses (eg. verified, unknown, etc.).
      operationId: getAddressStatuses
      parameters:
        - name: enabled
          in: query
          description: >-
            Get all enabled address statuses (If false/null, all statuses are
            retrieved)
          schema:
            type: boolean
      responses:
        '200':
          description: List of all enabled address statuses
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/CP_API_AddressStatusResource
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      security:
        - CP_API_api_key: []
  /v1/contact-business-category:
    get:
      tags:
        - Config
      summary: Retrieve visible contact business categories
      description: >-
        This operation is used to retrieve a list of all visible contact
        business categories (eg. EF Auslandsgesellschaften, Trader Inter, OEM
        National).
      operationId: getContactBusinessCategories
      responses:
        '200':
          description: List of all visible contact business categories
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/Contact_API_V1BusinessCategoryResource
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      security:
        - CP_API_api_key: []
  /v1/contact-business-group:
    get:
      tags:
        - Config
      summary: Retrieve visible contact business groups
      description: >-
        This operation is used to retrieve a list of all visible contact
        business groups (eg. T-Com Berlin, T-Com Munchen, T-Com Frankfurt).
      operationId: getContactBusinessGroups
      responses:
        '200':
          description: List of all visible contact business groups
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/Contact_API_V1BusinessGroupResource
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      security:
        - CP_API_api_key: []
  /v1/contact-classifications:
    get:
      tags:
        - Config
      summary: Retrieve enabled contact business classifications
      description: >-
        This operation is used to retrieve a list of all enabled contact
        business classifications.
      operationId: getContactClassifications
      responses:
        '200':
          description: List of all enabled contact business classifications
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/Contact_API_V1Classification
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      security:
        - CP_API_api_key: []
  /v1/contact-action:
    get:
      tags:
        - Config
      summary: Retrieve visible contact task actions
      description: >-
        This operation is used to retrieve a list of all visible contact task
        actions.
      operationId: getContactActions
      parameters:
        - name: visible
          in: query
          description: >-
            Get all enabled task actions (If false/null, all enabled actions are
            retrieved)
          schema:
            type: boolean
      responses:
        '200':
          description: List of all visible contact task actions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/Contact_API_V1ActionTaskType
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      security:
        - CP_API_api_key: []
  /v1/contacts/{contactId}/action-task/{taskId}:
    put:
      tags:
        - Contact API V1 Task
      summary: Update contact or relation task
      description: >-
        This operation updates contact or relation task.Only public and private
        task created by employee can be edited.While editing public notes not
        created by employee access to task can not be changed
      operationId: updateTask
      parameters:
        - name: contactId
          in: path
          description: Contact/relation ID
          required: true
          schema:
            type: integer
            format: int32
        - name: taskId
          in: path
          description: Task ID
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: Contact task
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contact_API_V1ActionTask'
        required: false
      responses:
        '201':
          description: Contact/relation task successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact_API_V1ActionTask'
        '400':
          description: Client bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '404':
          description: 'Entity not found '
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      x-codegen-request-body-name: body
      security:
        - CP_API_api_key: []
    delete:
      tags:
        - Contact API V1 Task
      summary: Delete specific contact or relation task
      description: This operation deletes contact or relation task.
      operationId: deleteTask
      parameters:
        - name: contactId
          in: path
          description: Contact/relation ID
          required: true
          schema:
            type: integer
            format: int32
        - name: taskId
          in: path
          description: Task ID
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '204':
          description: Contact/relation task successfully deleted
          content: {}
        '400':
          description: Client bad request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '401':
          description: Client authorization failed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '404':
          description: 'Entity not found '
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      security:
        - CP_API_api_key: []
  /v1/contacts/{contactId}/action-task:
    get:
      tags:
        - Contact API V1 Task
      summary: Get contact tasks
      description: >-
        This operation is used to retrieve a list of all tasks created by
        employee.Service will return all public tasks and private ones that are
        created by employee (via token).If flag isRelation is true then task for
        relation of that contact will be returned, otherwise tasks for contact
        will be retrieved
      operationId: getTasks
      parameters:
        - name: contactId
          in: path
          description: Contact/relation ID
          required: true
          schema:
            type: integer
            format: int32
        - name: isRelation
          in: query
          description: Retrieve tasks for contact or his relation
          schema:
            type: boolean
        - name: page
          in: query
          description: Page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: pageSize
          in: query
          description: Page size
          schema:
            type: integer
            format: int32
            default: 20
      responses:
        '200':
          description: Tasks successfully retrieved
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/Contact_API_V1ActionTaskPageResult
        '400':
          description: Client bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '404':
          description: 'Entity not found '
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      security:
        - CP_API_api_key: []
    post:
      tags:
        - Contact API V1 Task
      summary: Create new contact or relation task
      description: >-
        This operation creates new task for the specific contact or relation.
        Relation can be public (visible to everyone) and private (visible only
        to me)
      operationId: createTask
      parameters:
        - name: contactId
          in: path
          description: Contact/relation ID
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: Contact task
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contact_API_V1ActionTask'
        required: false
      responses:
        '201':
          description: Contact/relation task successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact_API_V1ActionTask'
        '400':
          description: Client bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '404':
          description: 'Entity not found '
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      x-codegen-request-body-name: body
      security:
        - CP_API_api_key: []
  /v1/contacts-search/autocomplete:
    post:
      tags:
        - Contact API V1
      summary: Contact search autocomplete
      description: This operation is used for contacts search autocomplete in Azure search.
      operationId: autocomplete
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/Contact_API_V1AutocompleteSearch
        required: false
      responses:
        '200':
          description: Search autocomplete result
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/Contact_API_V1AutocompleteSearchResult
        '400':
          description: Client bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      x-codegen-request-body-name: body
      security:
        - CP_API_api_key: []
  /v1/contacts-search/suggest:
    post:
      tags:
        - Contact API V1
      summary: Contact search suggest
      description: This operation is used for contacts search suggestions in Azure search.
      operationId: suggest
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/Contact_API_V1AutocompleteSearch
        required: false
      responses:
        '200':
          description: Search suggestions result
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/Contact_API_V1SuggestionsSearchResult
        '400':
          description: Client bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      x-codegen-request-body-name: body
      security:
        - CP_API_api_key: []
  /v1/contacts/{id}/history:
    get:
      tags:
        - Contact API V1
      summary: Get contact history
      description: >-
        This endpoint is used to fetch contact history or in other words
        snapshots of all changes done to contact since creation and data who did
        them and when.If contact history doesnt exists, current state of contact
        will be pushed as snapshot to history service and then returned.
      operationId: getHistory
      parameters:
        - name: id
          in: path
          description: Contact ID
          required: true
          schema:
            type: integer
            format: int32
        - name: v
          in: query
          description: >-
            Filter results by contact version. If set to value 'latest' returns
            a latest version of contact
          schema:
            type: string
        - name: user
          in: query
          description: Filter results by user who made changes on contact.
          schema:
            type: string
        - name: prop
          in: query
          description: Filter results by property changed on contact.
          schema:
            type: string
        - name: dateFrom
          in: query
          description: Filter results by modification date from.
          schema:
            type: string
        - name: dateTo
          in: query
          description: Filter results by modification date to.
          schema:
            type: string
      responses:
        '200':
          description: Contact history data
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Contact_API_V1History'
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '404':
          description: 'Contact not found '
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      security:
        - CP_API_api_key: []
  /v1/contacts:
    get:
      tags:
        - Contact API V1
      summary: Find contacts
      description: >-
        A contact can be found in the CRM using a flexible google-like search in
        which name and address components can be entered completely or
        partially. The order of the search data does not matter when determining
        hits.
      operationId: getContacts
      parameters:
        - name: page
          in: query
          description: Page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: pageSize
          in: query
          description: Page size
          schema:
            type: integer
            format: int32
            default: 20
        - name: q
          in: query
          description: Search arguments separated by spaces
          schema:
            type: string
        - name: type
          in: query
          description: Filter results by contact type
          schema:
            type: string
            enum:
              - I
              - C
              - W
              - F
              - H
        - name: businessGroup
          in: query
          description: Filter results by contact business group
          schema:
            type: string
        - name: isBusiness
          in: query
          description: >-
            Defines if customer type of contacts returned is business (company)
            or not (personal)
          schema:
            type: boolean
        - name: isCustomer
          in: query
          description: >-
            Defines if return contact need to have customer_number (customer_id)
            value
          schema:
            type: boolean
        - name: status
          in: query
          description: Filter results by contact status.
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
              enum:
                - active
                - not_editable
        - name: dealerId
          in: query
          description: Filter results by PP dealerId access_right
          schema:
            type: integer
            format: int32
        - name: dateFrom
          in: query
          description: Filter results modified from date
          schema:
            type: string
        - name: dateTo
          in: query
          description: Filter results modified to date
          schema:
            type: string
        - name: sort
          in: query
          description: Sort results direction
          schema:
            type: string
            default: desc
            enum:
              - asc
              - desc
        - name: sortBy
          in: query
          description: Sort results by
          schema:
            type: string
            default: dateModified
      responses:
        '200':
          description: Search result page with one or more contacts found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact_API_V1PageResult'
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      security:
        - CP_API_api_key: []
    post:
      tags:
        - Contact API V1
      summary: Create new contact
      description: >-
        Validate contact data and if correct create new contact. Otherwise
        returns a list of warnings and correcting suggestions. The operation has
        two additional options. One options is just for validating the data and
        not storing anything into CRM. The other for option is for ignoring
        validation and auto-correction and storing data as is.
      operationId: createContact_v1
      parameters:
        - name: test
          in: query
          description: >-
            Validation only flag. If set to 1 only validation is done but
            nothing is stored into CP.
          schema:
            type: integer
            format: int32
            default: 0
            enum:
              - 0
              - 1
        - name: force
          in: query
          description: >-
            Forced store flag. If set to 1 data is stored into CR regardless of
            data validation or correcting suggestions.
          schema:
            type: integer
            format: int32
            default: 0
            enum:
              - 0
              - 1
      requestBody:
        description: Contact object that needs to be validated and stored to the CP.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contact_API_V1Details'
        required: false
      responses:
        '201':
          description: Contact successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact_API_V1Details'
        '400':
          description: Client bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      x-codegen-request-body-name: body
      security:
        - CP_API_api_key: []
  /v1/contacts/{id}/copy:
    post:
      tags:
        - Contact API V1
      summary: Duplicate contact
      description: >-
        Create a contact duplicate and set contact owner with Contact owner
        source, Contact owner source ID and set contact source.
      operationId: copyContact
      parameters:
        - name: id
          in: path
          description: Contact ID
          required: true
          schema:
            type: integer
            format: int32
        - name: dealerSource
          in: query
          description: Contact owner source
          schema:
            type: string
        - name: dealerId
          in: query
          description: Contact owner source ID
          schema:
            type: string
        - name: source
          in: query
          description: Source name
          schema:
            type: string
      responses:
        '201':
          description: Contact successfully copied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact_API_V1Details'
        '400':
          description: Client bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '404':
          description: 'Contact not found '
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      security:
        - CP_API_api_key: []
  /v1/contacts/{id}/assigned-employees:
    post:
      tags:
        - Contact API V1
      summary: Assigns new employee and dealer to specified contact
      description: >-
        This operation connects dealer/employee entities to specified contact -
        CURRENTLY DISABLED
      operationId: assignEmployees
      parameters:
        - name: id
          in: path
          description: Contact ID
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: >-
          ContactSalesman (dealer/employee) object that needs to be stored to
          the CRM.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contact_API_V1Salesman'
        required: false
      responses:
        '200':
          description: ContactSalesman Resource stored in CP
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact_API_V1Salesman'
        '400':
          description: Client bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '404':
          description: 'Contact not found '
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      x-codegen-request-body-name: body
      security:
        - CP_API_api_key: []
  /v1/assigned-employees/aftersales-persons:
    get:
      tags:
        - Contact API V1
      summary: Get assigned aftersales persons for a dealer
      description: This endpoint returns all assigned aftersales persons visible to the dealer of logged in user
      operationId: getAfterSalesPersons
      responses:
        '200':
          description: AssignedEmployee Resource stored in CP
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Contact_API_V1AssignedEmployee'
        '400':
          description: Client bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '404':
          description: Contact not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      security:
        - CP_API_api_key: []
  /v1/contacts/{id}/basic:
    get:
      tags:
        - Contact API V1
      summary: Fetch contact by ID
      description: >-
        This operation is used to read minimal contact data from CP for
        requested contactID.
      operationId: getBasicContact
      parameters:
        - name: id
          in: path
          description: Contact ID
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Contact found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact_API_V1'
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '404':
          description: Contact not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      security:
        - CP_API_api_key: []
  /v1/contacts/{id}/owner:
    put:
      tags:
        - Contact API V1
      summary: Owner change on contact
      description: >-
        This operation changes contact owner. Otherwise returns a list of
        warnings and correcting suggestions.
      operationId: ownerChange
      parameters:
        - name: id
          in: path
          description: Contact ID
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: .
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CP_API_Resource'
        required: false
      responses:
        '202':
          description: Owner successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact_API_V1Details'
        '400':
          description: Client bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '404':
          description: Contact or Dealer not found in CP
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      x-codegen-request-body-name: body
      security:
        - CP_API_api_key: []
  /v1/contacts/{id}/language/{language}:
    delete:
      tags:
        - Contact API V1
      summary: Delete contact alternative language
      description: >-
        This operation deletes contact alternative language, if requested
        language is contact's primary language service will throw exception.
      operationId: deleteLanguage
      parameters:
        - name: id
          in: path
          description: Contact ID
          required: true
          schema:
            type: integer
            format: int32
        - name: language
          in: path
          description: Language ISO code
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Contact language successfully deleted
          content: {}
        '400':
          description: Client bad request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '401':
          description: Client authorization failed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '404':
          description: 'Contact not found '
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      security:
        - CP_API_api_key: []
  /v1/contacts/{contactId}/transfer:
    post:
      tags:
        - Contact API V1
      summary: Transfer list contacts to master contact
      description: 'This operation transfer of list contacts to master contact. '
      operationId: transferContacts_v1
      parameters:
        - name: contactId
          in: path
          description: Contact/master ID
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: List of contact IDs
        content:
          application/json:
            schema:
              type: array
              items:
                type: integer
                format: int32
        required: false
      responses:
        '201':
          description: Contacts successfully transferred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '400':
          description: Client bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '404':
          description: 'Entity not found '
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      x-codegen-request-body-name: body
      security:
        - CP_API_api_key: []
  /v1/contacts/{id}/usage:
    get:
      tags:
        - Contact API V1
      summary: Get contact usages
      description: >-
        This operation is used to retrieve contacts list of external system data
        and its usages.
      operationId: getContactUsages
      parameters:
        - name: id
          in: path
          description: Contact ID
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: List of contact usages
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Contact_API_V1Usage'
        '400':
          description: Client bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '404':
          description: 'Contact not found '
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      security:
        - CP_API_api_key: []
  /v1/contacts/{id}:
    get:
      tags:
        - Contact API V1
      summary: Fetch contact by ID
      description: >-
        This operation is used to read contact data from CP for requested
        contactID.
      operationId: getContact_v1
      parameters:
        - name: id
          in: path
          description: Contact ID
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Contact found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact_API_V1Details'
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '404':
          description: Contact not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      security:
        - CP_API_api_key: []
    put:
      tags:
        - Contact API V1
      summary: Update existing contact
      description: >-
        Validate contact data and if correct update an existing contact.
        Otherwise returns a list of warnings and correcting suggestions. The
        operation has two additional options. One options is just for validating
        the data and not storing anything into CRM. The other for option is for
        ignoring validation and auto-correction and storing data as is.
      operationId: updateContact_v1
      parameters:
        - name: id
          in: path
          description: Contact ID
          required: true
          schema:
            type: integer
            format: int32
        - name: test
          in: query
          description: >-
            Validation only flag. If set to 1 only validation is done but
            nothing is stored into CP.
          schema:
            type: integer
            format: int32
            default: 0
            enum:
              - 0
              - 1
        - name: force
          in: query
          description: >-
            Forced store flag. If set to 1 data is stored into CR regardless of
            data validation or correcting suggestions.
          schema:
            type: integer
            format: int32
            default: 0
            enum:
              - 0
              - 1
      requestBody:
        description: Contact object that needs to be validated and stored to the CP.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contact_API_V1Details'
        required: false
      responses:
        '202':
          description: Contact successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact_API_V1Details'
        '400':
          description: Client bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '404':
          description: Contact not found in CP
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      x-codegen-request-body-name: body
      security:
        - CP_API_api_key: []
  /v1/contacts/{id}/salesman/c360:
    get:
      tags:
        - Contact API V1
      summary: >-
        Find dealers and employees who worked with specified contact inside your
        main dealership
      description: >-
        This operation is used to fetch all dealers/employees that belong under
        your main dealership who worked with specified contact
      operationId: getContactSalesmanC360
      parameters:
        - name: id
          in: path
          description: Contact ID
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Contact and employee/dealer data found in CP.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact_API_V1Salesman'
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '404':
          description: 'Contact not found '
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      security:
        - CP_API_api_key: []
  /v1/contacts/{id}/salesman/c360/list:
    get:
      tags:
        - Contact API V1
      summary: Find dealers and employees who worked with specified contact paginated
      description: >-
        This operation is used to fetch all dealers/employees who worked with
        specified contact and wrap it in paginated object
      operationId: getContactSalesmanList
      parameters:
        - name: id
          in: path
          description: Contact ID
          required: true
          schema:
            type: integer
            format: int32
        - name: page
          in: query
          description: Page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: pageSize
          in: query
          description: Page size
          schema:
            type: integer
            format: int32
            default: 20
      responses:
        '200':
          description: Contact and employee/dealer data found in CP.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/Contact_API_V1SalesmanPageResult
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '404':
          description: 'Contact not found '
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      security:
        - CP_API_api_key: []
  /v1/contacts/{id}/salesman:
    get:
      tags:
        - Contact API V1
      summary: Find dealers and employees who worked with specified contact
      description: >-
        This operation is used to fetch all dealers/employees who worked with
        specified contact
      operationId: getContactSalesman
      parameters:
        - name: id
          in: path
          description: Contact ID
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Contact and employee/dealer data found in CP.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Contact_API_V1Salesman'
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '404':
          description: 'Contact not found '
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      security:
        - CP_API_api_key: []
  /v1/contacts/basic:
    post:
      tags:
        - Contact API V1
      summary: Create new basic contact
      description: >-
        Validate contact data and if correct create new contact. Otherwise
        returns a list of warnings and correcting suggestions. The operation has
        two additional options. One options is just for validating the data and
        not storing anything into CRM. The other for option is for ignoring
        validation and auto-correction and storing data as is.
      operationId: createBasicContact
      parameters:
        - name: test
          in: query
          description: >-
            Validation only flag. If set to 1 only validation is done but
            nothing is stored into CP.
          schema:
            type: integer
            format: int32
            default: 0
            enum:
              - 0
              - 1
        - name: force
          in: query
          description: >-
            Forced store flag. If set to 1 data is stored into CR regardless of
            data validation or correcting suggestions.
          schema:
            type: integer
            format: int32
            default: 0
            enum:
              - 0
              - 1
      requestBody:
        description: Contact object that needs to be validated and stored to the CP.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contact_API_V1Details'
        required: false
      responses:
        '201':
          description: Contact successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact_API_V1Details'
        '400':
          description: Client bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      x-codegen-request-body-name: body
      security:
        - CP_API_api_key: []
  /v1/contacts/source:
    get:
      tags:
        - Contact API V1
      summary: Find contact by external id data
      description: This operation is used to find contact by external id data.
      operationId: getContactBySource
      parameters:
        - name: sourceName
          in: query
          description: Contact source name
          schema:
            type: string
        - name: sourceId
          in: query
          description: Contact source ID
          schema:
            type: string
      responses:
        '204':
          description: Contact found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact_API_V1Details'
        '400':
          description: Client bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '404':
          description: 'Entity not found '
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      security:
        - CP_API_api_key: []
  /v1/contacts/{id}/source/{sourceName}:
    delete:
      tags:
        - Contact API V1
      summary: Delete contact source
      description: This operation is used to delete requested contact source.
      operationId: deleteContactSource
      parameters:
        - name: id
          in: path
          description: Contact ID
          required: true
          schema:
            type: integer
            format: int32
        - name: sourceName
          in: path
          description: Source name
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Contact source successfully deleted
          content: {}
        '400':
          description: Client bad request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '401':
          description: Client authorization failed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '404':
          description: 'Contact not found '
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      security:
        - CP_API_api_key: []
  /v1/contacts/basic/{id}:
    put:
      tags:
        - Contact API V1
      summary: Update existing basic contact
      description: >-
        Validate contact data and if correct update an existing contact.
        Otherwise returns a list of warnings and correcting suggestions. The
        operation has two additional options. One options is just for validating
        the data and not storing anything into CRM. The other for option is for
        ignoring validation and auto-correction and storing data as is.
      operationId: updateBasicContact
      parameters:
        - name: id
          in: path
          description: Contact ID
          required: true
          schema:
            type: integer
            format: int32
        - name: test
          in: query
          description: >-
            Validation only flag. If set to 1 only validation is done but
            nothing is stored into CP.
          schema:
            type: integer
            format: int32
            default: 0
            enum:
              - 0
              - 1
        - name: force
          in: query
          description: >-
            Forced store flag. If set to 1 data is stored into CR regardless of
            data validation or correcting suggestions.
          schema:
            type: integer
            format: int32
            default: 0
            enum:
              - 0
              - 1
      requestBody:
        description: Contact object that needs to be validated and stored to the CP.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contact_API_V1Details'
        required: false
      responses:
        '202':
          description: Contact successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact_API_V1Details'
        '400':
          description: Client bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '404':
          description: Contact not found in CP
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      x-codegen-request-body-name: body
      security:
        - CP_API_api_key: []
  /v1/contacts-text-search:
    post:
      tags:
        - Contact API V1
      summary: Contact full text search
      description: >-
        This operation is used for searching contacts in Azure search or local
        DB based on configuration.Search conditions are passed as
        ContactFullTextSearch object and returned as paginated PageResult
        containing list of Contact objects.
      operationId: searchContacts_0
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contact_API_V1FullTextSearch'
        required: false
      responses:
        '200':
          description: Search result page with one or more contacts found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact_API_V1PageResult'
        '400':
          description: Client bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      x-codegen-request-body-name: body
      security:
        - CP_API_api_key: []
  /v1/contacts-text-search/export:
    post:
      tags:
        - Contact API V1
      summary: Contact full text search export
      description: >-
        This operation is used for exporting contacts returned in Contact full
        text search endpoint.Search conditions are passed as
        ContactFullTextSearch object and returned as csv OutputStream.
      operationId: exportContacts
      parameters:
        - name: lang
          in: query
          schema:
            type: string
        - name: format
          in: query
          description: Format of exported document
          schema:
            type: string
            default: csv
            enum:
              - xlsx
              - csv
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contact_API_V1FullTextSearch'
        required: false
      responses:
        '200':
          description: CSV output stream with one or more contacts
          content:
            application/octet-stream:
              schema:
                type: array
                items:
                  pattern: >-
                    ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
        '400':
          description: Client bad request
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '401':
          description: Client authorization failed
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      x-codegen-request-body-name: body
      security:
        - CP_API_api_key: []
  /v1/contact-groups:
    get:
      tags:
        - Config
      summary: Retrieve contact groups
      description: >-
        This operation is used to retrieve list of all contact groups and their
        child groups.
      operationId: getGroups
      responses:
        '200':
          description: List of all contact groups
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Contact_API_V1Group'
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      security:
        - CP_API_api_key: []
  /v1/contact-method:
    get:
      tags:
        - Config
      summary: Retrieve visible contact methods
      description: >-
        This operation is used to retrieve a list of all visible methods for
        contacting customer (eg. phone, mobile).
      operationId: getContactMethods
      responses:
        '200':
          description: List of all visible contact methods
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Contact_API_V1Method'
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      security:
        - CP_API_api_key: []
  /v1/contacts/{contactId}/notes:
    get:
      tags:
        - Contact API V1 Note
      summary: Get contact notes
      description: >-
        This operation is used to retrieve a list of all notes created by
        employees for contact contact.Service will return all public notes and
        private ones that are created by employee (via token)
      operationId: getNotes
      parameters:
        - name: contactId
          in: path
          description: Contact ID
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Notes successfully retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/Contact_API_V1NoteResource
        '400':
          description: Client bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '404':
          description: 'Contact not found '
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      security:
        - CP_API_api_key: []
    post:
      tags:
        - Contact API V1 Note
      summary: Create new contact note
      description: >-
        This operation creates new note for the specific contact. Notes can be
        public (visible to everyone) and private (visible only to me)
      operationId: createNote
      parameters:
        - name: contactId
          in: path
          description: Contact ID
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: Contact note
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contact_API_V1NoteResource'
        required: false
      responses:
        '201':
          description: Contact note successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact_API_V1NoteResource'
        '400':
          description: Client bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '404':
          description: 'Contact not found '
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      x-codegen-request-body-name: body
      security:
        - CP_API_api_key: []
  /v1/contacts/{contactId}/notes/{noteId}:
    put:
      tags:
        - Contact API V1 Note
      summary: Update contact note
      description: >-
        This operation updates contact note.Only public and private notes
        created by employee can be edited.While editing public notes not created
        by employee access to note can not be changed
      operationId: updateNote
      parameters:
        - name: contactId
          in: path
          description: Contact ID
          required: true
          schema:
            type: integer
            format: int32
        - name: noteId
          in: path
          description: Note ID
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: Contact note
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contact_API_V1NoteResource'
        required: false
      responses:
        '202':
          description: Contact note successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact_API_V1NoteResource'
        '400':
          description: Client bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '404':
          description: 'Contact not found '
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      x-codegen-request-body-name: body
      security:
        - CP_API_api_key: []
    delete:
      tags:
        - Contact API V1 Note
      summary: Delete contact note
      description: >-
        This operation deletes contact note.Note and/or connected documents are
        soft deleted.
      operationId: deleteNote
      parameters:
        - name: contactId
          in: path
          description: Contact ID
          required: true
          schema:
            type: integer
            format: int32
        - name: noteId
          in: path
          description: Note ID
          required: true
          schema:
            type: integer
            format: int32
        - name: deleteDocuments
          in: query
          description: Delete connected documents
          schema:
            type: boolean
            default: false
      responses:
        '204':
          description: Contact note successfully deleted
          content: {}
        '400':
          description: Client bad request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '401':
          description: Client authorization failed
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '404':
          description: 'Contact not found '
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      security:
        - CP_API_api_key: []
  /v1/contacts/ownership/{ownershipId}/drivers:
    get:
      tags:
        - Contact API V1 Ownership
      summary: Find drivers for specific contacts vehicle
      description: >-
        This operation is used to retrieve drivers (Contacts) which are in
        relation with specific contacts vehicle regardless of vehicle driver
        status (eg. active, inactive, declined).
      operationId: getContactVehicleDrivers
      parameters:
        - name: ownershipId
          in: path
          description: Ownership ID
          required: true
          schema:
            type: integer
            format: int32
        - name: page
          in: query
          description: Page size
          schema:
            type: integer
            format: int32
            default: 1
        - name: pageSize
          in: query
          description: Page number
          schema:
            type: integer
            format: int32
            default: 20
      responses:
        '200':
          description: List of all contact vehicle drivers
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/Contact_API_V1VehicleDriver
        '400':
          description: Client bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '404':
          description: 'Entity not found '
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      security:
        - CP_API_api_key: []
    post:
      tags:
        - Contact API V1 Ownership
      summary: Create contact vehicle driver
      description: >-
        This operation is used to create contact vehicle driver data in CP
        (assign existing contact to contact vehicle as driver).
      operationId: createContactVehicleDriver
      parameters:
        - name: ownershipId
          in: path
          description: Ownership ID
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: >-
          Object that will create new driver on contacts vehicle with existing
          contact
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contact_API_V1VehicleDriver'
        required: false
      responses:
        '201':
          description: Contact vehicle driver created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact_API_V1VehicleDriver'
        '400':
          description: Client bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '404':
          description: 'Entity not found '
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      x-codegen-request-body-name: body
      security:
        - CP_API_api_key: []
  /v1/contacts/ownership/{ownershipId}:
    get:
      tags:
        - Contact API V1 Ownership
      summary: Find specific contact vehicle
      description: This operation is used to read specific contact vehicle data from CP.
      operationId: getContactVehicle
      parameters:
        - name: ownershipId
          in: path
          description: Ownership ID
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Contact vehicle found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact_API_V1Vehicle'
        '400':
          description: Client bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '401':
          description: ClientVehicle authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '404':
          description: 'Entity not found '
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      security:
        - CP_API_api_key: []
  /v1/contacts/ownership/{ownershipId}/frequent-driver:
    put:
      tags:
        - Contact API V1 Ownership
      summary: Update contact frequent vehicle driver
      description: >-
        This operation is used to update contact vehicle frequent driver data in
        CP for specific contact, vehicle.
      operationId: updateContactVehicleFrequentDriver
      parameters:
        - name: ownershipId
          in: path
          description: Ownership ID
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: Object that will update frequent driver on contacts vehicle
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/Contact_API_V1VehicleFrequentDriver
        required: false
      responses:
        '202':
          description: Contact vehicle frequent driver updated
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/Contact_API_V1VehicleFrequentDriver
        '400':
          description: Client bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '404':
          description: 'Entity not found '
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      x-codegen-request-body-name: body
      security:
        - CP_API_api_key: []
    post:
      tags:
        - Contact API V1 Ownership
      summary: Create contact vehicle frequent driver
      description: >-
        This operation is used to create contact vehicle frequent driver data in
        CP.
      operationId: createContactVehicleFrequentDriver
      parameters:
        - name: ownershipId
          in: path
          description: Ownership ID
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: >-
          Object that will create new frequent driver on contacts vehicle with
          existing contact
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/Contact_API_V1VehicleFrequentDriver
        required: false
      responses:
        '201':
          description: Contact vehicle frequent driver created
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/Contact_API_V1VehicleFrequentDriver
        '400':
          description: Client bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '404':
          description: 'Entity not found '
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      x-codegen-request-body-name: body
      security:
        - CP_API_api_key: []
    delete:
      tags:
        - Contact API V1 Ownership
      summary: Delete contact vehicle frequent driver
      description: >-
        This operation is used to delete contact vehicle frequent driver data in
        CP for specific contact, vehicle.
      operationId: deleteContactVehicleFrequentDriver
      parameters:
        - name: ownershipId
          in: path
          description: Ownership ID
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '204':
          description: Contact vehicle frequent driver deleted
          content: {}
        '400':
          description: Client bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '404':
          description: 'Entity not found '
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      security:
        - CP_API_api_key: []
  /v1/contacts/ownership/{ownershipId}/history:
    get:
      tags:
        - Contact API V1 Ownership
      summary: Find specific contact vehicle history record
      description: >-
        This operation is used to read specific contact vehicle history record
        data from CP.
      operationId: getContactVehicleHistory
      parameters:
        - name: ownershipId
          in: path
          description: Ownership ID
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Contact vehicle found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_VehicleHistory'
        '400':
          description: Client bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '404':
          description: 'Entity not found '
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      security:
        - CP_API_api_key: []
  /v1/contacts/ownership/{ownershipId}/drivers/{driverId}:
    get:
      tags:
        - Contact API V1 Ownership
      summary: Find specific contact vehicle driver
      description: >-
        This operation is used to read contact vehicle driver data from CP for
        specific contact, vehicle and driver(contact).
      operationId: getContactVehicleDriver
      parameters:
        - name: ownershipId
          in: path
          description: Ownership ID
          required: true
          schema:
            type: integer
            format: int32
        - name: driverId
          in: path
          description: Driver ID
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Contact vehicle driver found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact_API_V1VehicleDriver'
        '400':
          description: Client bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '404':
          description: 'Entity not found '
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      security:
        - CP_API_api_key: []
    put:
      tags:
        - Contact API V1 Ownership
      summary: Update contact vehicle driver
      description: >-
        This operation is used to update contact vehicle driver data in CP for
        specific contact, vehicle and driver(contact).
      operationId: updateContactVehicleDriver
      parameters:
        - name: ownershipId
          in: path
          description: Ownership ID
          required: true
          schema:
            type: integer
            format: int32
        - name: driverId
          in: path
          description: Driver ID
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: Object that will update driver on contacts vehicle
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contact_API_V1VehicleDriver'
        required: false
      responses:
        '202':
          description: Contact vehicle driver updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact_API_V1VehicleDriver'
        '400':
          description: Client bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '404':
          description: 'Entity not found '
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      x-codegen-request-body-name: body
      security:
        - CP_API_api_key: []
    delete:
      tags:
        - Contact API V1 Ownership
      summary: Delete contact vehicle driver
      description: >-
        This operation is used to delete contact vehicle driver data in CP for
        specific contact, vehicle and driver(contact).
      operationId: deleteContactVehicleDriver
      parameters:
        - name: ownershipId
          in: path
          description: Ownership ID
          required: true
          schema:
            type: integer
            format: int32
        - name: driverId
          in: path
          description: Driver ID
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '204':
          description: Contact vehicle driver deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact_API_V1Vehicle'
        '400':
          description: Client bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '404':
          description: 'Entity not found '
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      security:
        - CP_API_api_key: []
  /v1/contacts/ownership/{ownershipId}/deactivate:
    put:
      tags:
        - Contact API V1 Ownership
      summary: Deactivate specific contact vehicle ownership
      description: >-
        This operation is used to deactivate specific contact vehicle ownership
        data from CP. It is not really deleted, but instead, it receives a
        specific 'status' which can be filtered out.
      operationId: deactivateContactVehicle
      parameters:
        - name: ownershipId
          in: path
          description: Ownership ID
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contact_API_V1Vehicle'
        required: false
      responses:
        '202':
          description: Contact vehicle found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact_API_V1Vehicle'
        '400':
          description: Missing mandatory data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '404':
          description: Contact not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      x-codegen-request-body-name: body
      security:
        - CP_API_api_key: []
  /v1/contacts/ownership/{ownershipId}/dealer:
    get:
      tags:
        - Contact API V1 Ownership
      summary: Find contact vehicle preferred dealer/employee
      description: >-
        This operation is used to read contact vehicle current dealer/employee
        and preferred dealer/employee data from CP.
      operationId: getVehicleDealer
      parameters:
        - name: ownershipId
          in: path
          description: Ownership ID
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Contact vehicle dealer/employee found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact_API_V1VehicleDealer'
        '400':
          description: Client bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '404':
          description: 'Entity not found '
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      security:
        - CP_API_api_key: []
    put:
      tags:
        - Contact API V1 Ownership
      summary: Update contact vehicle preferred dealer/employee
      description: >-
        This operation is used to update preferred contact vehicle sale data in
        CP.ContactVehicle - Dealer/Employee relation will be updated/created if
        requested one doesnt exists.
      operationId: updateVehicleDealer
      parameters:
        - name: ownershipId
          in: path
          description: Ownership ID
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: Contact vehicle preferred dealership and employee.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contact_API_V1VehicleDealer'
        required: false
      responses:
        '202':
          description: Contact vehicle dealer/employee updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact_API_V1VehicleDealer'
        '400':
          description: Client bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '404':
          description: 'Entity not found '
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      x-codegen-request-body-name: body
      security:
        - CP_API_api_key: []
  /v1/contacts/ownership/current-owner:
    get:
      tags:
        - Contact API V1 Ownership
      summary: Get current owner of a vehicle by VIN
      description: This operation is used to fetching current owner of a vehicle from CP.
      operationId: getCurrentVehicleOwnerByVin
      parameters:
        - name: vin
          in: query
          description: Vehicle VIN
          schema:
            type: string
      responses:
        '200':
          description: Vehicle owner found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact_API_V1Details'
        '400':
          description: Client bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '401':
          description: ClientVehicle authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '404':
          description: 'Entity not found '
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      security:
        - CP_API_api_key: []
  /v1/contacts/ownership/active:
    get:
      tags:
        - Contact API V1 Ownership
      summary: Get current ownership data of a vehicle by VIN
      description: >-
        This operation is used to fetching current ownership data of a vehicle
        from CP.
      operationId: getCurrentOwnershipByVin
      parameters:
        - name: vin
          in: query
          description: Vehicle VIN
          schema:
            type: string
        - name: registrationPlate
          in: query
          description: registrationPlate
          schema:
            type: string
        - name: firstRegistration
          in: query
          description: firstRegistration
          schema:
            type: string
            format: dd.MM.yyyy
      responses:
        '200':
          description: Vehicle ownership found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact_API_V1Vehicle'
        '400':
          description: Client bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '401':
          description: ClientVehicle authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '404':
          description: 'Entity not found '
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      security:
        - CP_API_api_key: []
  /v1/contacts/{parentId}/relations/{contactId}:
    get:
      tags:
        - Contact API V1 Relation
      summary: Get relations
      description: >-
        This operation is used to fetch contact relations for specified parent
        (business) and personal contact.
      operationId: getRelation
      parameters:
        - name: parentId
          in: path
          description: Parent contact ID
          required: true
          schema:
            type: integer
            format: int32
        - name: contactId
          in: path
          description: Contact ID
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact_API_V1Relation'
        '400':
          description: Client bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '404':
          description: 'Entity not found '
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      security:
        - CP_API_api_key: []
  /v1/contacts/{parentId}/relations/{contactId}/types:
    put:
      tags:
        - Contact API V1 Relation
      summary: Update relation
      description: This operation is used to update contact relation.
      operationId: updateType
      parameters:
        - name: parentId
          in: path
          description: Parent contact ID
          required: true
          schema:
            type: integer
            format: int32
        - name: contactId
          in: path
          description: Contact ID
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: Contact relation.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contact_API_V1RelationType'
        required: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact_API_V1RelationType'
        '400':
          description: Client bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '404':
          description: 'Entity not found '
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      x-codegen-request-body-name: body
      security:
        - CP_API_api_key: []
    post:
      tags:
        - Contact API V1 Relation
      summary: Create relation
      description: >-
        This operation is used to create relation.Contact relation can be
        created only between business and personal contact.
      operationId: storeType
      parameters:
        - name: parentId
          in: path
          description: Parent contact ID
          required: true
          schema:
            type: integer
            format: int32
        - name: contactId
          in: path
          description: Contact ID
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: Contact relation.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contact_API_V1RelationType'
        required: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact_API_V1RelationType'
        '400':
          description: Client bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '404':
          description: 'Entity not found '
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      x-codegen-request-body-name: body
      security:
        - CP_API_api_key: []
  /v1/contacts/{parentId}/relations:
    get:
      tags:
        - Contact API V1 Relation
      summary: Get all relations
      description: >-
        This operation is used to fetch all contact relations for specified
        parent (business) contact.
      operationId: getRelations
      parameters:
        - name: parentId
          in: path
          description: Parent contact ID
          required: true
          schema:
            type: integer
            format: int32
        - name: types
          in: query
          description: Contact relation type codes
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Contact_API_V1Relation'
        '400':
          description: Client bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '404':
          description: 'Entity not found '
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      security:
        - CP_API_api_key: []
  /v1/contacts/{parentId}/relations/{contactId}/email:
    post:
      tags:
        - Contact API V1 Relation
      summary: Store relation email
      description: This operation is used to store contact relation email.
      operationId: storeEmail
      parameters:
        - name: parentId
          in: path
          description: Parent contact ID
          required: true
          schema:
            type: integer
            format: int32
        - name: contactId
          in: path
          description: Contact ID
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: Contact relation email.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contact_API_V1Email'
        required: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact_API_V1Email'
        '400':
          description: Client bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '404':
          description: 'Entity not found '
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      x-codegen-request-body-name: body
      security:
        - CP_API_api_key: []
    delete:
      tags:
        - Contact API V1 Relation
      summary: Delete relation email
      description: This operation is used to delete contact relation email.
      operationId: deleteEmail
      parameters:
        - name: parentId
          in: path
          description: Parent contact ID
          required: true
          schema:
            type: integer
            format: int32
        - name: contactId
          in: path
          description: Contact ID
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content: {}
        '400':
          description: Client bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '404':
          description: 'Entity not found '
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      security:
        - CP_API_api_key: []
  /v1/contacts/{parentId}/relations/{contactId}/telephones:
    post:
      tags:
        - Contact API V1 Relation
      summary: Store relation telephone
      description: This operation is used to store contact relation telephone.
      operationId: storeTelephone
      parameters:
        - name: parentId
          in: path
          description: Parent contact ID
          required: true
          schema:
            type: integer
            format: int32
        - name: contactId
          in: path
          description: Contact ID
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: Contact relation telephone.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contact_API_V1Telephone'
        required: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact_API_V1Telephone'
        '400':
          description: Client bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '404':
          description: 'Entity not found '
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      x-codegen-request-body-name: body
      security:
        - CP_API_api_key: []
  /v1/contacts/{parentId}/relations/{contactId}/telephones/{type}/{usage}:
    delete:
      tags:
        - Contact API V1 Relation
      summary: Delete relation telephone
      description: This operation is used to delete contact relation telephone.
      operationId: deleteTelephone
      parameters:
        - name: parentId
          in: path
          description: Parent contact ID
          required: true
          schema:
            type: integer
            format: int32
        - name: contactId
          in: path
          description: Contact ID
          required: true
          schema:
            type: integer
            format: int32
        - name: type
          in: path
          description: Telephone type
          required: true
          schema:
            type: string
        - name: usage
          in: path
          description: Telephone usage
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content: {}
        '400':
          description: Client bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '404':
          description: 'Entity not found '
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      security:
        - CP_API_api_key: []
  /v1/contacts/{parentId}/relations/{contactId}/types/{code}:
    delete:
      tags:
        - Contact API V1 Relation
      summary: Delete relation
      description: This operation is used to delete contact relation.
      operationId: deleteType
      parameters:
        - name: parentId
          in: path
          description: Parent contact ID
          required: true
          schema:
            type: integer
            format: int32
        - name: contactId
          in: path
          description: Contact ID
          required: true
          schema:
            type: integer
            format: int32
        - name: code
          in: path
          description: Contact relation type code.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content: {}
        '400':
          description: Client bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '404':
          description: 'Entity not found '
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      security:
        - CP_API_api_key: []
  /v2/contacts-search:
    post:
      tags:
        - Contact API V2 Search
      summary: Text search for contacts
      description: >-
        Full-text google-like search for contacts. Search is performed on a
        single input where results are returned based on a different criteria
        which are defined on a backend search configuration. Multiple input
        values are treated as a whole search term and additionally split by
        whitespace and searched each as separate term. Additionally we also
        provide a list of filters to help you narrow down on a desired data set.
      operationId: searchContacts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contact_API_V2Search'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Ownership_API_PageResult'
                  - type: object
                    properties:
                      content:
                        type: array
                        items:
                          $ref: '#/components/schemas/Contact_API_V2Basic'
        '400':
          $ref: '#/components/responses/Ownership_API_NotFound'
        '401':
          $ref: '#/components/responses/Ownership_API_Unauthorized'
        '500':
          $ref: '#/components/responses/Ownership_API_ServerError'
  /v2/contacts/{contactId}/minimal:
    get:
      tags:
        - Contact API V2
      summary: Get minimal contact data
      description: >-
        Fast API which will retrieve stored contact data but in minimal and most
        common data format.
      operationId: getContactMinimal
      parameters:
        - $ref: '#/components/parameters/Contact_API_V2Id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact_API_V2Minimal'
        '401':
          $ref: '#/components/responses/Ownership_API_Unauthorized'
        '404':
          $ref: '#/components/responses/Ownership_API_NotFound'
        '500':
          $ref: '#/components/responses/Ownership_API_ServerError'
  /v2/contacts/{contactId}/basic:
    get:
      tags:
        - Contact API V2
      summary: Get most common contact data
      description: Retrieve all common and most common contact data set.
      operationId: getContactBasic
      parameters:
        - $ref: '#/components/parameters/Contact_API_V2Id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact_API_V2Basic'
        '401':
          $ref: '#/components/responses/Ownership_API_Unauthorized'
        '404':
          $ref: '#/components/responses/Ownership_API_NotFound'
        '500':
          $ref: '#/components/responses/Ownership_API_ServerError'
  /v2/contacts/{contactId}:
    get:
      tags:
        - Contact API V2
      summary: Get extended contact data
      description: Retrieve all contact data in with extended data format.
      operationId: getContact
      parameters:
        - $ref: '#/components/parameters/Contact_API_V2Id'
        - $ref: '#/components/parameters/Ownership_API_include'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact_API_V2'
        '401':
          $ref: '#/components/responses/Ownership_API_Unauthorized'
        '404':
          $ref: '#/components/responses/Ownership_API_NotFound'
        '500':
          $ref: '#/components/responses/Ownership_API_ServerError'
    put:
      tags:
        - Contact API V2
      summary: Update all properties of contact
      description: >-
        Update all properties of contact. This operation should be used only
        when consumer is planning to update every property that is contained on
        specified contact (whole representation of Contact entity). If you only
        need to update only few properties instead of whole object, we suggest
        you use PATCH operation.
      operationId: updateContact
      parameters:
        - $ref: '#/components/parameters/Contact_API_V2Id'
        - $ref: '#/components/parameters/Ownership_API_force'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contact_API_V2'
      responses:
        '200':
          description: Contact successfully updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact_API_V2'
        '400':
          $ref: '#/components/responses/Ownership_API_BadRequest'
        '401':
          $ref: '#/components/responses/Ownership_API_Unauthorized'
        '404':
          $ref: '#/components/responses/Ownership_API_NotFound'
        '500':
          $ref: '#/components/responses/Ownership_API_ServerError'
    patch:
      tags:
        - Contact API V2
      summary: Update only needed properties of contact
      description: >-
        Update only provided properties of contact. This operation should be
        used if consumer client is not implementing/using whole representation
        of Contact object that is provided. We recommend using this operation as
        most of clients only use few attributes.
      operationId: updateContactProvided
      parameters:
        - $ref: '#/components/parameters/Contact_API_V2Id'
        - $ref: '#/components/parameters/Ownership_API_force'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contact_API_V2'
      responses:
        '200':
          description: Contact successfully patched.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact_API_V2'
        '400':
          $ref: '#/components/responses/Ownership_API_BadRequest'
        '401':
          $ref: '#/components/responses/Ownership_API_Unauthorized'
        '404':
          $ref: '#/components/responses/Ownership_API_NotFound'
        '500':
          $ref: '#/components/responses/Ownership_API_ServerError'
  /v2/contacts:
    post:
      tags:
        - Contact API V2
      summary: Create new contact
      description: >-
        Create a new contact inside Customer Profile system. In the background
        Customer Profile will perform duplicate check on the provided contact
        data unless force=true flag is set, then new contact is stored
        regardless.
      operationId: createContact
      parameters:
        - $ref: '#/components/parameters/Ownership_API_force'
        - $ref: '#/components/parameters/Ownership_API_cidLength'
        - $ref: '#/components/parameters/Ownership_API_dealerId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contact_API_V2'
      responses:
        '201':
          description: Contact successfully created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact_API_V2'
        '400':
          $ref: '#/components/responses/Ownership_API_BadRequest'
        '401':
          $ref: '#/components/responses/Ownership_API_Unauthorized'
        '500':
          $ref: '#/components/responses/Ownership_API_ServerError'
  /v2/contacts/{contactId}/transfer:
    put:
      tags:
        - Contact API V2
      summary: Transfer multiple contacts to a single one
      description: >-
        Accepts a list of CP Contact IDs which will me transferred to a
        specified contact in path parameter. These contacts will be set to a
        'converted' status, and their internal data will be migrated to a new
        'parent' contact.
      operationId: transferContacts
      parameters:
        - $ref: '#/components/parameters/Contact_API_V2Id'
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                description: CP contact IDs to transfer
                type: integer
      responses:
        '200':
          description: Contacts successfully transferred.
        '400':
          $ref: '#/components/responses/Ownership_API_BadRequest'
        '401':
          $ref: '#/components/responses/Ownership_API_Unauthorized'
        '404':
          $ref: '#/components/responses/Ownership_API_NotFound'
        '500':
          $ref: '#/components/responses/Ownership_API_ServerError'
  /v2/contacts/{contactId}/transfer/suggestion:
    get:
      tags:
        - Contact API V2
      summary: Get list of transfer suggestions.
      description: Retrieve multiple suggestions for transfer.
      operationId: transferSuggestion
      parameters:
        - $ref: '#/components/parameters/Contact_API_V2Id'
      responses:
        '200':
          description: List of suggested contact duplicates returned.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Contact_API_V2Duplicate'
        '400':
          $ref: '#/components/responses/Ownership_API_BadRequest'
        '401':
          $ref: '#/components/responses/Ownership_API_Unauthorized'
        '404':
          $ref: '#/components/responses/Ownership_API_NotFound'
        '500':
          $ref: '#/components/responses/Ownership_API_ServerError'
  /v2/contacts/{contactId}/tags:
    get:
      tags:
        - Contact API V2 Tags
      summary: Get list of contact tags
      description: Retrieve a list of all tags that specified contact has.
      operationId: getContactTags
      parameters:
        - $ref: '#/components/parameters/Contact_API_V2Id'
      responses:
        '200':
          description: List of contact tags returned.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                example:
                  - citroen_marketing
                  - ef-contact
        '401':
          $ref: '#/components/responses/Ownership_API_Unauthorized'
        '404':
          $ref: '#/components/responses/Ownership_API_NotFound'
        '500':
          $ref: '#/components/responses/Ownership_API_ServerError'
    put:
      tags:
        - Contact API V2 Tags
      summary: Assign tags to a contact
      description: >-
        Create/Update all contact tags. These tags are free form data input. If
        you wish to delete all contact tags, you should simply send empty array
        in request body.
      operationId: setContactTags
      parameters:
        - $ref: '#/components/parameters/Contact_API_V2Id'
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
              example:
                - citroen_marketing
                - ef-contact
      responses:
        '200':
          description: Tags successfully assigned to contact.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                example:
                  - citroen_marketing
                  - ef-contact
        '400':
          $ref: '#/components/responses/Ownership_API_BadRequest'
        '401':
          $ref: '#/components/responses/Ownership_API_Unauthorized'
        '404':
          $ref: '#/components/responses/Ownership_API_NotFound'
        '500':
          $ref: '#/components/responses/Ownership_API_ServerError'
  /v2/contacts/{contactId}/notes:
    get:
      tags:
        - Contact API V2 Notes
      summary: Get list of contact notes
      description: Retrieve a list of all notes that specified contact has.
      operationId: getContactNotes
      parameters:
        - $ref: '#/components/parameters/Contact_API_V2Id'
      responses:
        '200':
          description: List of contact notes returned.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Ownership_API_Note'
        '401':
          $ref: '#/components/responses/Ownership_API_Unauthorized'
        '404':
          $ref: '#/components/responses/Ownership_API_NotFound'
        '500':
          $ref: '#/components/responses/Ownership_API_ServerError'
    post:
      tags:
        - Contact API V2 Notes
      summary: Create new note on contact
      description: Create new contact note for specified contact.
      operationId: createContactNote
      parameters:
        - $ref: '#/components/parameters/Contact_API_V2Id'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ownership_API_Note'
      responses:
        '201':
          description: Note successfully assigned to contact.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ownership_API_Note'
        '400':
          $ref: '#/components/responses/Ownership_API_BadRequest'
        '401':
          $ref: '#/components/responses/Ownership_API_Unauthorized'
        '404':
          $ref: '#/components/responses/Ownership_API_NotFound'
        '500':
          $ref: '#/components/responses/Ownership_API_ServerError'
  /v2/contacts/{contactId}/notes/{noteId}:
    put:
      tags:
        - Contact API V2 Notes
      summary: Update contact note
      description: Update specific contact note.
      operationId: updateContactNotes
      parameters:
        - $ref: '#/components/parameters/Contact_API_V2Id'
        - $ref: '#/components/parameters/Ownership_API_noteId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ownership_API_Note'
      responses:
        '200':
          description: Contact note updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ownership_API_Note'
        '401':
          $ref: '#/components/responses/Ownership_API_Unauthorized'
        '404':
          $ref: '#/components/responses/Ownership_API_NotFound'
        '500':
          $ref: '#/components/responses/Ownership_API_ServerError'
    delete:
      tags:
        - Contact API V2 Notes
      summary: Delete contact note
      description: Delete specific contact note from contact.
      operationId: deleteContactNote
      parameters:
        - $ref: '#/components/parameters/Contact_API_V2Id'
        - $ref: '#/components/parameters/Ownership_API_noteId'
      responses:
        '204':
          description: Note successfully deleted.
        '400':
          $ref: '#/components/responses/Ownership_API_BadRequest'
        '401':
          $ref: '#/components/responses/Ownership_API_Unauthorized'
        '404':
          $ref: '#/components/responses/Ownership_API_NotFound'
        '500':
          $ref: '#/components/responses/Ownership_API_ServerError'
  /v2/contact-type:
    get:
      tags:
        - Contact API V2 Type
      summary: Get list of contact types
      description: Retrieve a list of contact types based on their visibility status.
      operationId: getContactTypes
      parameters:
        - in: query
          name: visible
          schema:
            type: boolean
          required: false
          description: >-
            Flag to filter contact types based on visibility. If true, only
            visible contact types are retrieved. Otherwise, all enabled contact
            types are retrieved.
      responses:
        '200':
          description: List of contact types returned.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Contact_API_V2TypeResource'
                example:
                  - name: customer
                    code: C
                  - name: interested_party
                    code: I
        '401':
          $ref: '#/components/responses/Ownership_API_Unauthorized'
        '500':
          $ref: '#/components/responses/Ownership_API_ServerError'
  /v2/contact-status:
    get:
      tags:
        - Contact Status
      summary: Get list of contact statuses
      description: Retrieve a list of contact status based on the provided filter.
        If no filter is provided, all searchable contact types will be retrieved.
      operationId: getContactStatuses
      parameters:
        - in: query
          name: enabled
          schema:
            type: boolean
          required: false
          description: If true, only enabled (visible) contact statuses are retrieved.
        - in: query
          name: restricted
          schema:
            type: boolean
          required: false
          description: If true, only restricted contact statuses are retrieved.
        - in: query
          name: business
          schema:
            type: boolean
          required: false
          description: If true, only business contact statuses are retrieved.
        - in: query
          name: personal
          schema:
            type: boolean
          required: false
          description: If true, only personal contact statuses are retrieved.
      responses:
        '200':
          description: List of contact status returned.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Contact_API_V2ContactStatusResource'
                example:
                  - name: "active"
                  - name: "not_editable"
        '401':
          $ref: '#/components/responses/Ownership_API_Unauthorized'
        '500':
          $ref: '#/components/responses/Ownership_API_ServerError'
  /v2/contacts/{contactId}/interest-categories:
    get:
      tags:
        - Contact API V2 Interest Categories
      summary: Get list of contact interest categories
      description: Retrieve a list of all interest categories that specified contact has.
      operationId: getContactInterestCategories
      parameters:
        - $ref: '#/components/parameters/Contact_API_V2Id'
      responses:
        '200':
          description: List of contact interest categories returned.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                example:
                  - ef_newsletter
                  - dealer_event
        '401':
          $ref: '#/components/responses/Ownership_API_Unauthorized'
        '404':
          $ref: '#/components/responses/Ownership_API_NotFound'
        '500':
          $ref: '#/components/responses/Ownership_API_ServerError'
    put:
      tags:
        - Contact API V2 Interest Categories
      summary: Assign interest categories to a contact
      description: >-
        Create/Update all contact interest categories. List of available values
        /v1/interest-categories. If you wish to delete all contact interest
        categories, you should simply send empty array in request body.
      operationId: setContactInterestCategories
      parameters:
        - $ref: '#/components/parameters/Contact_API_V2Id'
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
              example:
                - ef_newsletter
                - dealer_event
      responses:
        '200':
          description: Interest categories successfully assigned to contact.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                example:
                  - ef_newsletter
                  - dealer_event
        '400':
          $ref: '#/components/responses/Ownership_API_BadRequest'
        '401':
          $ref: '#/components/responses/Ownership_API_Unauthorized'
        '404':
          $ref: '#/components/responses/Ownership_API_NotFound'
        '500':
          $ref: '#/components/responses/Ownership_API_ServerError'
  /v2/contacts/{contactId}/vehicle-preferences:
    get:
      tags:
        - Contact API V2 Vehicle Preferences
      summary: Get list of contact vehicle preferences
      description: Retrieve a list of all vehicle preferences that specified contact has.
      operationId: getContactVehiclePreferences
      parameters:
        - $ref: '#/components/parameters/Contact_API_V2Id'
      responses:
        '200':
          description: List of contact vehicle preferences returned.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Ownership_API_VehiclePreference'
              example:
                - category: body_type
                  code: coupe
                - category: transmission
                  code: automatic
                - category: favorite_brand
                  code: Jaguar
                  sources:
                    - id: '6'
                      name: Partner_Profile_CH
        '401':
          $ref: '#/components/responses/Ownership_API_Unauthorized'
        '404':
          $ref: '#/components/responses/Ownership_API_NotFound'
        '500':
          $ref: '#/components/responses/Ownership_API_ServerError'
    put:
      tags:
        - Contact API V2 Vehicle Preferences
      summary: Assign vehicle preferences to a contact
      description: >-
        Create/Update all contact vehicle preferences. List of available values
        /v1/vehicle-preferences. If you wish to delete all contact
        vehicle-preferences, you should simply send empty array in request body.
      operationId: setContactVehiclePreferences
      parameters:
        - $ref: '#/components/parameters/Contact_API_V2Id'
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Ownership_API_VehiclePreference'
            example:
              - category: body_type
                code: coupe
              - category: transmission
                code: automatic
              - category: favorite_brand
                code: Jaguar
                sources:
                  - id: '6'
                    name: Partner_Profile_CH
      responses:
        '200':
          description: Vehicle preferences successfully assigned to contact.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Ownership_API_VehiclePreference'
              example:
                - category: body_type
                  code: coupe
                - category: transmission
                  code: automatic
                - category: favorite_brand
                  code: Jaguar
                  sources:
                    - id: '6'
                      name: Partner_Profile_CH
        '400':
          $ref: '#/components/responses/Ownership_API_BadRequest'
        '401':
          $ref: '#/components/responses/Ownership_API_Unauthorized'
        '404':
          $ref: '#/components/responses/Ownership_API_NotFound'
        '500':
          $ref: '#/components/responses/Ownership_API_ServerError'
  /v2/contacts/{contactId}/dealer-history:
    get:
      tags:
        - Contact API V2 Dealer History
      summary: Get list of contacts dealer history
      description: Retrieve a list of all dealer/salesman history of specified contact
      operationId: getContactDealerHistory
      parameters:
        - $ref: '#/components/parameters/Contact_API_V2Id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Ownership_API_PageResult'
                  - type: object
                    properties:
                      content:
                        type: array
                        items:
                          $ref: '#/components/schemas/Ownership_API_DealerHistory'
        '401':
          $ref: '#/components/responses/Ownership_API_Unauthorized'
        '404':
          $ref: '#/components/responses/Ownership_API_NotFound'
        '500':
          $ref: '#/components/responses/Ownership_API_ServerError'
  /v2/contacts/{contactId}/usage:
    get:
      tags:
        - Contact API V2 Usage
      summary: Get list of all contact usages in external systems
      description: >-
        Retrieve a list of all external system usages that this contact us used
        by
      operationId: getContactUsage
      parameters:
        - $ref: '#/components/parameters/Contact_API_V2Id'
      responses:
        '200':
          description: List of contact usages returned.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Contact_API_V2Usage'
        '401':
          $ref: '#/components/responses/Ownership_API_Unauthorized'
        '404':
          $ref: '#/components/responses/Ownership_API_NotFound'
        '500':
          $ref: '#/components/responses/Ownership_API_ServerError'
    put:
      tags:
        - Contact API V2 Usage
      summary: Create/update contact usage entry
      description: >-
        API for creating new or updating existing relations of contact usage for
        contact in external system
      operationId: storeContactUsage
      parameters:
        - $ref: '#/components/parameters/Contact_API_V2Id'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contact_API_V2Usage'
      responses:
        '202':
          description: Contact usage data successfully stored on contact.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact_API_V2Usage'
        '400':
          $ref: '#/components/responses/Ownership_API_BadRequest'
        '401':
          $ref: '#/components/responses/Ownership_API_Unauthorized'
        '500':
          $ref: '#/components/responses/Ownership_API_ServerError'
  /v2/customers/{customerId}/usage:
    put:
      tags:
        - Ownership API Customer Usage
      summary: Create/update contact usage entry by customer-id
      description: >-
        API for creating new or updating existing relations of contact usage for
        contact in external system. This API works with customer-ID as
        identifier and as such should be provided in pat-param 'customerId'
      operationId: storeContactUsageCustomer
      parameters:
        - $ref: '#/components/parameters/Ownership_API_customerId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contact_API_V2Usage'
      responses:
        '202':
          description: Contact usage data successfully stored on contact.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact_API_V2Usage'
        '400':
          $ref: '#/components/responses/Ownership_API_BadRequest'
        '401':
          $ref: '#/components/responses/Ownership_API_Unauthorized'
        '500':
          $ref: '#/components/responses/Ownership_API_ServerError'
  /v1/relation-functions:
    get:
      tags:
        - Config
      summary: Retrieve contact relation functions
      description: >-
        This operation is used for to retrieve list of all relation functions
        (eg. Director, Manager).
      operationId: getRelationFunctions
      responses:
        '200':
          description: List of all relation functions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/Contact_API_V1RelationFunction
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      security:
        - CP_API_api_key: []
  /v1/contacts-search:
    post:
      tags:
        - Contact API V1
      summary: Find contact via email and telephone
      description: >-
        Find contact by email AND/OR telephone. One of the parameters is
        required. If both are empty/null, bad request response is returned.
      operationId: searchContacts_1
      requestBody:
        description: Contact search object that contains search data.
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/Contact_API_V1EmailPhoneSearch
        required: false
      responses:
        '200':
          description: Search result page with one or more contacts found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact_API_V1PageResult'
        '400':
          description: Client bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '404':
          description: 'Entity not found '
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      x-codegen-request-body-name: body
      security:
        - CP_API_api_key: []
  /v1/pull-contact/{customerId}:
    post:
      tags:
        - Sync
      summary: Find and sync contact by ID
      description: >-
        This operation is used to find and retrieve contact from external system
        by ID.Once retrieved contact will be created in CP database with
        employee set as contact owner.
      operationId: syncContact
      parameters:
        - name: customerId
          in: path
          description: CustomerId/InterestId of contact
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Contact resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact_API_V1Details'
        '400':
          description: Client bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '404':
          description: 'Entity not found '
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      security:
        - CP_API_api_key: []
  /v1/pull-contact:
    post:
      tags:
        - Sync
      summary: Find and sync contact by source ID
      description: >-
        This operation is used to find and retrieve contact from external system
        by source ID.Once retrieved contact will be created in CP database with
        employee set as contact owner.
      operationId: syncContact_1
      parameters:
        - name: source
          in: query
          description: Source name
          schema:
            type: string
        - name: sourceId
          in: query
          description: Source ID
          schema:
            type: string
      responses:
        '200':
          description: Contact resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact_API_V1Details'
        '400':
          description: Client bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '404':
          description: 'Entity not found '
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      security:
        - CP_API_api_key: []
  /v1/assigned-tasks:
    get:
      tags:
        - Tasks
      summary: Find tasks for specific employee
      description: >-
        This operation is used to retrieve tasks which are assigned to specified
        employee (via token)
      operationId: getContactTasks
      responses:
        '200':
          description: List of all employee tasks
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Contact_API_V1Task'
        '400':
          description: Client bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '404':
          description: 'Entity not found '
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      security:
        - CP_API_api_key: []
  /v1/contact-time:
    get:
      tags:
        - Config
      summary: Retrieve visible contact times
      description: >-
        This operation is used to retrieve a list of all visible times of day
        for contacting customer (eg. morning, at_noon).
      operationId: getContactTimes
      responses:
        '200':
          description: List of all visible contact times
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Contact_API_V1Time'
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      security:
        - CP_API_api_key: []
  /v1/validate/address:
    post:
      tags:
        - Data Quality
      summary: Validate address
      description: >-
        Validate contact addresses with external validation provider and returns
        list of failures for each item.
      operationId: validateAddress
      requestBody:
        description: Contact address list
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Contact_API_V1Address'
        required: false
      responses:
        '200':
          description: Resource is valid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '400':
          description: Client bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      x-codegen-request-body-name: body
      security:
        - CP_API_api_key: []
  /v1/validate/contact:
    post:
      tags:
        - Data Quality
      summary: Validate contact
      description: >-
        Validate contact with external validation provider and returns list of
        failures for each item.
      operationId: validateContact
      requestBody:
        description: Contact contact
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contact_API_V1Details'
        required: false
      responses:
        '200':
          description: Resource is valid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '400':
          description: Client bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      x-codegen-request-body-name: body
      security:
        - CP_API_api_key: []
  /v1/validate/postal-box:
    post:
      tags:
        - Data Quality
      summary: Validate postal box
      description: >-
        Validate contact postal boxes with external validation provider and
        returns list of failures for each item.
      operationId: validatePostalBox
      requestBody:
        description: Contact postal box list
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Contact_API_V1PoBox'
        required: false
      responses:
        '200':
          description: Resource is valid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '400':
          description: Client bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      x-codegen-request-body-name: body
      security:
        - CP_API_api_key: []
  /v1/validate/telephone:
    post:
      tags:
        - Data Quality
      summary: Validate telephone
      description: >-
        Validate contact telephones with external validation provider and
        returns list of failures for each item.
      operationId: validateTelephone
      requestBody:
        description: Contact telephone list
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Contact_API_V1Telephone'
        required: false
      responses:
        '200':
          description: Resource is valid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '400':
          description: Client bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      x-codegen-request-body-name: body
      security:
        - CP_API_api_key: []
  /v1/address/autocomplete:
    post:
      tags:
        - Data Quality
      summary: Autocomplete address
      description: >-
        Suggest autocomplete contact addresses with external validation provider
        and returns list of suggestions.
      operationId: autocompleteAddress
      requestBody:
        description: Contact address list
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/CP_API_AddressAutocompleteResource
        required: false
      responses:
        '200':
          description: List of address autocompleted suggestions
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CP_API_AddressAutocompleteResource
        '400':
          description: Client bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      x-codegen-request-body-name: body
      security:
        - CP_API_api_key: []
  /v1/validate/email:
    post:
      tags:
        - Data Quality
      summary: Validate email
      description: >-
        Validate requested contact emails with external validation provider and
        returns list of failures for each item.
      operationId: validateEmail
      requestBody:
        description: Contact email list
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Contact_API_V1Email'
        required: false
      responses:
        '200':
          description: Resource is valid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '400':
          description: Client bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      x-codegen-request-body-name: body
      security:
        - CP_API_api_key: []
  /v1/validate/contact/duplicates:
    get:
      tags:
        - Data Quality
      summary: Find parent contact relations
      description: >-
        Parent contact relations can be found by either Parent ID or Contact ID
        or by both parameters.
      operationId: getContactDuplicates
      parameters:
        - name: parentId
          in: query
          description: Parent Contact ID
          schema:
            type: integer
            format: int32
        - name: contactId
          in: query
          description: Contact ID
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: List of parent contact relations
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CP_API_ParentContact'
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      security:
        - CP_API_api_key: []
    put:
      tags:
        - Data Quality
      summary: Store parent contact
      description: >-
        Validate parent contact data and if correct store it. Otherwise will
        throw an exception.
      operationId: storeContactDuplicates
      requestBody:
        description: Parent Contact object list that needs to be stored to the CP.
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CP_API_ParentContact'
        required: false
      responses:
        '201':
          description: Parent contact successfully stored
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CP_API_ParentContact'
        '400':
          description: Client bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      x-codegen-request-body-name: body
      security:
        - CP_API_api_key: []
    delete:
      tags:
        - Data Quality
      summary: Delete parent contact duplicates
      description: >-
        This operation deletes parent contact, if requested parent contact
        relation is not found exception will throw.
      operationId: removeContactDuplicates
      parameters:
        - name: parentId
          in: query
          description: Parent Contact ID
          schema:
            type: integer
            format: int32
        - name: contactId
          in: query
          description: Contact ID
          schema:
            type: integer
            format: int32
      responses:
        '204':
          description: Parent contact relation successfully deleted
          content: {}
        '400':
          description: Client bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '404':
          description: Parent contact relation for given ids not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      security:
        - CP_API_api_key: []
  /v1/validate/contact/duplicates/{parentId}:
    post:
      tags:
        - Data Quality
      summary: Store parent contact with parent
      description: >-
        Validate parent contact data and if correct store it. Otherwise will
        throw an exception.
      operationId: storeContactDuplicatesByParent
      parameters:
        - name: parentId
          in: path
          description: Parent Contact ID
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: Parent Contact object list that needs to be stored to the CP.
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CP_API_ParentContact'
        required: false
      responses:
        '201':
          description: Parent contact successfully stored
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CP_API_ParentContact'
        '400':
          description: Client bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      x-codegen-request-body-name: body
      security:
        - CP_API_api_key: []
  /v1/contacts/{contactId}/vehicles:
    get:
      tags:
        - Contact API V1 Vehicle
      summary: Find vehicles for specific contact
      description: >-
        This operation is used to retrieve vehicles which are in ownership to
        specified contact.
      operationId: getContactVehicles
      parameters:
        - name: contactId
          in: path
          description: Contact ID
          required: true
          schema:
            type: integer
            format: int32
        - name: page
          in: query
          description: Page size
          schema:
            type: integer
            format: int32
            default: 1
        - name: pageSize
          in: query
          description: Page number
          schema:
            type: integer
            format: int32
            default: 20
      responses:
        '200':
          description: List of all contact vehicles
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Contact_API_V1Vehicle'
        '400':
          description: Client bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '404':
          description: 'Entity not found '
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      security:
        - CP_API_api_key: []
  /v1/contacts/{contactId}/vehicles/{vehicleId}:
    get:
      tags:
        - Contact API V1 Vehicle
      summary: Find specific contact vehicle
      description: This operation is used to read specific contact vehicle data from CP.
      operationId: getContactVehicle_1
      parameters:
        - name: contactId
          in: path
          description: Contact ID
          required: true
          schema:
            type: integer
            format: int32
        - name: vehicleId
          in: path
          description: Vehicle ID
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Contact vehicle found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact_API_V1Vehicle'
        '400':
          description: Client bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '401':
          description: ClientVehicle authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '404':
          description: 'Entity not found '
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      security:
        - CP_API_api_key: []
  /v1/contacts/{contactId}/vehicles/{vehicleId}/frequent-driver:
    put:
      tags:
        - Contact API V1 Vehicle
      summary: Update contact frequent vehicle driver
      description: >-
        This operation is used to update contact vehicle frequent driver data in
        CP for specific contact, vehicle.
      operationId: updateContactVehicleFrequentDriver_1
      parameters:
        - name: contactId
          in: path
          description: Contact ID
          required: true
          schema:
            type: integer
            format: int32
        - name: vehicleId
          in: path
          description: Vehicle ID
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: Object that will update frequent driver on contacts vehicle
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/Contact_API_V1VehicleFrequentDriver
        required: false
      responses:
        '202':
          description: Contact vehicle frequent driver updated
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/Contact_API_V1VehicleFrequentDriver
        '400':
          description: Client bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '404':
          description: 'Entity not found '
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      x-codegen-request-body-name: body
      security:
        - CP_API_api_key: []
    post:
      tags:
        - Contact API V1 Vehicle
      summary: Create contact vehicle frequent driver
      description: >-
        This operation is used to create contact vehicle frequent driver data in
        CP.
      operationId: createContactVehicleFrequentDriver_1
      parameters:
        - name: contactId
          in: path
          description: Contact ID
          required: true
          schema:
            type: integer
            format: int32
        - name: vehicleId
          in: path
          description: Vehicle ID
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: >-
          Object that will create new frequent driver on contacts vehicle with
          existing contact
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/Contact_API_V1VehicleFrequentDriver
        required: false
      responses:
        '201':
          description: Contact vehicle frequent driver created
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/Contact_API_V1VehicleFrequentDriver
        '400':
          description: Client bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '404':
          description: 'Entity not found '
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      x-codegen-request-body-name: body
      security:
        - CP_API_api_key: []
    delete:
      tags:
        - Contact API V1 Vehicle
      summary: Delete contact vehicle frequent driver
      description: >-
        This operation is used to delete contact vehicle frequent driver data in
        CP for specific contact, vehicle.
      operationId: deleteContactVehicleFrequentDriver_1
      parameters:
        - name: contactId
          in: path
          description: Contact ID
          required: true
          schema:
            type: integer
            format: int32
        - name: vehicleId
          in: path
          description: Vehicle ID
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '204':
          description: Contact vehicle frequent driver deleted
          content: {}
        '400':
          description: Client bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '404':
          description: 'Entity not found '
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      security:
        - CP_API_api_key: []
  /v1/contacts/{contactId}/vehicles/history:
    get:
      tags:
        - Contact API V1 Vehicle
      summary: Find specific contact vehicle history record
      description: >-
        This operation is used to read specific contact vehicle history record
        data from CP.
      operationId: getContactVehicleHistory_1
      parameters:
        - name: contactId
          in: path
          description: Contact ID
          required: true
          schema:
            type: integer
            format: int32
        - name: vin
          in: query
          description: Vehicle VIN
          schema:
            type: string
      responses:
        '200':
          description: Contact vehicle found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_VehicleHistory'
        '400':
          description: Client bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '404':
          description: 'Entity not found '
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      security:
        - CP_API_api_key: []
  /v1/contacts/{contactId}/vehicle/{vehicleId}/deactivate:
    put:
      tags:
        - Contact API V1 Vehicle
      summary: Deactivate specific contact vehicle ownership
      description: >-
        This operation is used to deactivate specific contact vehicle ownership
        data from CP. It is not really deleted, but instead, it receives a
        specific 'status' which can be filtered out.
      operationId: deactivateContactVehicle_1
      parameters:
        - name: contactId
          in: path
          description: Contact ID
          required: true
          schema:
            type: integer
            format: int32
        - name: vehicleId
          in: path
          description: Vehicle ID
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contact_API_V1Vehicle'
        required: false
      responses:
        '202':
          description: Contact vehicle found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact_API_V1Vehicle'
        '400':
          description: Missing mandatory data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '404':
          description: Contact not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      x-codegen-request-body-name: body
      security:
        - CP_API_api_key: []
  /v1/contacts/{contactId}/vehicles/{vehicleId}/dealer:
    get:
      tags:
        - Contact API V1 Vehicle
      summary: Find contact vehicle preferred dealer/employee
      description: >-
        This operation is used to read contact vehicle current dealer/employee
        and preferred dealer/employee data from CP.
      operationId: getVehicleDealer_1
      parameters:
        - name: contactId
          in: path
          description: Contact ID
          required: true
          schema:
            type: integer
            format: int32
        - name: vehicleId
          in: path
          description: Vehicle ID
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Contact vehicle dealer/employee found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact_API_V1VehicleDealer'
        '400':
          description: Client bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '404':
          description: 'Entity not found '
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      security:
        - CP_API_api_key: []
    put:
      tags:
        - Contact API V1 Vehicle
      summary: Update contact vehicle preferred dealer/employee
      description: >-
        This operation is used to update preferred contact vehicle sale data in
        CP.ContactVehicle - Dealer/Employee relation will be updated/created if
        requested one doesnt exists.
      operationId: updateVehicleDealer_1
      parameters:
        - name: contactId
          in: path
          description: Contact ID
          required: true
          schema:
            type: integer
            format: int32
        - name: vehicleId
          in: path
          description: Vehicle ID
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: Contact vehicle preferred dealership and employee.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contact_API_V1VehicleDealer'
        required: false
      responses:
        '202':
          description: Contact vehicle dealer/employee updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact_API_V1VehicleDealer'
        '400':
          description: Client bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '404':
          description: 'Entity not found '
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      x-codegen-request-body-name: body
      security:
        - CP_API_api_key: []
  /v1/customers/{id}:
    get:
      tags:
        - Customer
      summary: Fetch single customer data
      description: >-
        This operation is used to read detailed customer data from CP using
        customer ID.
      operationId: fetchCustomer
      parameters:
        - name: id
          in: path
          description: Customer ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Customer object found in CP.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact_API_V1Details'
        '400':
          description: Client bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '404':
          description: 'Entity not found '
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      security:
        - CP_API_api_key: []
  /v1/customers/{id}/basic:
    get:
      tags:
        - Customer
      summary: Find single customer
      description: >-
        This operation is used to read basic customer data from CP using
        customer ID.
      operationId: findCustomer
      parameters:
        - name: id
          in: path
          description: Customer ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Customer object found in CP.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact_API_V1'
        '400':
          description: Client bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '404':
          description: 'Entity not found '
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      security:
        - CP_API_api_key: []
  /v1/customers/{id}/convert/wholesale:
    put:
      tags:
        - Customer
      summary: Convert to wholesale contact to customer
      description: >-
        This operation is used to convert existing wholesale contact into
        customer.
      operationId: convertWholesaleToCustomer
      parameters:
        - name: id
          in: path
          description: Contact ID
          required: true
          schema:
            type: string
      responses:
        '201':
          description: Wholesale contact successfully converted to customer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact_API_V1Details'
        '400':
          description: Client bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '404':
          description: 'Entity not found '
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      security:
        - CP_API_api_key: []
  /v1/customers/{id}/convert:
    put:
      tags:
        - Customer
      summary: Convert to dealer
      description: This operation is used to convert existing customer into dealer.
      operationId: convertToDealer
      parameters:
        - name: id
          in: path
          description: Dealer ID
          required: true
          schema:
            type: string
        - name: dealerType
          in: query
          description: >-
            Dealer type (eg. F - efag_dealer_withouth_workflow, H -
            efit_dealer(default value))
          schema:
            type: string
            default: H
      responses:
        '201':
          description: Customer successfully converted to dealer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact_API_V1Details'
        '400':
          description: Client bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '404':
          description: 'Entity not found '
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      security:
        - CP_API_api_key: []
  /v1/customers/{id}/convert/dealer:
    put:
      tags:
        - Customer
      summary: Convert to customer
      description: This operation is used to convert existing dealer into customer.
      operationId: convertToCustomer
      parameters:
        - name: id
          in: path
          description: Customer ID
          required: true
          schema:
            type: string
      responses:
        '201':
          description: Interest successfully converted to customer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact_API_V1Details'
        '400':
          description: Client bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '404':
          description: 'Entity not found '
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      security:
        - CP_API_api_key: []
  /v1/contact-customer-group:
    get:
      tags:
        - Config
      summary: Retrieve visible contact business customer groups
      description: >-
        This operation is used to retrieve a list of all visible contact
        business customer groups.
      operationId: getCustomerGroups
      responses:
        '200':
          description: List of all visible contact business customer groups
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CP_API_CustomerGroup'
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      security:
        - CP_API_api_key: []
  /v1/contacts/{contactId}/documents/{documentId}:
    get:
      tags:
        - Contact API V1 Document
      summary: Find specific contact document
      description: This operation is used to read specific contact document data from CP.
      operationId: getContactDocument
      parameters:
        - name: contactId
          in: path
          description: Contact ID
          required: true
          schema:
            type: integer
            format: int32
        - name: documentId
          in: path
          description: Document ID
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Contact document found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact_API_V1Document'
        '400':
          description: Client bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '404':
          description: 'Entity not found '
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      security:
        - CP_API_api_key: []
    put:
      tags:
        - Contact API V1 Document
      summary: Update contact document
      description: This operation is used to update contact document data in CP.
      operationId: updateContactDocument
      parameters:
        - name: contactId
          in: path
          description: Contact ID
          required: true
          schema:
            type: integer
            format: int32
        - name: documentId
          in: path
          description: Contact document ID
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: Object that will update document on contact
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contact_API_V1Document'
        required: true
      responses:
        '201':
          description: Contact document updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact_API_V1Document'
        '400':
          description: Client bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '404':
          description: 'Entity not found '
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      x-codegen-request-body-name: body
      security:
        - CP_API_api_key: []
    delete:
      tags:
        - Contact API V1 Document
      summary: Delete contact document
      description: This operation is used to delete specific contact document data in CP.
      operationId: deleteContactDocument
      parameters:
        - name: contactId
          in: path
          description: Contact ID
          required: true
          schema:
            type: integer
            format: int32
        - name: documentId
          in: path
          description: Contact document ID
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '204':
          description: Contact document deleted
          content: {}
        '400':
          description: Client bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '404':
          description: 'Entity not found '
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      security:
        - CP_API_api_key: []
  /v1/contacts/{contactId}/documents:
    get:
      tags:
        - Contact API V1 Document
      summary: Find documents for specific contact
      description: >-
        This operation is used to retrieve documents which are in ownership to
        specified contact
      operationId: getContactDocuments
      parameters:
        - name: contactId
          in: path
          description: Contact ID
          required: true
          schema:
            type: integer
            format: int32
        - name: type
          in: query
          description: Contact document type
          schema:
            type: string
        - name: dealerSource
          in: query
          description: Dealer source
          schema:
            type: string
        - name: dealerId
          in: query
          description: Dealer ID
          schema:
            type: string
        - name: vehicleSource
          in: query
          description: Vehicle source
          schema:
            type: string
        - name: vehicleId
          in: query
          description: Vehicle ID
          schema:
            type: string
        - name: noteId
          in: query
          description: Contact note ID
          schema:
            type: string
      responses:
        '200':
          description: List of all contact documents
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Contact_API_V1Document'
        '400':
          description: Client bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '404':
          description: 'Entity not found '
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      security:
        - CP_API_api_key: []
    post:
      tags:
        - Contact API V1 Document
      summary: Create contact document
      description: This operation is used to create contact document data in CP.
      operationId: createContactDocument
      parameters:
        - name: contactId
          in: path
          description: Contact ID
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: Object that will create new document on contact
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contact_API_V1Document'
        required: true
      responses:
        '201':
          description: Contact document created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact_API_V1Document'
        '400':
          description: Client bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '404':
          description: 'Entity not found '
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      x-codegen-request-body-name: body
      security:
        - CP_API_api_key: []
  /v1/hobbies:
    get:
      tags:
        - Config
      summary: Retrieve hobbies
      description: >-
        This operation is used to retrieve a list of all visible hobbies for
        customer (eg. Music, Travel).
      operationId: getHobbies
      responses:
        '200':
          description: List of all hobbies
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Contact_API_V1Interest'
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      security:
        - CP_API_api_key: []
  /v1/interest-categories:
    get:
      tags:
        - Config
      summary: Retrieve interest categories
      description: >-
        This operation is used to retrieve a list of all interest categories
        (eg. EF newsletter, Dealer events).
      operationId: getInterestCategories
      responses:
        '200':
          description: List of all interest categories
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/Contact_API_V1InterestCategory
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      security:
        - CP_API_api_key: []
  /v1/interests/{id}:
    get:
      tags:
        - Interest
      summary: Find single interest
      description: >-
        This operation is used to read specific interest data from CP using
        interest ID.
      operationId: findInterest
      parameters:
        - name: id
          in: path
          description: Interest ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Interest object found in CP.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact_API_V1Details'
        '400':
          description: Client bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '404':
          description: Interest not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      security:
        - CP_API_api_key: []
  /v1/interests/{id}/convert:
    put:
      tags:
        - Interest
      summary: Convert interest to customer
      description: >-
        This operation is used to convert interest contact to customer, meaning
        contact has bought a vehicle and became customer.
      operationId: convertToCustomer_1
      parameters:
        - name: id
          in: path
          description: Interest ID
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Converted contact object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact_API_V1Details'
        '400':
          description: Client bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '404':
          description: Interest not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      security:
        - CP_API_api_key: []
  /v1/jobs:
    get:
      tags:
        - Config
      summary: Retrieve jobs
      description: >-
        This operation is used for to retrieve list of all jobs (eg. Scientist,
        Therapists).
      operationId: getJobs
      responses:
        '200':
          description: List of all jobs
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Contact_API_V1Job'
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      security:
        - CP_API_api_key: []
  /v1/contact-loan-company:
    get:
      tags:
        - Config
      summary: Retrieve visible contact business loan companies
      description: >-
        This operation is used to retrieve a list of all visible contact
        business loan companies.
      operationId: getLoanCompanies
      responses:
        '200':
          description: List of all visible contact business loan companies
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Contact_API_V1LoanCompany'
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      security:
        - CP_API_api_key: []
  /v1/marital-status:
    get:
      tags:
        - Config
      summary: Retrieve visible contact marital statuses
      description: >-
        This operation is used to retrieve a list of all visible contact marital
        statuses (eg. married, single, divorced).
      operationId: getMaritalStatuses
      responses:
        '200':
          description: List of all visible contact marital statuses
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CP_API_MaritalStatus'
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      security:
        - CP_API_api_key: []
  /v1/profession-titles:
    get:
      tags:
        - Config
      summary: Retrieve profession titles
      description: >-
        This operation is used to retrieve a list of all visible profession
        titles (eg. dr_med, dr_pol, prof_dr).
      operationId: getProfessionTitles
      responses:
        '200':
          description: List of all titles
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CP_API_ProfessionTitle'
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      security:
        - CP_API_api_key: []
  /v1/salutations:
    get:
      tags:
        - Config
      summary: Retrieve salutations
      description: >-
        This operation is used to retrieve a list of all visible salutations
        (eg. mr, mrs, dealership, company).
      operationId: getSalutations
      responses:
        '200':
          description: List of all salutations
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CP_API_Salutation'
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      security:
        - CP_API_api_key: []
  /v1/contact-status:
    get:
      tags:
        - Config
      summary: Retrieve visible contact statuses
      description: >-
        This operation is used to retrieve a list of all visible contact
        statuses (eg. inactive, deceased, active).
      operationId: getContactStatuses_v1
      parameters:
        - name: enabled
          in: query
          description: Get all enabled statuses (If false/null, all statuses are retrieved)
          schema:
            type: boolean
        - name: restricted
          in: query
          description: >-
            Get all restricted statuses (If false/null, all statuses are
            retrieved)
          schema:
            type: boolean
        - name: personal
          in: query
          description: >-
            Get all personal statuses (If false/null, all statuses are
            retrieved)
          schema:
            type: boolean
        - name: business
          in: query
          description: >-
            Get all business statuses (If false/null, all statuses are
            retrieved)
          schema:
            type: boolean
      responses:
        '200':
          description: List of all visible contact statuses
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Contact_API_V1Status'
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      security:
        - CP_API_api_key: []
  /v1/contact-tag:
    get:
      tags:
        - Config
      summary: Retrieve enabled contact tags
      description: This operation is used to retrieve a list of all enabled contact tags.
      operationId: getContactTags_v1
      responses:
        '200':
          description: List of all enabled contact tags
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Contact_API_V1Tag'
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      security:
        - CP_API_api_key: []
  /v1/contact-telephone-type:
    get:
      tags:
        - Config
      summary: Retrieve enabled contact telephone types
      description: >-
        This operation is used to retrieve a list of all enabled contact
        telephone types.
      operationId: getContactTelephoneTypes
      responses:
        '200':
          description: List of all enabled contact telephone types
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/Contact_API_V1TelephoneType
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      security:
        - CP_API_api_key: []
  /v1/contact-telephone-usage:
    get:
      tags:
        - Config
      summary: Retrieve enabled contact telephone usage
      description: >-
        This operation is used to retrieve a list of all enabled contact
        telephone usage.
      operationId: getContactTelephoneUsage
      responses:
        '200':
          description: List of all enabled contact telephone usage
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/Contact_API_V1TelephoneUsage
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      security:
        - CP_API_api_key: []
  /v1/contact-type:
    get:
      tags:
        - Config
      summary: Retrieve visible contact types
      description: >-
        This operation is used to retrieve a list of all visible contact types
        (eg. customer, efit_dealer, interested_party).
      operationId: getContactTypes_v1
      parameters:
        - name: visible
          in: query
          description: >-
            Get all visible types (If false/null, all enabled types are
            retrieved)
          schema:
            type: boolean
      responses:
        '200':
          description: List of all visible contact types
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Contact_API_V1Type'
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      security:
        - CP_API_api_key: []
  /v1/vehicle-preference-categories:
    get:
      tags:
        - Config
      summary: Retrieve vehicle preference categories
      description: >-
        This operation is used to retrieve a list of all visible vehicle
        preference categories (eg. Favorite brand, Energy efficiency, Vehicle
        use).
      operationId: getVehiclePreferenceCategories
      responses:
        '200':
          description: List of all vehicle preference categories
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/CP_API_VehiclePreferenceCategory
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      security:
        - CP_API_api_key: []
  /v1/vehicle-preferences:
    get:
      tags:
        - Config
      summary: Retrieve vehicle preference and their categories
      description: >-
        This operation is used to retrieve a list of all visible vehicle
        preference and their corresponding categories
      operationId: getVehiclePreferences
      responses:
        '200':
          description: List of all vehicle preferences and their categories
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/Contact_API_V1VehiclePreference
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      security:
        - CP_API_api_key: []
  /v1/contacts-advanced-search:
    post:
      tags:
        - Contact API V1
      summary: Contact advanced search
      description: >-
        This operation is used for searching contacts in Azure search or local
        DB based on configuration.Search conditions are passed as
        ContactAdvancedSearchRequest object and returned as
        ContactAdvancedSearchResult wrapper object for PageResult containing
        list of ContactResource objects.
      operationId: searchContacts_2
      requestBody:
        description: Contact search object that contains search data.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contact_API_V1AdvancedSearch'
        required: false
      responses:
        '200':
          description: Search result page with one or more contacts found.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/Contact_API_V1AdvancedSearchResult
        '400':
          description: Client bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      x-codegen-request-body-name: body
      security:
        - CP_API_api_key: []
  /v1/contacts-advanced-search/export:
    post:
      tags:
        - Contact API V1
      summary: Contact advanced search export
      description: >-
        This operation is used for exporting contacts returned in Contact
        advanced search endpoint.Search conditions are passed as
        ContactAdvancedSearchRequest object and returned as csv OutputStream.
      operationId: exportContacts_1
      parameters:
        - name: lang
          in: query
          schema:
            type: string
        - name: format
          in: query
          schema:
            type: string
            default: csv
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contact_API_V1AdvancedSearch'
        required: false
      responses:
        '200':
          description: CSV output stream with one or more contacts
          content:
            application/octet-stream:
              schema:
                type: array
                items:
                  pattern: >-
                    ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
        '400':
          description: Client bad request
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '401':
          description: Client authorization failed
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      x-codegen-request-body-name: body
      security:
        - CP_API_api_key: []
  /v1/contacts-advanced-search/id:
    post:
      tags:
        - Contact API V1
      summary: Fetching multiple contacts by ids
      description: >-
        This operation is used for fetching multiple contacts from local
        DB.Search conditions are passed as MultipleContactAdvanceSearchRequest
        object and returned as MultipleContactAdvancedSearchResult wrapper
        object for PageResult containing list of ContactResource objects.
      operationId: searchMultipleContacts
      requestBody:
        description: Fetch multiple contact.
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/CP_API_MultipleContactAdvanceSearchRequest
        required: false
      responses:
        '200':
          description: Search result page with one or more contacts found.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CP_API_MultipleContactAdvancedSearchResult
        '400':
          description: Client bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      x-codegen-request-body-name: body
      security:
        - CP_API_api_key: []
  /v1/contacts-extended-search:
    post:
      tags:
        - Contact API V1
      summary: Contact combined extended search
      description: >-
        This operation is used for searching contacts by specified criteria in
        ContactExtendedSearchRequest object in local storage and several
        external storages - B2C search, B2B search.
      operationId: searchContacts_3
      requestBody:
        description: Contact search object that contains search data.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contact_API_V1ExtendedSearch'
        required: false
      responses:
        '200':
          description: Search result page with one or more contacts found.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/Contact_API_V1SearchResult
        '400':
          description: Client bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      x-codegen-request-body-name: body
      security:
        - CP_API_api_key: []
  /v1/search-contacts:
    get:
      tags:
        - Contact API V1
      summary: Contact combined text search
      description: >-
        This operation is used for contact full text search in local storage and
        several external storages - B2C search, B2B search.
      operationId: searchContacts_4
      parameters:
        - name: q
          in: query
          description: Search arguments separated by spaces
          schema:
            type: string
        - name: type
          in: query
          description: Filter results by contact type
          schema:
            type: string
            enum:
              - I
              - C
              - W
              - F
              - H
        - name: searchMode
          in: query
          description: >-
            Should search use OR conjunction in filters instead of AND when
            building search query?
          schema:
            type: string
            enum:
              - all
              - any
        - name: searchFields
          in: query
          description: List of properties to search contacts by
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
              enum:
                - name1
                - name2
                - email
                - telephone
                - additionalName
                - customerId
                - interestId
                - city
                - street
                - streetNumber
                - zip
                - vatNumber
        - name: dealerId
          in: query
          description: Filter out contact for specific access_right dealer (PP dealer ID)
          schema:
            type: integer
            format: int32
        - name: maxResults
          in: query
          description: Max results
          schema:
            type: integer
            format: int32
            default: 30
      responses:
        '200':
          description: Search result page with one or more contacts found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: >-
                    #/components/schemas/Contact_API_V1SearchResult
        '400':
          description: Client bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      security:
        - CP_API_api_key: []
  /v1/countries/{isoCode2}:
    get:
      tags:
        - Country
      summary: Find single country
      description: >-
        This operation is used to find single country data from CP using
        ISO-code2.
      operationId: getCountry
      parameters:
        - name: isoCode2
          in: path
          description: ISO Code 2
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Country object found in CP.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Country'
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '404':
          description: Country not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      security:
        - CP_API_api_key: []
  /v1/countries:
    get:
      tags:
        - Country
      summary: Get list of countries
      description: This operation is used to retrieving list of visible countries.
      operationId: getCountries
      responses:
        '200':
          description: List of visible countries
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CP_API_Country'
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      security:
        - CP_API_api_key: []
  /v1/languages:
    get:
      tags:
        - Language
      summary: Get list of languages
      description: This operation is used to retrieve a list of visible languages.
      operationId: getLanguages
      responses:
        '200':
          description: List of visible languages
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CP_API_Language'
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      security:
        - CP_API_api_key: []
  /v1/documents/{documentId}:
    get:
      tags:
        - Documents
      summary: Download document
      description: >-
        This operation is used to retrieve document data by documentID.Document
        type, name, extension and storage are resolved from previously created
        ContactDocument objectwhich have ID relation to document in
        DocumentProvider
      operationId: downloadDocument_v1
      parameters:
        - name: documentId
          in: path
          description: ContactDocument ID
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Document content
          content:
            application/json:
              schema:
                type: array
                items:
                  pattern: >-
                    ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
            application/octet-stream:
              schema:
                type: array
                items:
                  pattern: >-
                    ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
            text/plain:
              schema:
                type: array
                items:
                  pattern: >-
                    ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
            image/jpeg:
              schema:
                type: array
                items:
                  pattern: >-
                    ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
            image/png:
              schema:
                type: array
                items:
                  pattern: >-
                    ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
            image/gif:
              schema:
                type: array
                items:
                  pattern: >-
                    ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
            application/pdf:
              schema:
                type: array
                items:
                  pattern: >-
                    ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
            text/csv:
              schema:
                type: array
                items:
                  pattern: >-
                    ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
            application/msword:
              schema:
                type: array
                items:
                  pattern: >-
                    ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
            application/vnd.openxmlformats-officedocument.wordprocessingml.document:
              schema:
                type: array
                items:
                  pattern: >-
                    ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
            application/vnd.ms-powerpoint:
              schema:
                type: array
                items:
                  pattern: >-
                    ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
            application/vnd.openxmlformats-officedocument.presentationml.presentation:
              schema:
                type: array
                items:
                  pattern: >-
                    ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
            application/rtf:
              schema:
                type: array
                items:
                  pattern: >-
                    ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
            application/vnd.ms-excel:
              schema:
                type: array
                items:
                  pattern: >-
                    ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
              schema:
                type: array
                items:
                  pattern: >-
                    ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
            text/plain:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
            image/jpeg:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
            image/png:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
            image/gif:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
            application/pdf:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
            text/csv:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
            application/msword:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
            application/vnd.openxmlformats-officedocument.wordprocessingml.document:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
            application/vnd.ms-powerpoint:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
            application/vnd.openxmlformats-officedocument.presentationml.presentation:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
            application/rtf:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
            application/vnd.ms-excel:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '404':
          description: Country not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
            text/plain:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
            image/jpeg:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
            image/png:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
            image/gif:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
            application/pdf:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
            text/csv:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
            application/msword:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
            application/vnd.openxmlformats-officedocument.wordprocessingml.document:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
            application/vnd.ms-powerpoint:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
            application/vnd.openxmlformats-officedocument.presentationml.presentation:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
            application/rtf:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
            application/vnd.ms-excel:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
            text/plain:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
            image/jpeg:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
            image/png:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
            image/gif:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
            application/pdf:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
            text/csv:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
            application/msword:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
            application/vnd.openxmlformats-officedocument.wordprocessingml.document:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
            application/vnd.ms-powerpoint:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
            application/vnd.openxmlformats-officedocument.presentationml.presentation:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
            application/rtf:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
            application/vnd.ms-excel:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      security:
        - CP_API_api_key: []
    put:
      tags:
        - Documents
      summary: Upload document
      description: >-
        This operation is used to upload document data and make relation to
        previously created ContactDocument.
      operationId: uploadDocument
      parameters:
        - name: documentId
          in: path
          description: ContactDocument ID
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '201':
          description: Document uploaded
          content: {}
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '404':
          description: Country not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      security:
        - CP_API_api_key: []
    delete:
      tags:
        - Documents
      summary: Delete document data
      description: >-
        This operation is used to delete uploaded document data on storage
        provider and soft delete ContactDocument record in CP database.
      operationId: deleteDocument
      parameters:
        - name: documentId
          in: path
          description: ContactDocument Document ID
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '204':
          description: Document deleted
          content: {}
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '404':
          description: Country not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      security:
        - CP_API_api_key: []
  /v1/storage/download:
    get:
      tags:
        - Storage
      summary: Download document
      description: Download document by ID from requested storage provider.
      operationId: downloadDocument_1
      parameters:
        - name: s
          in: query
          description: Document storage ID
          schema:
            type: string
        - name: documentId
          in: query
          description: ID of document in storage provider
          schema:
            type: string
      responses:
        '200':
          description: Document content
          content:
            application/octet-stream:
              schema:
                type: array
                items:
                  pattern: >-
                    ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
        '204':
          description: Document has not content
          content: {}
        '401':
          description: Client authorization failed
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      security:
        - CP_API_api_key: []
  /v1/ef/dealer-brands:
    get:
      tags:
        - EF
      summary: Retrieve dealer and brands from PP token
      description: >-
        Retrieve master dealer, children dealers and respective brands for
        specified employee by token. This can also filter out if user is
        importer.If additional dealer id is provided above logic is ignored and
        will return this dealer as employees master dealer (if employee belongs
        to it) with its children dealers and respective brands
      operationId: getDealerBrands
      parameters:
        - name: fetchImporter
          in: query
          description: fetch Importers
          schema:
            type: boolean
        - name: onlyBrands
          in: query
          description: fetch only brands
          schema:
            type: boolean
        - name: dealerId
          in: query
          description: additional dealer ID
          schema:
            type: integer
            format: int32
            default: 0
      responses:
        '200':
          description: Dealer brands relation structure
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CP_API_UserDealerBrands'
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      security:
        - CP_API_api_key: []
  /v1/ef/me/dealer-brands:
    get:
      tags:
        - EF
      summary: Retrieve dealer and brands for provided PP dealer
      description: >-
        If dealer id is provided above logic is ignored and will return this
        dealer as employees master dealer (if employee belongs to it) with its
        children dealers and respective brands.If dealerId is not provided, 404
        is returned.
      operationId: getDealerBrandsME
      parameters:
        - name: dealerId
          in: query
          description: additional dealer ID
          schema:
            type: integer
            format: int32
        - name: token
          in: query
          description: Token from CM/LC form
          schema:
            type: string
      responses:
        '200':
          description: Dealer brands relation structure
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CP_API_UserDealerBrands'
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '404':
          description: Dealer Id not provided
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      security:
        - CP_API_api_key: []
  /v1/consents-configuration:
    get:
      tags:
        - Consents
      summary: Retrieve consent configuration for dealer/brand
      description: >-
        This operation is used to retrieve consent configuration for specified
        dealer/brand.
      operationId: getConfiguration
      parameters:
        - name: brandSource
          in: query
          description: Brand source
          schema:
            type: string
        - name: brandId
          in: query
          description: Brand ID
          schema:
            type: string
        - name: dealerSource
          in: query
          description: Dealer source
          schema:
            type: string
        - name: dealerId
          in: query
          description: Dealer ID
          schema:
            type: string
        - name: ecoSystemSource
          in: query
          description: EcoSystem source
          schema:
            type: string
        - name: ecoSystemId
          in: query
          description: EcoSystem ID
          schema:
            type: string
      responses:
        '200':
          description: Consent configuration
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CP_API_ConsentGroupConfiguration
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      security:
        - CP_API_api_key: []
  /v1/contacts/{contactId}/consents:
    get:
      tags:
        - Consents
      summary: Retrieve consents for specified contact
      description: >-
        This operation is used to retrieve consents for specified contact. This
        can also filter out consents on specified dealers/brands.
      operationId: getConsents_v1
      parameters:
        - name: contactId
          in: path
          description: Contact ID
          required: true
          schema:
            type: integer
            format: int32
        - name: brandSource
          in: query
          description: Filter consents by brand source
          schema:
            type: string
        - name: brandId
          in: query
          description: Filter consents by brand ID
          schema:
            type: string
        - name: dealerSource
          in: query
          description: Filter consents by dealer source
          schema:
            type: string
        - name: dealerId
          in: query
          description: Filter consents by dealer ID
          schema:
            type: string
        - name: ecoSystemSource
          in: query
          description: Filter consents by ecoSystem source
          schema:
            type: string
        - name: ecoSystemId
          in: query
          description: Filter consents by ecoSystem ID
          schema:
            type: string
      responses:
        '200':
          description: Contact consents
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_ConsentsGroup'
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      security:
        - CP_API_api_key: []
  /v1/contacts/{contactId}/consents/signed:
    get:
      tags:
        - Consents
      summary: Retrieve signed consents for specified contact and dealer from token
      description: >-
        This operation is used to retrieve signed consents for specified
        contact, but only for dealer that is on users token.
      operationId: getSignedConsents
      parameters:
        - name: contactId
          in: path
          description: Contact ID
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Contact signed dealer consents
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_ConsentSigned'
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '404':
          description: Signed consent not found for contact/dealer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      security:
        - CP_API_api_key: []
  /v1/contacts/{contactId}/consents/remove-request:
    get:
      tags:
        - Consents
      summary: Retrieve consent removal request document
      description: >-
        This operation is used to retrieve consent removal document from
        storage.
      operationId: getRemoveRequestDocument
      parameters:
        - name: contactId
          in: path
          description: Contact ID
          required: true
          schema:
            type: integer
            format: int32
        - name: brandSource
          in: query
          description: Consent removal document for brand source
          schema:
            type: string
        - name: brandId
          in: query
          description: Consent removal document for brand ID
          schema:
            type: string
        - name: dealerSource
          in: query
          description: Consent removal document for dealer source
          schema:
            type: string
        - name: dealerId
          in: query
          description: Consent removal document for dealer ID
          schema:
            type: string
        - name: s
          in: query
          description: Storage name
          schema:
            type: string
      responses:
        '200':
          description: Consent removal request document found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
            text/plain:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
            image/jpeg:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
            image/png:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
            image/gif:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
            application/pdf:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
            text/csv:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
            application/msword:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
            application/vnd.openxmlformats-officedocument.wordprocessingml.document:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
            application/vnd.ms-powerpoint:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
            application/vnd.openxmlformats-officedocument.presentationml.presentation:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
            application/rtf:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
            application/vnd.ms-excel:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
            text/plain:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
            image/jpeg:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
            image/png:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
            image/gif:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
            application/pdf:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
            text/csv:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
            application/msword:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
            application/vnd.openxmlformats-officedocument.wordprocessingml.document:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
            application/vnd.ms-powerpoint:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
            application/vnd.openxmlformats-officedocument.presentationml.presentation:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
            application/rtf:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
            application/vnd.ms-excel:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '404':
          description: Consent removal document not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
            text/plain:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
            image/jpeg:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
            image/png:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
            image/gif:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
            application/pdf:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
            text/csv:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
            application/msword:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
            application/vnd.openxmlformats-officedocument.wordprocessingml.document:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
            application/vnd.ms-powerpoint:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
            application/vnd.openxmlformats-officedocument.presentationml.presentation:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
            application/rtf:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
            application/vnd.ms-excel:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
            text/plain:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
            image/jpeg:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
            image/png:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
            image/gif:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
            application/pdf:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
            text/csv:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
            application/msword:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
            application/vnd.openxmlformats-officedocument.wordprocessingml.document:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
            application/vnd.ms-powerpoint:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
            application/vnd.openxmlformats-officedocument.presentationml.presentation:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
            application/rtf:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
            application/vnd.ms-excel:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      security:
        - CP_API_api_key: []
    post:
      tags:
        - Consents
      summary: Request consent removal from third party
      description: >-
        This operation is used to request consent removal from third party legal
        entity. Dealership can request consent removal from importer company and
        importer company can request consent removal from dealerships.
      operationId: removeRequest
      parameters:
        - name: contactId
          in: path
          description: Contact ID
          required: true
          schema:
            type: integer
            format: int32
        - name: brandSource
          in: query
          description: Remove consent for brand source
          schema:
            type: string
        - name: brandId
          in: query
          description: Remove consent for brand ID
          schema:
            type: string
        - name: dealerSource
          in: query
          description: Remove consent for dealer source
          schema:
            type: string
        - name: dealerId
          in: query
          description: Remove consent for dealer ID
          schema:
            type: string
        - name: clientFilename
          in: query
          description: Attachment file name
          schema:
            type: string
        - name: Content-Type
          in: header
          description: Attachment content type
          schema:
            type: string
        - name: Content-Length
          in: header
          description: Attachment content length
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/CP_API_InputStream'
        required: false
      responses:
        '200':
          description: Consent removal request sent to third party.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '404':
          description: Consent not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      x-codegen-request-body-name: body
      security:
        - CP_API_api_key: []
  /v1/contacts/{contactId}/consents-history:
    get:
      tags:
        - Consents
      summary: Retrieve history of consents for specified contact
      description: >-
        This operation is used to retrieve history of consents for specified
        contact. This can also filter out consents history on specified
        dealers/brands.
      operationId: getConsents_1
      parameters:
        - name: contactId
          in: path
          description: Contact ID
          required: true
          schema:
            type: integer
            format: int32
        - name: brandSource
          in: query
          description: Filter consents by brand source
          schema:
            type: string
        - name: brandId
          in: query
          description: Filter consents by brand ID
          schema:
            type: string
        - name: dealerSource
          in: query
          description: Filter consents by dealer source
          schema:
            type: string
        - name: dealerId
          in: query
          description: Filter consents by dealer ID
          schema:
            type: string
        - name: ecoSystemSource
          in: query
          description: Filter consents by ecoSystem source
          schema:
            type: string
        - name: ecoSystemId
          in: query
          description: Filter consents by ecoSystem ID
          schema:
            type: string
      responses:
        '200':
          description: Contact history consents
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_ConsentsGroupHistory'
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      security:
        - CP_API_api_key: []
  /v1/dealer-consents:
    put:
      tags:
        - Consents
      summary: Update existing dealer consent
      description: Updates existing consents for specified dealer.
      operationId: updateConsents
      requestBody:
        description: >-
          Document multipart form data and stringified DealerConsentsResource
          object
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CP_API_MultipartFormDataInput'
        required: false
      responses:
        '201':
          description: Dealer Consent successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_DealerConsents'
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      x-codegen-request-body-name: body
      security:
        - CP_API_api_key: []
    post:
      tags:
        - Consents
      summary: Create new dealer consent
      description: >-
        Creates consents for specified dealer with relation to contact that gave
        permission.
      operationId: createConsents
      requestBody:
        description: >-
          Document multipart form data and stringified DealerConsentsResource
          object
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CP_API_MultipartFormDataInput'
        required: false
      responses:
        '200':
          description: Dealer Consent successfully stored
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_DealerConsents'
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      x-codegen-request-body-name: body
      security:
        - CP_API_api_key: []
  /v1/dealer-consents/send-email:
    post:
      tags:
        - Consents
      summary: Send consent email to contact
      description: >-
        Sends signed consent confirmation email to specified contact from
        specified dealer.
      operationId: sendEmail
      requestBody:
        description: >-
          Dealer Consent Email object that will be used to send email to
          contact.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CP_API_DealerConsentsEmail'
        required: false
      responses:
        '200':
          description: Dealer Consent Email successfully sent
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_DealerConsentsEmail'
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      x-codegen-request-body-name: body
      security:
        - CP_API_api_key: []
  /v1/dealer-consents/generate-token:
    post:
      tags:
        - Consents
      summary: Generate token
      description: >-
        Generate token for specified contact from specified dealer.Token is used
        for embedding into redirection link sent in signed consent confirmation
        email where user can click on it and preview signed document.
      operationId: generateToken
      requestBody:
        description: Dealer Consent Email object that will be used to generate token.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CP_API_DealerConsentsEmail'
        required: false
      responses:
        '200':
          description: Token successfully generated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_DealerConsentsEmail'
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      x-codegen-request-body-name: body
      security:
        - CP_API_api_key: []
  /v1/dealer-consents/send-form-email:
    post:
      tags:
        - Consents
      summary: Send consent form email to contact
      description: Sends consent form email to specified contact from specified dealer.
      operationId: sendFormEmail
      requestBody:
        description: >-
          Dealer Consent Form object that will be used to send form email to
          contact.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CP_API_DealerConsentsEmail'
        required: false
      responses:
        '200':
          description: Form Consent Email successfully sent
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_DealerConsentsEmail'
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      x-codegen-request-body-name: body
      security:
        - CP_API_api_key: []
  /v1/dealer-consents/send-custom-email:
    post:
      tags:
        - Consents
      summary: Send custom consent email to contacts
      description: >-
        Sends custom consent email to specified list of contacts from specified
        dealer.
      operationId: sendCustomEmail
      requestBody:
        description: >-
          Dealer Consent Custom object that will be used to send custom emails
          to contacts.
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/CP_API_DealerCustomConsentEmailResource
        required: false
      responses:
        '200':
          description: Custom emails successfully sent
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CP_API_DealerCustomConsentEmailResource
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      x-codegen-request-body-name: body
      security:
        - CP_API_api_key: []
  /v1/dealer-consents/pdf:
    post:
      tags:
        - Consents
      summary: Retrieve consents document
      description: Retrieves consents document for specified dealer and contact.
      operationId: pdfPreview
      requestBody:
        description: >-
          Document multipart form data and stringified DealerConsentsResource
          object
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CP_API_MultipartFormDataInput'
        required: false
      responses:
        '200':
          description: Dealer Consent document successfully retrieved.
          content:
            application/pdf:
              schema:
                type: array
                items:
                  pattern: >-
                    ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
        '401':
          description: Client authorization failed
          content:
            application/pdf:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/pdf:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      x-codegen-request-body-name: body
      security:
        - CP_API_api_key: []
  /v1/group-consents:
    put:
      tags:
        - Consents
      summary: Update existing group consent
      description: Updates existing group consents for specified contact.
      operationId: updateConsents_1
      requestBody:
        description: Group consent object that needs to be updated in CP.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CP_API_GroupConsents'
        required: false
      responses:
        '201':
          description: Group Consent successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_GroupConsents'
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      x-codegen-request-body-name: body
      security:
        - CP_API_api_key: []
    post:
      tags:
        - Consents
      summary: Create group consent
      description: Creates group consents for specified contact.
      operationId: createConsents_1
      requestBody:
        description: Group consent object that needs to be stored in CP.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CP_API_GroupConsents'
        required: false
      responses:
        '200':
          description: Group Consent successfully stored
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_GroupConsents'
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      x-codegen-request-body-name: body
      security:
        - CP_API_api_key: []
  /v1/leads/{id}:
    get:
      tags:
        - Lead
      summary: Find single lead
      description: This operation is used to find single lead data from CP using lead ID.
      operationId: getLead
      parameters:
        - name: id
          in: path
          description: Lead ID
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Lead object found in CP.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Lead'
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '404':
          description: Lead not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      security:
        - CP_API_api_key: []
    put:
      tags:
        - Lead
      summary: Update existing lead
      description: This operation is used for updating existing lead.
      operationId: updateLead
      parameters:
        - name: id
          in: path
          description: Lead ID
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: Lead object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CP_API_Lead'
        required: true
      responses:
        '202':
          description: Lead successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Lead'
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '404':
          description: Lead not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      x-codegen-request-body-name: body
      security:
        - CP_API_api_key: []
  /v1/leads:
    post:
      tags:
        - Lead
      summary: Store lead
      description: This operation is used to store new lead in CP.
      operationId: storeLead
      requestBody:
        description: Lead object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CP_API_Lead'
        required: true
      responses:
        '201':
          description: Lead successfully created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Lead'
        '400':
          description: Client bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      x-codegen-request-body-name: body
      security:
        - CP_API_api_key: []
  /v2/privacy/consents/{contactId}:
    get:
      tags:
        - Privacy
      operationId: getConsents_2
      parameters:
        - name: contactId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: lang
          in: query
          schema:
            type: string
      responses:
        default:
          description: successful operation
          content: {}
      security:
        - CP_API_api_key: []
    post:
      tags:
        - Privacy
      operationId: storeConsents_v1
      parameters:
        - name: contactId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: preview
          in: query
          schema:
            type: boolean
            default: false
        - name: lang
          in: query
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CP_API_MultipartFormDataInput'
        required: false
      responses:
        default:
          description: successful operation
          content: {}
      x-codegen-request-body-name: body
      security:
        - CP_API_api_key: []
  /v2/privacy/consents/{contactId}/history:
    get:
      tags:
        - Privacy
      operationId: getConsentsHistory
      parameters:
        - name: contactId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: version
          in: query
          schema:
            type: string
        - name: pageNumber
          in: query
          schema:
            type: integer
            format: int32
            default: 1
        - name: pageSize
          in: query
          schema:
            type: integer
            format: int32
            default: 5
      responses:
        default:
          description: successful operation
          content: {}
      security:
        - CP_API_api_key: []
  /v2/privacy/consents/default:
    get:
      tags:
        - Privacy
      operationId: getConsentsDefault
      parameters:
        - name: lang
          in: query
          schema:
            type: string
      responses:
        default:
          description: successful operation
          content: {}
      security:
        - CP_API_api_key: []
  /v2/privacy/consent-form/email:
    post:
      tags:
        - Privacy
      operationId: sendEmailDocument_v1
      parameters:
        - name: token
          in: query
          schema:
            type: string
      responses:
        default:
          description: successful operation
          content: {}
      security:
        - CP_API_api_key: []
  /v2/privacy/consent-form:
    get:
      tags:
        - Privacy
      operationId: getFormConsents
      parameters:
        - name: token
          in: query
          schema:
            type: string
      responses:
        default:
          description: successful operation
          content: {}
      security:
        - CP_API_api_key: []
    post:
      tags:
        - Privacy
      operationId: storeFormConsents
      parameters:
        - name: token
          in: query
          schema:
            type: string
        - name: preview
          in: query
          schema:
            type: boolean
            default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CP_API_ConsentRequestResource'
        required: false
      responses:
        default:
          description: successful operation
          content: {}
      x-codegen-request-body-name: body
      security:
        - CP_API_api_key: []
  /v2/privacy/consent-form/document:
    get:
      tags:
        - Privacy
      operationId: downloadDocument_2
      parameters:
        - name: token
          in: query
          schema:
            type: string
        - name: s
          in: query
          schema:
            type: string
        - name: documentId
          in: query
          schema:
            type: string
      responses:
        default:
          description: successful operation
          content: {}
      security:
        - CP_API_api_key: []
  /v2/privacy/email/{contactId}/document:
    post:
      tags:
        - Privacy
      operationId: sendEmailDocument_1
      parameters:
        - name: contactId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: consentId
          in: query
          schema:
            type: integer
            format: int32
        - name: aggregate
          in: query
          schema:
            type: boolean
            default: false
        - name: lang
          in: query
          schema:
            type: string
      responses:
        default:
          description: successful operation
          content: {}
      security:
        - CP_API_api_key: []
  /v2/privacy/email/{contactId}/link:
    post:
      tags:
        - Privacy
      operationId: sendEmailLink_v1
      parameters:
        - name: contactId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: aggregate
          in: query
          schema:
            type: boolean
            default: false
        - name: lang
          in: query
          schema:
            type: string
      responses:
        default:
          description: successful operation
          content: {}
      security:
        - CP_API_api_key: []
  /v1/offers/search:
    post:
      tags:
        - Offer
      summary: Advanced contracts search
      description: This operation is used for advanced contracts search
      operationId: searchContracts
      requestBody:
        description: Contract search request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CP_API_ContractSearch'
        required: true
      responses:
        '200':
          description: List of contracts
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Contract'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '404':
          description: No content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      x-codegen-request-body-name: body
      security:
        - CP_API_api_key: []
  /v1/offers/search/export:
    post:
      tags:
        - Offer
      summary: Export of advanced contracts search
      description: This operation is used to export CSV of advanced searching contracts
      operationId: exportContracts
      parameters:
        - name: lang
          in: query
          description: Export language
          required: true
          schema:
            type: string
      requestBody:
        description: Contract search request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CP_API_ContractSearch'
        required: true
      responses:
        '200':
          description: Exported contracts in CSV
          content:
            text/csv; charset=UTF-8:
              schema:
                type: array
                items:
                  pattern: >-
                    ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  type: string
                  format: byte
        '400':
          description: Bad request
          content:
            text/csv; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '401':
          description: Client authorization failed
          content:
            text/csv; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '404':
          description: No content
          content:
            text/csv; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            text/csv; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      x-codegen-request-body-name: body
      security:
        - CP_API_api_key: []
  /v1/offers/external:
    post:
      tags:
        - Offer
      summary: Find single offer/contract by external source
      description: >-
        This operation is used to find single offer/contract data from CP using
        external source id.
      operationId: getOfferBySource
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CP_API_Resource'
        required: false
      responses:
        '200':
          description: Offer/contract object found in CP.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Offer'
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '404':
          description: Offer/contract not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      x-codegen-request-body-name: body
      security:
        - CP_API_api_key: []
  /v1/offers/count:
    get:
      tags:
        - Offer
      summary: Get count of offers/contracts
      description: >-
        This operation is used to retrieve count of offers/contracts related to
        specified contact.
      operationId: getOffersAndContracts
      parameters:
        - name: page
          in: query
          description: Page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: pageSize
          in: query
          description: Page size
          schema:
            type: integer
            format: int32
            default: 200
        - name: contactId
          in: query
          description: Contact ID
          required: true
          schema:
            type: integer
            format: int32
        - name: fetchDriver
          in: query
          description: fetchDriver
          schema:
            type: boolean
            default: false
        - name: isBusiness
          in: query
          description: isBusiness
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: List of offers/contracts for contact
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_OfferContractCount'
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      security:
        - CP_API_api_key: []
  /v1/offers:
    get:
      tags:
        - Offer
      summary: Get list of offers/contracts
      description: >-
        This operation is used to retrieving list of offers/contracts for
        specified contact.
      operationId: getOffers
      parameters:
        - name: contactId
          in: query
          description: Contact ID
          schema:
            type: integer
            format: int32
        - name: vin
          in: query
          description: Vehicle VIN number
          schema:
            type: string
        - name: isLeasing
          in: query
          description: Does contract/offer has to be leasing?
          schema:
            type: boolean
        - name: page
          in: query
          description: Page number
          schema:
            type: integer
            format: int32
            default: 1
        - name: pageSize
          in: query
          description: Page size
          schema:
            type: integer
            format: int32
            default: 20
        - name: sort
          in: query
          description: Order direction
          schema:
            type: string
        - name: sortBy
          in: query
          description: Order by attribute
          schema:
            type: string
      responses:
        '200':
          description: List of offers/contracts for contact
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_OfferPageResult'
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      security:
        - CP_API_api_key: []
    post:
      tags:
        - Offer
      summary: Store offer/contract
      description: This operation is used to store new offer/contract in CP.
      operationId: createOffer
      requestBody:
        description: Lead object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CP_API_Offer'
        required: true
      responses:
        '201':
          description: Offer/contract successfully created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Offer'
        '400':
          description: Client bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      x-codegen-request-body-name: body
      security:
        - CP_API_api_key: []
  /v1/offers/c360:
    get:
      tags:
        - Offer
      summary: Get list of grouped offers/contracts
      description: >-
        This operation is used to retrieving list of offers/contracts for
        specified contact grouped by car brand/model.
      operationId: getOffersC360
      parameters:
        - name: page
          in: query
          description: Contact ID
          required: true
          schema:
            type: integer
            format: int32
            default: 1
        - name: pageSize
          in: query
          description: Page number
          schema:
            type: integer
            format: int32
            default: 20
        - name: contactId
          in: query
          description: Page size
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: List of offers/contracts for contact
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CP_API_Contract360PageResult
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      security:
        - CP_API_api_key: []
  /v1/offers/{id}:
    get:
      tags:
        - Offer
      summary: Find single offer/contract
      description: >-
        This operation is used to find single offer/contract data from CP using
        offer/contract ID.
      operationId: getOffer
      parameters:
        - name: id
          in: path
          description: Offer/contract ID
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Offer/contract object found in CP.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Offer'
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '404':
          description: Offer/contract not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      security:
        - CP_API_api_key: []
    put:
      tags:
        - Offer
      summary: Update existing offer/contract
      description: This operation is used for updating existing offer/contract.
      operationId: updateOffer
      parameters:
        - name: id
          in: path
          description: Offer/contract ID
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: Offer/contract object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CP_API_Offer'
        required: true
      responses:
        '202':
          description: Offer/contract successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Offer'
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '404':
          description: Lead not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      x-codegen-request-body-name: body
      security:
        - CP_API_api_key: []
  /v1/ownership:
    get:
      tags:
        - Ownership API Ownership
      summary: Retrieve ownerships
      description: >-
        Retrieve paginated list or vehicle ownerships. You can filter the
        results by owner, vehicle and status.
      operationId: getOwnerships
      parameters:
        - $ref: '#/components/parameters/Ownership_API_ownerId'
        - $ref: '#/components/parameters/Ownership_API_vin'
        - $ref: '#/components/parameters/Ownership_API_status'
        - $ref: '#/components/parameters/Ownership_API_pageNumber'
        - $ref: '#/components/parameters/Ownership_API_pageSize'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Ownership_API_PageResult'
                  - type: object
                    properties:
                      content:
                        type: array
                        items:
                          $ref: '#/components/schemas/Ownership_API_Ownership'
              examples:
                ownership-list:
                  summary: Paged ownership list
                  value:
                    content:
                      - id: 1
                        owner:
                          id: 1000
                          name1: Chuck
                          name2: Norris
                          fullName: Chuck Norris
                          type: C
                          address:
                            country: CH
                            postalCode: 1000
                            city: Zurich
                            street: Norris-strasse
                            houseNumber: 1A
                        vehicle:
                          vin: WBA7B01040G713141
                          retail:
                            commissionNumber: 2024/1000-1
                            homologationNumber: 3TA4 33
                            productYear: 2023
                            productMonth: 05
                            model:
                              code: HILUX
                              name: Hilux
                              factoryCode: HIL0001
                              brand:
                                code: TOY
                                name: Toyota
                          wholesale:
                            homologationNumber: 3TA4 33
                            productYear: 2023
                            productMonth: 05
                            model:
                              code: HIL
                              name: Hilux
                              factoryCode: HIL0001
                              brand:
                                code: TOY
                                name: Toyota
                        status: ACTIVE
                        registrationPlate: ZN-MRPL8S
                        startMileage: 200
                        currentMileage: 32011
                        startDate: 2022-02-29T10:22:32
                        isFirstOwner: true
                        isCurrentOwner: true
                        createdAt: 2021-02-25T10:22:32
                        createdBy:
                          employee:
                            id: 1000
                            name: John Long
                          dealer:
                            id: 1500
                            name: Emil Frey AG
                        dateCreated: 2021-02-25T10:22:32
                        dateModified: 2021-02-25T10:22:32
                      - id: 2
                        owner:
                          id: 1100
                          name1: Arnold
                          name2: Thorn
                          fullName: Arnold Thorn
                          type: C
                          address:
                            country: HR
                            postalCode: 10000
                            city: Zagreb
                            street: Ulica Ivane Brlic-Mazuranic
                            houseNumber: 28
                        vehicle:
                          vin: 2T3BFREV6DW004054
                          retail:
                            commissionNumber: 2024/1340-6
                            homologationNumber: XTA5 45
                            productYear: 2023
                            productMonth: 05
                            model:
                              code: YARIS
                              name: Yaris
                              factoryCode: YAR5445
                              brand:
                                code: TOY
                                name: Toyota
                          wholesale:
                            homologationNumber: XTA5 45
                            productYear: 2023
                            productMonth: 05
                            model:
                              code: YAR
                              name: Yaris
                              factoryCode: YAR5445
                              brand:
                                code: TOY
                                name: Toyota
                        status: REMOVED
                        registrationPlate: VZ-550-FO
                        startMileage: 2500
                        currentMileage: 32011
                        startDate: 2022-02-29T10:22:32
                        endDate: 2023-02-29T10:22:32
                        isFirstOwner: true
                        isCurrentOwner: false
                        createdAt: 2021-02-25T10:22:32
                        createdBy:
                          employee:
                            id: 1000
                            name: John Long
                          dealer:
                            id: 1500
                            name: Emil Frey AG
                        removedAt: 2023-02-29T10:22:32
                        removedBy:
                          employee:
                            id: 1100
                            name: Jane Short
                          dealer:
                            id: 1500
                            name: Emil Frey AG
                        removeReason: Accidentally created this ownership.
                        dateCreated: 2021-02-25T10:22:32
                        dateModified: 2023-02-29T10:22:32
                      - id: 3
                        owner:
                          id: 1500
                          name1: Marko
                          name2: Peric
                          fullName: Marko Peric
                          type: C
                          address:
                            country: CH
                            postalCode: 1000
                            city: Zurich
                            street: Marko-strasse
                            houseNumber: 105
                        vehicle:
                          vin: 1G3NL52E52C105119
                        status: OWNER_CHANGED
                        startMileage: 200
                        currentMileage: 7800
                        startDate: 2022-02-29T10:22:32
                        endDate: 2023-02-29T10:22:32
                        isFirstOwner: false
                        isCurrentOwner: false
                        createdAt: 2021-02-25T10:22:32
                        createdBy:
                          employee:
                            id: 1000
                            name: John Long
                          dealer:
                            id: 1500
                            name: Emil Frey AG
                        dateCreated: 2021-02-25T10:22:32
                        dateModified: 2023-02-29T10:22:32
                    page: 1
                    pageSize: 20
                    totalPages: 1
                    totalItems: 3
        '400':
          $ref: '#/components/responses/Ownership_API_NotFound'
        '401':
          $ref: '#/components/responses/Ownership_API_Unauthorized'
        '500':
          $ref: '#/components/responses/Ownership_API_ServerError'
    post:
      tags:
        - Ownership API Ownership
      summary: Create ownership
      description: Create new vehicle ownership.
      operationId: createOwnership
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ownership_API_Ownership'
            examples:
              contact-owner:
                summary: Contact ownership
                value:
                  owner:
                    id: 1000
                  vehicle:
                    vin: WBA7B01040G713141
                  status: ACTIVE
                  registrationPlate: ZN-MRPL8S
                  startMileage: 200
                  currentMileage: 32011
                  isFirstOwner: true
      responses:
        '201':
          description: Ownership successfully created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ownership_API_Ownership'
              examples:
                contact-owner:
                  summary: Contact ownership
                  value:
                    id: 1
                    owner:
                      id: 1000
                      name1: Chuck
                      name2: Norris
                      fullName: Chuck Norris
                      type: C
                      address:
                        country: CH
                        postalCode: 1000
                        city: Zurich
                        street: Norris-strasse
                        houseNumber: 1A
                    vehicle:
                      vin: WBA7B01040G713141
                      retail:
                        commissionNumber: 2024/1000-1
                        homologationNumber: 3TA4 33
                        productYear: 2023
                        productMonth: 05
                        model:
                          code: HILUX
                          name: Hilux
                          factoryCode: HIL0001
                          brand:
                            code: TOY
                            name: Toyota
                      wholesale:
                        homologationNumber: 3TA4 33
                        productYear: 2023
                        productMonth: 05
                        model:
                          code: HIL
                          name: Hilux
                          factoryCode: HIL0001
                          brand:
                            code: TOY
                            name: Toyota
                    status: ACTIVE
                    registrationPlate: ZN-MRPL8S
                    startMileage: 200
                    currentMileage: 32011
                    startDate: 2022-02-29T10:22:32
                    isFirstOwner: true
                    isCurrentOwner: true
                    createdAt: 2021-02-25T10:22:32
                    createdBy:
                      employee:
                        id: 1000
                        name: John Long
                      dealer:
                        id: 1500
                        name: Emil Frey AG
                    dateCreated: 2021-02-25T10:22:32
                    dateModified: 2021-02-25T10:22:32
        '400':
          $ref: '#/components/responses/Ownership_API_BadRequest'
        '401':
          $ref: '#/components/responses/Ownership_API_Unauthorized'
        '500':
          $ref: '#/components/responses/Ownership_API_ServerError'
  /v1/ownership/{ownershipId}:
    put:
      tags:
        - Ownership API Ownership
      summary: Update ownership
      description: Update existing vehicle ownership.
      operationId: updateOwnership
      parameters:
        - $ref: '#/components/parameters/Ownership_API_ownershipId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ownership_API_Ownership'
            examples:
              update-owner:
                summary: Update ownership
                value:
                  status: OWNER_CHANGED
                  registrationPlate: ZN-MRPL8S
                  startMileage: 200
                  currentMileage: 32011
                  startDate: 2022-02-29T10:22:32
                  endDate: 2023-02-29T10:22:32
                  isFirstOwner: true
              remove-owner:
                summary: Remove ownership
                value:
                  status: REMOVED
                  registrationPlate: ZN-MRPL8S
                  startMileage: 200
                  currentMileage: 32011
                  startDate: 2022-02-29T10:22:32
                  endDate: 2023-02-29T10:22:32
                  isFirstOwner: true
                  removeReason: Accidentally created this ownership.
      responses:
        '200':
          description: Ownership successfully updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ownership_API_Ownership'
              # ... (keep existing example)
        '400':
          $ref: '#/components/responses/Ownership_API_BadRequest'
        '401':
          $ref: '#/components/responses/Ownership_API_Unauthorized'
        '404':
          $ref: '#/components/responses/Ownership_API_NotFound'
        '500':
          $ref: '#/components/responses/Ownership_API_ServerError'

    patch:
      tags:
        - Ownership API Ownership
      summary: Patch ownership
      description: Partially update existing vehicle ownership.
      operationId: patchOwnership
      parameters:
        - $ref: '#/components/parameters/Ownership_API_ownershipId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ownership_API_Ownership'
            examples:
              update-registration-plate:
                summary: Update registration plate
                value:
                  registrationPlate: ZN-DOMINIK
              update-current-mileage:
                summary: Update current mileage
                value:
                  currentMileage: 32011
              remove-owner:
                summary: Remove ownership
                value:
                  status: REMOVED
                  removeReason: Accidentally created this ownership.
      responses:
        '200':
          description: Ownership successfully updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ownership_API_Ownership'
              # ... (keep existing example)
        '400':
          $ref: '#/components/responses/Ownership_API_BadRequest'
        '401':
          $ref: '#/components/responses/Ownership_API_Unauthorized'
        '404':
          $ref: '#/components/responses/Ownership_API_NotFound'
        '500':
          $ref: '#/components/responses/Ownership_API_ServerError'
  /v1/ownership/{ownershipId}/driver:
    post:
      tags:
        - Ownership API Driver
      summary: Create ownership driver
      description: Add new vehicle ownership driver.
      operationId: createOwnershipDriver
      parameters:
        - $ref: '#/components/parameters/Ownership_API_ownershipId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ownership_API_OwnershipDriver'
            examples:
              contact-driver:
                summary: Contact ownership driver
                value:
                  contact:
                    id: 1000
                  status: A
      responses:
        '201':
          description: Ownership driver successfully created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ownership_API_OwnershipDriver'
        '400':
          $ref: '#/components/responses/Ownership_API_BadRequest'
        '401':
          $ref: '#/components/responses/Ownership_API_Unauthorized'
        '500':
          $ref: '#/components/responses/Ownership_API_ServerError'
  /v1/ownership/{ownershipId}/driver/{driverId}:
    put:
      tags:
        - Ownership API Driver
      summary: Update ownership driver
      description: Update vehicle ownership driver.
      operationId: updateOwnershipDriver
      parameters:
        - $ref: '#/components/parameters/Ownership_API_ownershipId'
        - $ref: '#/components/parameters/Ownership_API_driverId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ownership_API_OwnershipDriver'
            examples:
              contact-driver:
                summary: Contact ownership driver
                value:
                  contact:
                    id: 1000
                  status: A
      responses:
        '201':
          description: Ownership driver successfully updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ownership_API_OwnershipDriver'
        '400':
          $ref: '#/components/responses/Ownership_API_BadRequest'
        '401':
          $ref: '#/components/responses/Ownership_API_Unauthorized'
        '500':
          $ref: '#/components/responses/Ownership_API_ServerError'
    delete:
      tags:
        - Ownership API Driver
      summary: Delete ownership driver
      description: Delete vehicle ownership driver.
      operationId: deleteOwnershipDriver
      parameters:
        - $ref: '#/components/parameters/Ownership_API_ownershipId'
        - $ref: '#/components/parameters/Ownership_API_driverId'
      responses:
        '201':
          description: Ownership driver successfully deleted.
        '400':
          $ref: '#/components/responses/Ownership_API_BadRequest'
        '401':
          $ref: '#/components/responses/Ownership_API_Unauthorized'
        '500':
          $ref: '#/components/responses/Ownership_API_ServerError'
  /v1/test-drives/{id}:
    get:
      tags:
        - Test Drive
      summary: Find single test drive
      description: >-
        This operation is used to find single test drive data from CP using test
        drive ID.
      operationId: getTestDrive
      parameters:
        - name: id
          in: path
          description: Test Drive ID
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Test drive object found in CP.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_TestDrive'
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '404':
          description: Test drive not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      security:
        - CP_API_api_key: []
    put:
      tags:
        - Test Drive
      summary: Update existing test drive
      description: This operation is used for updating existing test drive.
      operationId: updateTestDrive
      parameters:
        - name: id
          in: path
          description: Test drive ID
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: Test drive object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CP_API_TestDrive'
        required: true
      responses:
        '202':
          description: Test drive successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_TestDrive'
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '404':
          description: Test drive not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      x-codegen-request-body-name: body
      security:
        - CP_API_api_key: []
  /v1/test-drives:
    get:
      tags:
        - Test Drive
      summary: Get list of test drives
      description: >-
        This operation is used to retrieving list of test drives for specified
        contact.
      operationId: getTestDrives
      parameters:
        - name: page
          in: query
          description: Contact ID
          required: true
          schema:
            type: integer
            format: int32
            default: 1
        - name: pageSize
          in: query
          description: Page number
          schema:
            type: integer
            format: int32
            default: 20
        - name: contactId
          in: query
          description: Page size
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: List of test drives for contact
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_TestDrivePageResult'
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      security:
        - CP_API_api_key: []
    post:
      tags:
        - Test Drive
      summary: Store test drive
      description: This operation is used to store new test drive in CP.
      operationId: createTestDrive
      requestBody:
        description: Test drive object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CP_API_TestDrive'
        required: true
      responses:
        '201':
          description: Test drive successfully created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_TestDrive'
        '400':
          description: Client bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '401':
          description: Client authorization failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      x-codegen-request-body-name: body
      security:
        - CP_API_api_key: []
  /info/healthcheck:
    get:
      tags:
        - MonitoringEndpoint
      summary: Resources monitoring endpoint
      description: This endpoint is used for checking resources health status
      operationId: checkMonitoringResources
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_MonitoringObjects'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '503':
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      security:
        - CP_API_api_key: []
  /info/monitor:
    get:
      tags:
        - MonitoringEndpoint
      summary: Retrieve status from Customer Profile
      description: This endpoint is used for checking Customer Profile available status.
      operationId: createAvailableStatus
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CP_API_MessageStatusResource
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '503':
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
        '504':
          description: 'Gateway Timeout Error '
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CP_API_Result'
      security:
        - CP_API_api_key: []
  /consents/{contactId}:
    get:
      tags:
        - Ownership API Consents
      summary: Get consents
      description: Retrieve stored contact consents.
      operationId: getConsents
      parameters:
        - $ref: '#/components/parameters/Contact_API_V2Id'
        - $ref: '#/components/parameters/Ownership_API_lang'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ownership_API_ConsentResponse'
              examples:
                ef-dealer-A-mercedes:
                  summary: EF dealership A (Mercedes-Benz)
                  value:
                    status: unsigned
                    consentForm:
                      legalText: >-
                        Lorem ipsum dolor sit amet, consectetur adipiscing elit.
                        Nunc non porta neque. Vivamus ex turpis, aliquet vel est
                        in, vehicula posuere tortor. Pellentesque lacinia porta
                        tempor. Nunc interdum, lectus sed finibus sagittis, arcu
                        erat cursus mi, vulputate condimentum felis arcu vel
                        elit.
                      dealer:
                        id: 100
                        name: Emil Frey AG
                        consents:
                          - legalEntity:
                              id: 1001
                              type: retail
                              name: Emil Frey AG
                              address:
                                country: CH
                                city: Zurich
                                postalCode: 8048
                                street: Badernstrasse
                                houseNumber: 600
                            legalText: >-
                              I give my consent to dealership to use my contact
                              details for informing me about any services and
                              offers (regardless or brand).
                            checked: false
                            status: unsigned
                            channels:
                              - code: mail
                                checked: false
                              - code: phone
                                checked: false
                              - code: email
                                checked: false
                            channelType: preferred
                          - legalEntity:
                              id: 1002
                              type: marketing-service
                              name: Emil Frey Digital Service GmbH
                              address:
                                country: DE
                                city: Stuttgart
                                postalCode: 70190
                                street: Cannstatter Str.
                                houseNumber: 46
                            legalText: >-
                              I give my consent for advertising purposes,
                              invitations to product presentations and test
                              drives and for market research purposes, including
                              satisfaction surveys.
                            checked: false
                            status: unsigned
                            channels:
                              - code: mail
                                checked: false
                              - code: phone
                                checked: false
                              - code: email
                                checked: false
                            channelType: preferred
                      brands:
                        - id: 102
                          name: Mercedes-Benz
                          consents:
                            - legalEntity:
                                id: 1001
                                type: retail
                                name: Emil Frey AG
                                address:
                                  country: CH
                                  city: Zurich
                                  postalCode: 8048
                                  street: Badernstrasse
                                  houseNumber: 600
                              legalText: >-
                                I give my consent to dealership to use my
                                contact details informing me about Daimler AG
                                services and offers.
                              checked: false
                              status: unsigned
                              channels:
                                - code: mail
                                  checked: false
                                - code: phone
                                  checked: false
                                - code: email
                                  checked: false
                              channelType: preferred
                            - legalEntity:
                                id: 1009
                                type: importer
                                name: Star Import
                                address:
                                  country: CH
                                  city: Zurich
                                  postalCode: 8048
                                  street: Badernstrasse
                                  houseNumber: 25
                              legalText: >-
                                I give my consent to dealership to use my
                                contact details informing me about Daimler AG
                                services and offers.
                              checked: false
                              status: unsigned
                              channels:
                                - code: mail
                                  checked: false
                                - code: phone
                                  checked: false
                                - code: email
                                  checked: false
                            - legalEntity:
                                id: 1002
                                type: eco-system
                                name: Mercedes-Benz ecosystem
                              legalText: >-
                                I give my consent to Daimler AG and its
                                partners, including the importer company, to use
                                my contact details for informing me about their
                                services and offers.
                              checked: false
                              status: unsigned
                              channels:
                                - code: mail
                                  checked: false
                                - code: phone
                                  checked: false
                                - code: email
                                  checked: false
                              channelType: preferred
                free-dealer-b-merceres:
                  summary: Free dealership B (Mercedes-Benz)
                  value:
                    status: unsigned
                    consentForm:
                      legalText: >-
                        Lorem ipsum dolor sit amet, consectetur adipiscing elit.
                        Nunc non porta neque. Vivamus ex turpis, aliquet vel est
                        in, vehicula posuere tortor. Pellentesque lacinia porta
                        tempor. Nunc interdum, lectus sed finibus sagittis, arcu
                        erat cursus mi, vulputate condimentum felis arcu vel
                        elit.
                      dealer:
                        id: 101
                        name: Garage Galliker AG
                        consents:
                          - legalEntity:
                              id: 1005
                              type: retail
                              name: Garage Galliker AG
                              address:
                                country: CH
                                city: Kriens
                                postalCode: 6010
                                street: Sternmattweg
                                houseNumber: 4
                            legalText: >-
                              I give my consent to dealership to use my contact
                              details for informing me about any services and
                              offers (regardless or brand).
                            checked: false
                            status: unsigned
                            channels:
                              - code: mail
                                checked: false
                              - code: phone
                                checked: false
                              - code: email
                                checked: false
                            channelType: preferred
                      brands:
                        - id: 102
                          name: Mercedes-Benz
                          consents:
                            - legalEntity:
                                id: 1005
                                type: retail
                                name: Garage Galliker AG
                                address:
                                  country: CH
                                  city: Kriens
                                  postalCode: 6010
                                  street: Sternmattweg
                                  houseNumber: 4
                              legalText: >-
                                I give my consent to dealership to use my
                                contact details informing me about Daimler AG
                                services and offers.
                              checked: false
                              status: unsigned
                              channels:
                                - code: mail
                                  checked: false
                                - code: phone
                                  checked: false
                                - code: email
                                  checked: false
                              channelType: preferred
                            - legalEntity:
                                id: 1009
                                type: importer
                                name: Star Import
                                address:
                                  country: CH
                                  city: Zurich
                                  postalCode: 8004
                                  street: Sternmattweg
                                  houseNumber: 25
                              legalText: >-
                                I give my consent to dealership to use my
                                contact details informing me about Daimler AG
                                services and offers.
                              checked: false
                              status: unsigned
                              channels:
                                - code: mail
                                  checked: false
                                - code: phone
                                  checked: false
                                - code: email
                                  checked: false
                              channelType: preferred
                            - legalEntity:
                                id: 1002
                                type: eco-system
                                name: Mercedes-Benz ecosystem
                              legalText: >-
                                I give my consent to Daimler AG and its
                                partners, including the importer company, to use
                                my contact details for informing me about their
                                services and offers.
                              checked: false
                              status: unsigned
                              channels:
                                - code: mail
                                  checked: false
                                - code: phone
                                  checked: false
                                - code: email
                                  checked: false
                              channelType: preferred
                ef-dealer-A-citroen:
                  summary: EF dealership A (Citroen)
                  value:
                    status: partially-signed
                    consentForm:
                      legalText: >-
                        Lorem ipsum dolor sit amet, consectetur adipiscing elit.
                        Nunc non porta neque. Vivamus ex turpis, aliquet vel est
                        in, vehicula posuere tortor. Pellentesque lacinia porta
                        tempor. Nunc interdum, lectus sed finibus sagittis, arcu
                        erat cursus mi, vulputate condimentum felis arcu vel
                        elit.
                      dealer:
                        id: 100
                        name: Emil Frey AG
                        consents:
                          - legalEntity:
                              id: 1001
                              type: retail
                              name: Emil Frey AG
                              address:
                                country: CH
                                city: Zurich
                                postalCode: 8048
                                street: Badernstrasse
                                houseNumber: 600
                            legalText: >-
                              I give my consent to dealership to use my contact
                              details for informing me about any services and
                              offers (regardless or brand).
                            checked: true
                            status: signed
                            channels:
                              - code: mail
                                checked: true
                              - code: phone
                                checked: true
                              - code: email
                                checked: false
                            channelType: preferred
                          - legalEntity:
                              id: 1002
                              type: marketing-service
                              name: Emil Frey Digital Service GmbH
                              address:
                                country: DE
                                city: Stuttgart
                                postalCode: 70190
                                street: Cannstatter Str.
                                houseNumber: 46
                            legalText: >-
                              I give my consent for advertising purposes,
                              invitations to product presentations and test
                              drives and for market research purposes, including
                              satisfaction surveys.
                            checked: true
                            status: signed
                            channels:
                              - code: mail
                                checked: true
                              - code: phone
                                checked: true
                              - code: email
                                checked: false
                            channelType: preferred
                      brands:
                        - id: 103
                          name: Citroen
                          consents:
                            - legalEntity:
                                id: 1004
                                type: importer
                                name: Citroen Importer
                                address:
                                  country: CH
                                  city: Zurich
                                  postalCode: 8040
                                  street: Somestrasse
                                  houseNumber: 6A
                              legalText: >-
                                I give my consent to importer to use my contact
                                details informing me about Stellantis N.V.
                                services and offers.
                              checked: true
                              status: signed
                              channels:
                                - code: mail
                                  checked: true
                                - code: phone
                                  checked: true
                                - code: email
                                  checked: false
                              channelType: preferred
                        - id: 102
                          name: Mercedes-Benz
                          consents:
                            - legalEntity:
                                id: 1001
                                type: retail
                                name: Emil Frey AG
                                address:
                                  country: CH
                                  city: Zurich
                                  postalCode: 8048
                                  street: Badernstrasse
                                  houseNumber: 600
                              legalText: >-
                                I give my consent to dealership to use my
                                contact details informing me about Daimler AG
                                services and offers.
                              checked: true
                              status: signed
                              channels:
                                - code: mail
                                  checked: true
                                - code: phone
                                  checked: true
                                - code: email
                                  checked: false
                              channelType: preferred
                            - legalEntity:
                                id: 1001
                                type: importer
                                name: Star Import
                                address:
                                  country: CH
                                  city: Zurich
                                  postalCode: 8048
                                  street: 25
                              legalText: >-
                                I give my consent to dealership to use my
                                contact details informing me about Daimler AG
                                services and offers.
                              checked: true
                              status: signed
                              channels:
                                - code: mail
                                  checked: true
                                - code: phone
                                  checked: true
                                - code: email
                                  checked: false
                              channelType: preferred
                            - legalEntity:
                                id: 1002
                                type: eco-system
                                name: Mercedes-Benz ecosystem
                              legalText: >-
                                I give my consent to Daimler AG and its
                                partners, including the importer company, to use
                                my contact details for informing me about their
                                services and offers.
                              checked: true
                              status: signed
                              channels:
                                - code: mail
                                  checked: true
                                - code: phone
                                  checked: true
                                - code: email
                                  checked: false
                              channelType: preferred
                    consentDocument:
                      id: 437b88a6-3fcf-11ed-b878-0242ac120002
                      url: >-
                        https://cp-ch.efd.hr/api/document/437b88a6-3fcf-11ed-b878-0242ac120002
                      contentType: application/pdf
                      contentLength: 430994
                      externalReference: 437b88a6-3fcf-11ed-b878-0242ac120002
                      clientIp: 204.05.123.105
                      signatureType: signature
                      signatureDate": '2022-09-29T08:09:14'
        '401':
          $ref: '#/components/responses/Ownership_API_Unauthorized'
        '500':
          $ref: '#/components/responses/Ownership_API_ServerError'
    post:
      tags:
        - Ownership API Consents
      summary: Store or preview consents
      description: >-
        Store consents and generate PDF document or just download PDF preview
        without storing any data.
      operationId: storeConsents
      parameters:
        - $ref: '#/components/parameters/Contact_API_V2Id'
        - $ref: '#/components/parameters/Ownership_API_lang'
        - name: preview
          in: query
          required: false
          description: Preview PDF document
          schema:
            type: boolean
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                consents:
                  $ref: '#/components/schemas/Ownership_API_ConsentRequest'
                signatureFile:
                  type: string
                  format: binary
            encoding:
              consents:
                contentType: application/json
              signatureFile:
                contentType: image/png, image/jpeg, application/pdf; charset=utf-8
            examples:
              consents:
                summary: EF dealership A (Mercedes-Benz)
                value:
                  consentForm:
                    dealer:
                      id: 100
                      consents:
                        - legalEntity:
                            id: 1001
                            checked: true
                            channels:
                              - code: mail
                                checked: true
                              - code: phone
                                checked: true
                              - code: email
                                checked: false
                            channelType: preferred
                        - legalEntity:
                            id: 1002
                            checked: false
                            channels:
                              - code: mail
                                checked: true
                              - code: phone
                                checked: true
                              - code: email
                                checked: false
                            channelType: preferred
                    brands:
                      - id: 102
                        consents:
                          - legalEntity:
                              id: 1001
                              checked: true
                              channels:
                                - code: mail
                                  checked: true
                                - code: phone
                                  checked: true
                                - code: email
                                  checked: false
                              channelType: preferred
                          - legalEntity:
                              id: 1009
                              checked: true
                              channels:
                                - code: mail
                                  checked: true
                                - code: phone
                                  checked: true
                                - code: email
                                  checked: false
                              channelType: preferred
                          - legalEntity:
                              id: 1002
                              checked: false
                              channels:
                                - code: mail
                                  checked: true
                                - code: phone
                                  checked: true
                                - code: email
                                  checked: false
                              channelType: preferred
                  signatureType: signature
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ownership_API_ConsentResponse'
              example:
                status: signed
                consentForm:
                  legalText: >-
                    Lorem ipsum dolor sit amet, consectetur adipiscing elit.
                    Nunc non porta neque. Vivamus ex turpis, aliquet vel est in,
                    vehicula posuere tortor. Pellentesque lacinia porta tempor.
                    Nunc interdum, lectus sed finibus sagittis, arcu erat cursus
                    mi, vulputate condimentum felis arcu vel elit.
                  dealer:
                    id: 100
                    name: Emil Frey AG
                    consents:
                      - legalEntity:
                          id: 1001
                          type: retail
                          name: Emil Frey AG
                          address:
                            country: CH
                            city: Zurich
                            postalCode: 8048
                            street: Badernstrasse
                            houseNumber: 600
                        legalText: >-
                          I give my consent to dealership to use my contact
                          details for informing me about any services and offers
                          (regardless or brand).
                        checked: true
                        status: signed
                        channels:
                          - code: mail
                            checked: true
                          - code: phone
                            checked: true
                          - code: email
                            checked: false
                        channelType: preferred
                      - legalEntity:
                          id: 1002
                          type: marketing-service
                          name: Emil Frey Digital Service GmbH
                          address:
                            country: DE
                            city: Stuttgart
                            postalCode: 70190
                            street: Cannstatter Str.
                            houseNumber: 46
                        legalText: >-
                          I give my consent for advertising purposes,
                          invitations to product presentations and test drives
                          and for market research purposes, including
                          satisfaction surveys.
                        checked: true
                        status: signed
                        channels:
                          - code: mail
                            checked: true
                          - code: phone
                            checked: true
                          - code: email
                            checked: false
                        channelType: preferred
                  brands:
                    id: 102
                    name: Mercedes-Benz
                    consents:
                      - legalEntity:
                          id: 1001
                          type: retail
                          name: Emil Frey AG
                          address:
                            country: CH
                            city: Zurich
                            postalCode: 8048
                            street: Badernstrasse
                            houseNumber: 600
                        legalText: >-
                          I give my consent to dealership to use my contact
                          details informing me about Daimler AG services and
                          offers.
                        checked: true
                        status: signed
                        channels:
                          - code: mail
                            checked: true
                          - code: phone
                            checked: true
                          - code: email
                            checked: false
                        channelType: preferred
                      - legalEntity:
                          id: 1009
                          type: importer
                          name: Star Import
                          address:
                            country: CH
                            city: Zurich
                            postalCode: 8048
                            street: Badernstrasse
                            houseNumber: 25
                        legalText: >-
                          I give my consent to dealership to use my contact
                          details informing me about Daimler AG services and
                          offers.
                        checked: true
                        status: signed
                        channels:
                          - code: mail
                            checked: true
                          - code: phone
                            checked: true
                          - code: email
                            checked: false
                        channelType: preferred
                      - legalEntity:
                          id: 1002
                          type: eco-system
                          name: Mercedes-Benz ecosystem
                        legalText: >-
                          I give my consent to Daimler AG and its partners,
                          including the importer company, to use my contact
                          details for informing me about their services and
                          offers.
                        checked: true
                        status: signed
                        channels:
                          - code: mail
                            checked: true
                          - code: phone
                            checked: true
                          - code: email
                            checked: false
                        channelType: preferred
                consentDocument:
                  id: 437b88a6-3fcf-11ed-b878-0242ac120002
                  url: >-
                    https://cp-ch.efd.hr/api/document/437b88a6-3fcf-11ed-b878-0242ac120002
                  contentType: application/pdf
                  contentLength: 430994
                  clientIp: 204.05.123.105
                  signatureType: signature
                  signatureDate: '2022-09-29T08:09:14'
            application/pdf:
              schema:
                type: string
                format: binaty
              example: PDF document bytes...
        '401':
          $ref: '#/components/responses/Ownership_API_Unauthorized'
        '500':
          $ref: '#/components/responses/Ownership_API_ServerError'
  /consents/{contactId}/history:
    get:
      tags:
        - Ownership API Consents
      summary: Get consents history
      description: Retrieve history of all stored contact consents for legal-entity.
      operationId: getConsentHistory
      parameters:
        - $ref: '#/components/parameters/Contact_API_V2Id'
        - $ref: '#/components/parameters/Ownership_API_version'
        - $ref: '#/components/parameters/Ownership_API_pageNumber'
        - $ref: '#/components/parameters/Ownership_API_pageSize'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: array
                    items:
                      $ref: '#/components/schemas/Ownership_API_ConsentHistory'
                  page:
                    type: integer
                    format: int32
                  pageSize:
                    type: integer
                    format: int32
                  totalItems:
                    type: integer
                    format: int32
                  totalPages:
                    type: integer
                    format: int32
        '401':
          $ref: '#/components/responses/Ownership_API_Unauthorized'
        '500':
          $ref: '#/components/responses/Ownership_API_ServerError'
  /download/{documentId}:
    get:
      tags:
        - Ownership API Download
      summary: Download consents document.
      description: Returns signed PDF document.
      operationId: downloadDocument
      parameters:
        - $ref: '#/components/parameters/Ownership_API_documentId'
      responses:
        '200':
          description: OK
          content:
            application/pdf:
              schema:
                type: string
                format: binary
              example: PDF document bytes...
        '401':
          $ref: '#/components/responses/Ownership_API_Unauthorized'
        '500':
          $ref: '#/components/responses/Ownership_API_ServerError'
  /email/{contactId}/document:
    post:
      tags:
        - Ownership API Email
      summary: Email consents document.
      description: Sends email to a customer with attached signed PDF document.
      operationId: sendEmailDocument
      parameters:
        - $ref: '#/components/parameters/Contact_API_V2Id'
        - $ref: '#/components/parameters/Ownership_API_consentId'
        - $ref: '#/components/parameters/Ownership_API_lang'
        - $ref: '#/components/parameters/Ownership_API_aggregate'
        - $ref: '#/components/parameters/Ownership_API_entities'
      responses:
        '200':
          description: Email sent.
        '204':
          description: No Content
        '401':
          $ref: '#/components/responses/Ownership_API_Unauthorized'
        '500':
          $ref: '#/components/responses/Ownership_API_ServerError'
  /email/{contactId}/link:
    post:
      tags:
        - Ownership API Email
      summary: Email consents link.
      description: Sends email to a customer with link to a consent form.
      operationId: sendEmailLink
      parameters:
        - $ref: '#/components/parameters/Contact_API_V2Id'
        - $ref: '#/components/parameters/Ownership_API_lang'
        - $ref: '#/components/parameters/Ownership_API_aggregate'
        - $ref: '#/components/parameters/Ownership_API_entities'
      responses:
        '200':
          description: Email sent.
        '204':
          description: No Content
        '401':
          $ref: '#/components/responses/Ownership_API_Unauthorized'
        '500':
          $ref: '#/components/responses/Ownership_API_ServerError'
  /consent-form:
    get:
      tags:
        - Ownership API Form
      summary: Get contact consents
      description: Retrieve contact consents.
      operationId: getConsentForm
      parameters:
        - $ref: '#/components/parameters/Ownership_API_token'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ownership_API_ConsentResponse'
              example:
                status: signed
                consentForm:
                  legalText: >-
                    Lorem ipsum dolor sit amet, consectetur adipiscing elit.
                    Nunc non porta neque. Vivamus ex turpis, aliquet vel est in,
                    vehicula posuere tortor. Pellentesque lacinia porta tempor.
                    Nunc interdum, lectus sed finibus sagittis, arcu erat cursus
                    mi, vulputate condimentum felis arcu vel elit.
                  dealer:
                    id: 100
                    name: Emil Frey AG
                    consents:
                      - legalEntity:
                          id: 1001
                          type: retail
                          name: Emil Frey AG
                          address:
                            country: CH
                            city: Zurich
                            postalCode: 8048
                            street: Badernstrasse
                            houseNumber: 600
                        legalText: >-
                          I give my consent to dealership to use my contact
                          details for informing me about any services and offers
                          (regardless or brand).
                        checked: false
                        status: signed
                      - legalEntity:
                          id: 1002
                          type: marketing-service
                          name: Emil Frey Digital Service GmbH
                          address:
                            country: DE
                            city: Stuttgart
                            postalCode: 70190
                            street: Cannstatter Str.
                            houseNumber: 46
                        legalText: >-
                          I give my consent for advertising purposes,
                          invitations to product presentations and test drives
                          and for market research purposes, including
                          satisfaction surveys.
                        checked: false
                        status: unsigned
                        channels:
                          - code: mail
                            checked: false
                          - code: phone
                            checked: false
                          - code: email
                            checked: false
                        channelType: preferred
                brands:
                  id: 102
                  name: Mercedes-Benz
                  consents:
                    - legalEntity:
                        id: 1001
                        type: retail
                        name: Emil Frey AG
                        address:
                          country: CH
                          city: Zurich
                          postalCode: 8048
                          street: Badernstrasse
                          houseNumber: 600
                      legalText: >-
                        I give my consent to dealership to use my contact
                        details informing me about Daimler AG services and
                        offers.
                      checked: false
                      status: unsigned
                    - legalEntity:
                        id: 1002
                        type: eco-system
                        name: Mercedes-Benz ecosystem
                      legalText: >-
                        I give my consent to Daimler AG and its partners,
                        including the importer company, to use my contact
                        details for informing me about their services and
                        offers.
                      checked: false
                      status: usigned
                      channels:
                        - code: mail
                          checked: false
                        - code: phone
                          checked: false
                        - code: email
                          checked: false
                      channelType: preferred
        '401':
          $ref: '#/components/responses/Ownership_API_Unauthorized'
        '500':
          $ref: '#/components/responses/Ownership_API_ServerError'
    post:
      tags:
        - Ownership API Form
      summary: Store contact consents
      description: Store contact consents.
      operationId: storeConsentForm
      parameters:
        - $ref: '#/components/parameters/Ownership_API_token'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ownership_API_ConsentRequest'
            example:
              consentForm:
                dealer:
                  id: 100
                  consents:
                    - legalEntity:
                        id: 1001
                        checked: true
                    - legalEntity:
                        id: 1002
                        checked: false
                  channels:
                    - code: mail
                      checked: true
                    - code: phone
                      checked: true
                    - code: email
                      checked: false
                brands:
                  id: 102
                  consents:
                    - legalEntity:
                        id: 1001
                        checked: true
                    - legalEntity:
                        id: 1002
                        checked: false
                  channels:
                    - code: mail
                      checked: true
                    - code: phone
                      checked: true
                    - code: email
                      checked: false
                  channelType: preferred
              signatureType: web
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ownership_API_ConsentResponse'
              example:
                status: signed
                consentForm:
                  legalText: >-
                    Lorem ipsum dolor sit amet, consectetur adipiscing elit.
                    Nunc non porta neque. Vivamus ex turpis, aliquet vel est in,
                    vehicula posuere tortor. Pellentesque lacinia porta tempor.
                    Nunc interdum, lectus sed finibus sagittis, arcu erat cursus
                    mi, vulputate condimentum felis arcu vel elit.
                  dealer:
                    id: 100
                    name: Emil Frey AG
                    consents:
                      - legalEntity:
                          id: 1001
                          type: retail
                          name: Emil Frey AG
                          address:
                            country: CH
                            city: Zurich
                            postalCode: 8048
                            street: Badernstrasse
                            houseNumber: 600
                        legalText: >-
                          I give my consent to dealership to use my contact
                          details for informing me about any services and offers
                          (regardless or brand).
                        checked: true
                        status: signed
                      - legalEntity:
                          id: 1002
                          type: marketing-service
                          name: Emil Frey Digital Service GmbH
                          address:
                            country: DE
                            city: Stuttgart
                            postalCode: 70190
                            street: Cannstatter Str.
                            houseNumber: 46
                        legalText: >-
                          I give my consent for advertising purposes,
                          invitations to product presentations and test drives
                          and for market research purposes, including
                          satisfaction surveys.
                        checked: true
                        status: signed
                    channelType: preferred
                    channels:
                      - code: mail
                        checked: true
                      - code: phone
                        checked: true
                      - code: email
                        checked: false
                  brands:
                    - id: 102
                      name: Mercedes-Benz
                      consents:
                        - legalEntity:
                            id: 1001
                            type: retail
                            name: Emil Frey AG
                            address:
                              country: CH
                              city: Zurich
                              postalCode: 8048
                              street: Badernstrasse
                              houseNumber: 600
                          legalText: >-
                            I give my consent to dealership to use my contact
                            details informing me about Daimler AG services and
                            offers.
                          checked: true
                          status: signed
                        - legalEntity:
                            id: 1002
                            type: eco-system
                            name: Mercedes-Benz ecosystem
                          legalText: >-
                            I give my consent to Daimler AG and its partners,
                            including the importer company, to use my contact
                            details for informing me about their services and
                            offers.
                          checked: true
                          status: signed
                      channelType: preferred
                      channels:
                        - code: mail
                          checked: true
                        - code: phone
                          checked: true
                        - code: email
                          checked: false
                consentDocument:
                  id: 437b88a6-3fcf-11ed-b878-0242ac120002
                  url: >-
                    https://cp-ch.efd.hr/api/document/437b88a6-3fcf-11ed-b878-0242ac120002
                  contentType: application/pdf
                  contentLength: 430994
                  clientIp: 204.05.123.105
                  signatureType: signature
                  signatureDate: '2022-09-29T08:09:14'
        '401':
          $ref: '#/components/responses/Ownership_API_Unauthorized'
        '500':
          $ref: '#/components/responses/Ownership_API_ServerError'
  /consent-form/email:
    post:
      tags:
        - Ownership API Form
      summary: Send email contact consents
      description: Send contact form consents email.
      operationId: emailConsentForm
      parameters:
        - $ref: '#/components/parameters/Ownership_API_token'
      responses:
        '200':
          description: Email sent
        '401':
          $ref: '#/components/responses/Ownership_API_Unauthorized'
        '500':
          $ref: '#/components/responses/Ownership_API_ServerError'
components:
  schemas:
    CP_API_DeclarationCampaignSender:
      type: object
      properties:
        name:
          type: string
          description: Declaration campaign sender name.
        code:
          type: string
          description: Declaration campaign sender code.
      description: Object containing declaration campaign sender information.
    Contact_API_V1Address:
      type: object
      properties:
        addressType:
          type: string
          description: Contact address type
          enum:
            - home
            - delivery
            - invoice
            - commercial_register
            - unknown
        country:
          maxLength: 3
          minLength: 0
          type: string
          description: Country ISO2 code
        region:
          type: string
          description: National region code
        city:
          maxLength: 100
          minLength: 0
          type: string
          description: Address city
        zip:
          maxLength: 20
          minLength: 0
          type: string
          description: Address postal code
        zipAdditional:
          maxLength: 10
          minLength: 0
          type: string
          description: Additional address postal code
        street:
          maxLength: 256
          minLength: 0
          type: string
          description: Address street
        streetAdditional:
          maxLength: 256
          minLength: 0
          type: string
          description: Address street additional data
        streetNumber:
          maxLength: 40
          minLength: 0
          type: string
          description: Address street number
        longitude:
          type: number
          description: Geographical longitude
        latitude:
          type: number
          description: Geographical latitude
        primary:
          type: boolean
          description: Is this primary address?
        valid:
          type: boolean
          description: Is valid address?
        status:
          type: string
          description: Address status
          enum:
            - verified_person
            - verified_household
            - verified_company
            - moved_new_address
            - moved_unknown
            - moved_abroad
            - deceased
            - out_of_business
            - resident_unknown
            - unknown_address
        validationDate:
          type: string
          description: When this object was last validated
          format: date-time
          readOnly: true
        createdByEmployee:
          $ref: '#/components/schemas/CP_API_Resource'
        modifiedByEmployee:
          $ref: '#/components/schemas/CP_API_Resource'
        createdByDealer:
          $ref: '#/components/schemas/CP_API_Resource'
        modifiedByDealer:
          $ref: '#/components/schemas/CP_API_Resource'
        createdByDataSource:
          type: string
          description: External system which has created contact-address
        modifiedByDataSource:
          type: string
          description: External system which was last to modify contact-address
        validationDisabled:
          type: boolean
          description: Is valididation disabled
      description: This is a contact address
    Contact_API_V1Duplicate:
      type: object
      properties:
        id:
          type: integer
          description: Resource ID
          format: int32
        sources:
          type: array
          description: Source IDs
          items:
            $ref: '#/components/schemas/CP_API_Source'
        name:
          type: string
          description: Resource name
        type:
          type: string
          description: >-
            Contact type (I - interest, C - customer, W - dealer without
            workflow, F - dealer with workflow, H - handler dealer)
          enum:
            - I
            - C
            - W
            - F
            - H
        businessGroup:
          type: string
          description: >-
            Contact business group. Examples [ TCB(T-Com Berlin), TCM(T-Com
            Munchen), TCF(T-Com Frankfurt) ]
        name1:
          type: string
          description: Contact first name
        name2:
          type: string
          description: Contact last name
        additionalName:
          type: string
          description: Contact additional name
        salutation:
          type: string
          description: Contact salutation
        gender:
          type: string
          description: Contact gender
        title:
          type: string
          description: Contact title
        dateOfBirth:
          type: string
          description: Contact date of birth
          format: date-time
        ef:
          type: boolean
          description: Is an Emil Frey contact?
        creditLock:
          type: boolean
          description: Is contact credit locked?
        address:
          $ref: '#/components/schemas/Contact_API_V1Address'
        email:
          type: string
          description: Contact's email
        noEmail:
          type: boolean
          description: Does contact have email (GDPR)
        emailDenied:
          type: boolean
          description: Contact has email but doesn't want anyone to use it (GDPR)
        telephone:
          type: string
          description: Contact's telephone
        telephoneCountry:
          type: string
          description: Contact's telephone number country origin. (ISO-2-Code)
        mobile:
          type: string
          description: Contact's mobile phone
        customerId:
          type: string
          description: Contact's customer ID
        alphaCustomerId:
          type: string
          description: Contact's alphanumeric ID
        interestId:
          type: string
          description: Contact's interest ID
        careId:
          type: string
          description: Contact's CARE ID
        business:
          type: boolean
          description: Indicate if contact is company or private person.
        personal:
          type: boolean
          description: Indicate if contact is company or private person.
        primaryLanguage:
          type: string
          description: Contact's primary language
        status:
          type: string
          description: Contact's status
          enum:
            - active
            - not_editable
            - deceased
        vatNumber:
          type: string
          description: Contact's VAT Number
        classification:
          type: string
          description: Contact's Business Classification
        owner:
          $ref: '#/components/schemas/CP_API_Dealer'
        hasConsent:
          type: boolean
          description: Indicate if contact has given GDPR consent to dealer/importer.
        dateCreated:
          type: string
          description: Date when contact has been created.
          format: date-time
        dateModified:
          type: string
          description: Date when contact has been modified.
          format: date-time
        company:
          type: string
          description: company name
        company2:
          type: string
          description: company2 name
        valid:
          type: boolean
          description: Indicate if contact is duplicate or not.
        contactUsages:
          type: array
          description: List of contact usages in external systems.
          items:
            $ref: '#/components/schemas/Contact_API_V1Usage'
        tags:
          type: array
          description: List of contact tags.
          items:
            type: string
        matching:
          type: number
          description: Matching percentage
          readOnly: true
      description: This is a contact duplicate object
    Contact_API_V1Usage:
      type: object
      properties:
        parent:
          $ref: '#/components/schemas/Contact_API_V1Usage'
        sourceName:
          type: string
          description: Contact usage external system name
        sourceId:
          type: string
          description: Contact usage external system id
        active:
          type: boolean
          description: Is contact still active in this external system
        lastTransactionDate:
          type: string
          description: Last transaction date in external system
          format: date-time
      description: This is a contact usage
    CP_API_Dealer:
      type: object
      properties:
        id:
          type: integer
          description: Resource ID
          format: int32
        sources:
          type: array
          description: Source IDs
          items:
            $ref: '#/components/schemas/CP_API_Source'
        name:
          type: string
          description: Resource name
        ef:
          type: boolean
          description: Is an Emil Frey dealer?
      description: This is a dealer object.
    CP_API_Resource:
      type: object
      properties:
        id:
          type: integer
          description: Resource ID
          format: int32
        sources:
          type: array
          description: Source IDs
          items:
            $ref: '#/components/schemas/CP_API_Source'
        name:
          type: string
          description: Resource name
    CP_API_Result:
      type: object
      properties:
        duplicateIds:
          type: array
          description: List of CP contact IDs if any duplicates were found
          items:
            type: integer
            format: int32
        duplicateContacts:
          type: array
          description: List of CP contacts if any duplicates were found
          items:
            $ref: '#/components/schemas/Contact_API_V1Duplicate'
        message:
          type: string
          description: Response message
        errorCodes:
          type: array
          description: List of error codes
          readOnly: true
          items:
            type: string
        errorFields:
          type: array
          description: List of error fields
          items:
            type: string
        failures:
          type: array
          description: List of failures if any occurred
          items:
            $ref: '#/components/schemas/CP_API_ValidationFailure'
      description: This is a result object
    CP_API_Source:
      type: object
      properties:
        name:
          type: string
          description: Source name
        id:
          type: string
          description: Source ID
    CP_API_ValidationFailure:
      type: object
      properties:
        field:
          type: string
        code:
          type: string
          enum:
            - OK
            - REQUIRED
            - CORRECTED
            - INCORRECT
            - CONFLICT
            - INVALID
        message:
          type: string
        correction:
          type: string
        hints:
          type: array
          items:
            $ref: '#/components/schemas/CP_API_ValidationHint'
      description: This is a validation failure object
    CP_API_ValidationHint:
      type: object
      properties:
        type:
          type: string
          description: Validation hint type
        value:
          type: object
          properties: {}
          description: Validation hint embedded object
      description: This is a validation failure hint object
    Contact_API_V1:
      type: object
      properties:
        id:
          type: integer
          description: Resource ID
          format: int32
        sources:
          type: array
          description: Source IDs
          items:
            $ref: '#/components/schemas/CP_API_Source'
        name:
          type: string
          description: Resource name
        type:
          type: string
          description: >-
            Contact type (I - interest, C - customer, W - dealer without
            workflow, F - dealer with workflow, H - handler dealer)
          enum:
            - I
            - C
            - W
            - F
            - H
        businessGroup:
          type: string
          description: >-
            Contact business group. Examples [ TCB(T-Com Berlin), TCM(T-Com
            Munchen), TCF(T-Com Frankfurt) ]
        name1:
          type: string
          description: Contact first name
        name2:
          type: string
          description: Contact last name
        additionalName:
          type: string
          description: Contact additional name
        salutation:
          type: string
          description: Contact salutation
        gender:
          type: string
          description: Contact gender
        title:
          type: string
          description: Contact title
        dateOfBirth:
          type: string
          description: Contact date of birth
          format: date-time
        ef:
          type: boolean
          description: Is an Emil Frey contact?
        creditLock:
          type: boolean
          description: Is contact credit locked?
        address:
          $ref: '#/components/schemas/Contact_API_V1Address'
        email:
          type: string
          description: Contact's email
        noEmail:
          type: boolean
          description: Does contact have email (GDPR)
        emailDenied:
          type: boolean
          description: Contact has email but doesn't want anyone to use it (GDPR)
        telephone:
          type: string
          description: Contact's telephone
        mobile:
          type: string
          description: Contact's mobile phone
        customerId:
          type: string
          description: Contact's customer ID
        alphaCustomerId:
          type: string
          description: Contact's alphanumeric ID
        interestId:
          type: string
          description: Contact's interest ID
        careId:
          type: string
          description: Contact's CARE ID
        business:
          type: boolean
          description: Indicate if contact is company or private person.
        personal:
          type: boolean
          description: Indicate if contact is company or private person.
        primaryLanguage:
          type: string
          description: Contact's primary language
        status:
          type: string
          description: Contact's status
          enum:
            - active
            - not_editable
            - deceased
        vatNumber:
          type: string
          description: Contact's VAT Number
        classification:
          type: string
          description: Contact's Business Classification
        owner:
          $ref: '#/components/schemas/CP_API_Dealer'
        hasConsent:
          type: boolean
          description: Indicate if contact has given GDPR consent to dealer/importer.
        dateCreated:
          type: string
          description: Date when contact has been created.
          format: date-time
        dateModified:
          type: string
          description: Date when contact has been modified.
          format: date-time
        company:
          type: string
          description: company name
        company2:
          type: string
          description: company2 name
        valid:
          type: boolean
          description: Indicate if contact is duplicate or not.
        contactUsages:
          type: array
          description: List of contact usages in external systems.
          items:
            $ref: '#/components/schemas/Contact_API_V1Usage'
        tags:
          type: array
          description: List of contact tags.
          items:
            type: string
      description: This is a contact object.
    CP_API_DealerEmployee:
      type: object
      properties:
        dealerNr:
          type: string
        employeeNr:
          type: string
        employeeName1:
          type: string
        employeeName2:
          type: string
    CP_API_Declaration:
      type: object
      properties:
        id:
          type: integer
          format: int32
        declarationId:
          type: integer
          format: int32
        sources:
          type: array
          items:
            $ref: '#/components/schemas/CP_API_Source'
        contact:
          $ref: '#/components/schemas/Contact_API_V1'
        vehicle:
          $ref: '#/components/schemas/CP_API_DeclarationVehicleResource'
        registrationPlate:
          type: string
        dealer:
          $ref: '#/components/schemas/CP_API_Resource'
        contactDealer:
          $ref: '#/components/schemas/CP_API_Resource'
        dealerEmployee:
          $ref: '#/components/schemas/CP_API_DealerEmployee'
        declarationType:
          type: string
        declarationStatus:
          type: string
        ownershipType:
          type: string
        estimatedKm:
          type: string
        vehicleUsage:
          type: string
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
        createdBy:
          $ref: '#/components/schemas/CP_API_DeclarationCreatedBy'
        modifiedBy:
          $ref: '#/components/schemas/CP_API_DeclarationCreatedBy'
        createdByDataSource:
          type: string
        modifiedByDataSource:
          type: string
        allowImporterCampaign:
          type: boolean
        allowDealerServiceCampaign:
          type: boolean
        allowDealerSaleCampaign:
          type: boolean
        polite:
          type: boolean
        driver:
          $ref: '#/components/schemas/Contact_API_V1'
        declarationCampaignSender:
          type: string
        tag:
          type: array
          items:
            type: string
        declarationTradeIn:
          $ref: '#/components/schemas/CP_API_DeclarationTradeInResource'
        dateCreated:
          type: string
          format: date-time
        dateModified:
          type: string
          format: date-time
        entityDateModified:
          type: string
          format: date-time
        brandName:
          type: string
        modelName:
          type: string
        vehicleDescription:
          type: string
        countryMasterCode:
          type: string
        businessContactPerson:
          $ref: '#/components/schemas/Contact_API_V1'
        contactRelation:
          $ref: '#/components/schemas/CP_API_DeclarationContactRelation'
        dealerSale:
          $ref: '#/components/schemas/CP_API_Resource'
        dealerService:
          $ref: '#/components/schemas/CP_API_Resource'
        manualMileage:
          maximum: 999999
          minimum: 0
          type: integer
          format: int32
        ownerChangeReason:
          type: string
        firstRegistrationDate:
          type: string
          format: date-time
        ownershipStartDate:
          type: string
          format: date-time
      description: This is a declaration object
    CP_API_DeclarationCar:
      type: object
      properties:
        brand:
          $ref: '#/components/schemas/CP_API_Resource'
        model:
          $ref: '#/components/schemas/CP_API_Resource'
        fuelType:
          type: string
    CP_API_DeclarationContactRelation:
      type: object
      properties:
        id:
          type: integer
          description: Relation id.
          format: int32
        contact:
          $ref: '#/components/schemas/Contact_API_V1'
        code:
          type: string
          description: >-
            Relation type code (O - owner, M - manager, E - employee, D -
            driver, F - family, CP - contact person
        function:
          maxLength: 50
          minLength: 0
          type: string
          description: Relation type function.
      description: This is a declaration contact relation resource object
    CP_API_DeclarationCreatedBy:
      type: object
      properties:
        dealer:
          $ref: '#/components/schemas/CP_API_Resource'
        employee:
          $ref: '#/components/schemas/CP_API_Resource'
    CP_API_DeclarationTradeInResource:
      type: object
      properties:
        id:
          type: integer
          format: int32
        brand:
          type: string
        model:
          type: string
        countryMasterNumber:
          type: string
        homologationNumber:
          type: string
        registrationPlate:
          type: string
        notes:
          type: string
        vin:
          type: string
      description: This is a declaration trade in object
    CP_API_DeclarationVehicleResource:
      type: object
      properties:
        vin:
          type: string
        sources:
          type: array
          items:
            $ref: '#/components/schemas/CP_API_Source'
        car:
          $ref: '#/components/schemas/CP_API_DeclarationCarResource'
        vehicleDescription:
          type: string
        countryMasterCode:
          type: string
      description: This is a declaration vehicle object
    CP_API_Brand:
      type: object
      properties:
        id:
          type: integer
          description: Resource ID
          format: int32
        sources:
          type: array
          description: Source IDs
          items:
            $ref: '#/components/schemas/CP_API_Source'
        name:
          type: string
          description: Resource name
        alias:
          type: string
          description: Car brand alias
          example: ALF - Alfa,AUD - Audi
      description: This is a car brand object
    CP_API_DeclarationEmployee:
      type: object
      properties:
        id:
          type: integer
          description: Resource ID
          format: int32
        sources:
          type: array
          description: Source IDs
          items:
            $ref: '#/components/schemas/CP_API_Source'
        name:
          type: string
          description: Resource name
        name1:
          type: string
          description: Declaration employee name1.
        name2:
          type: string
          description: Declaration employee name2.
      description: Object containing declaration employees information.
    CP_API_DeclarationOwnerChangeReason:
      type: object
      properties:
        code:
          type: string
          description: Declaration owner change reason code.
        enabled:
          type: boolean
          description: Declaration owner change reason is enabled.
      description: Object containing...
    CP_API_DeclarationStatus:
      type: object
      properties:
        code:
          type: string
          description: Declaration status code.
      description: Object containing declaration status information.
    CP_API_DeclarationTag:
      type: object
      properties:
        code:
          type: string
          description: Declaration tag code.
      description: Object containing declaration tag information.
    CP_API_DeclarationType:
      type: object
      properties:
        name:
          type: string
          description: Declaration type name.
        code:
          type: string
          description: Declaration type code.
        allowOwnerChange:
          type: boolean
          description: Declaration is allowed owner change.
      description: Object containing declaration type information.
    Contact_API_V1VehicleFrequentDriver:
      type: object
      properties:
        name1:
          type: string
          description: Vehicles most frequent driver name1
        name2:
          type: string
          description: Vehicles most frequent driver name2
        salutation:
          type: string
          description: Vehicles most frequent driver salutation
        dateCreated:
          type: string
          description: Vehicles most frequent driver date created
          format: date-time
          readOnly: true
        dateModified:
          type: string
          description: Vehicles most frequent driver date modified
          format: date-time
          readOnly: true
      description: This is a vehicles most frequent driver object.
    CP_API_DriverResource:
      type: object
      properties:
        driver:
          $ref: '#/components/schemas/CP_API_Resource'
        status:
          type: string
          description: Vehicle driver status
          readOnly: true
        createdByDataSource:
          type: string
          description: Vehicle driver relation created from system name
          readOnly: true
        modifiedByDataSource:
          type: string
          description: Vehicle driver relation last modified from system name
          readOnly: true
        dateCreated:
          type: string
          description: Vehicle driver relation creation date
          format: date-time
          readOnly: true
        dateModified:
          type: string
          description: Vehicle driver relation last modified date
          format: date-time
          readOnly: true
    CP_API_EmployeeDealerDetails:
      type: object
      properties:
        id:
          type: integer
          description: Resource ID
          format: int32
        sources:
          type: array
          description: Source IDs
          items:
            $ref: '#/components/schemas/CP_API_Source'
        name:
          type: string
          description: Resource name
        firstName:
          type: string
          description: First name
        lastName:
          type: string
          description: Last name
        picture:
          type: string
          description: Picture URL
        role:
          type: string
          description: Role
        telephone:
          type: string
          description: Telephone
        email:
          type: string
          description: Email
        status:
          type: string
          description: Status
          enum:
            - active
            - inactive
            - not_found
      description: >-
        Object containing detailed assigned employees data (sales-person,
        sales-advisor and sales-consultant) and dealer information.
    CP_API_VehicleHistory:
      type: object
      properties:
        vehicleId:
          type: integer
          description: CP Vehicle ID
          format: int32
          readOnly: true
        ownershipId:
          type: integer
          description: CP Ownership ID
          format: int32
          readOnly: true
        carBrand:
          type: string
          description: Car brand
          readOnly: true
        carBrandImage:
          type: string
          description: Car brand image
          readOnly: true
        carModel:
          type: string
          description: Car model
          readOnly: true
        carModelImage:
          type: string
          description: Car model image
          readOnly: true
        carDescription:
          type: string
          description: Car description
          readOnly: true
        owner:
          $ref: '#/components/schemas/CP_API_Resource'
        frequentDriver:
          $ref: >-
            #/components/schemas/Contact_API_V1VehicleFrequentDriver
        activeDriver:
          $ref: '#/components/schemas/CP_API_Resource'
        drivers:
          type: array
          description: All car drivers
          readOnly: true
          items:
            $ref: '#/components/schemas/CP_API_DriverResource'
        dealer:
          $ref: '#/components/schemas/CP_API_Resource'
        salesman:
          $ref: '#/components/schemas/CP_API_EmployeeDealerDetails'
        isActive:
          type: boolean
          description: Is this vehicle still active for this contact?
          readOnly: true
        licensePlate:
          type: string
          description: Vehicle licence plate
          readOnly: true
        km:
          type: integer
          description: Vehicle current km
          format: int32
          readOnly: true
        fuelType:
          type: string
          description: Vehicle fuel type
          readOnly: true
          enum:
            - unknown
            - unleaded
            - petrol
            - diesel
            - electro
            - gas
            - hydrogen
            - other
            - hybrid
        firstRegistration:
          type: string
          description: Vehicles first registration date
          format: date-time
          readOnly: true
        vin:
          type: string
          description: Vehicle VIN number
          readOnly: true
        commissionNumber:
          type: string
          description: Vehicle commission number
          readOnly: true
        salesflowId:
          type: string
          description: ID in SalesFlow
          readOnly: true
        saleDate:
          type: string
          description: Vehicle sale date
          format: date-time
          readOnly: true
        status:
          type: string
          description: Vehicle status
          readOnly: true
          enum:
            - sale
            - purchase
            - service
            - not_sale_ef
            - manual_input
            - manual_remove
        paymentType:
          type: string
          description: Vehicle payment type
          readOnly: true
        contractUrl:
          type: string
          description: Vehicle contract URL
          readOnly: true
        sources:
          type: array
          description: Vehicle sources
          readOnly: true
          items:
            $ref: '#/components/schemas/CP_API_Source'
        manualMileage:
          type: integer
          description: Vehicle manual input mileage
          format: int32
          readOnly: true
        leasingExpiryDate:
          type: string
          description: Vehicle leasing expiry date
          format: date-time
          readOnly: true
        nextServiceDate:
          type: string
          description: Vehicle next service date
          format: date-time
          readOnly: true
        createdByDataSource:
          type: string
          description: Vehicle created by external system name
          readOnly: true
        removedByEmployee:
          $ref: '#/components/schemas/CP_API_Resource'
        removedReason:
          type: string
          description: Contact vehicle removal reason
          readOnly: true
        dateRemoved:
          type: string
          description: Contact vehicle date removed
          format: date-time
          readOnly: true
        dateCreated:
          type: string
          description: Ownership creation date
          format: date-time
          readOnly: true
        dateModified:
          type: string
          description: Ownership update date
          format: date-time
          readOnly: true
      description: This is a vehicle history object
    CP_API_VehicleHistoryPageResult:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/CP_API_VehicleHistory'
        page:
          type: integer
          description: Current page number
          format: int32
          readOnly: true
        pageSize:
          type: integer
          description: Current page size
          format: int32
          readOnly: true
        totalPages:
          type: integer
          description: Total number of pages
          format: int32
          readOnly: true
        totalItems:
          type: integer
          description: Total number of items
          format: int32
          readOnly: true
      description: Vehicle history page result
    CP_API_EntityTag:
      type: object
      properties:
        value:
          type: string
        weak:
          type: boolean
    CP_API_Link:
      type: object
      properties:
        type:
          type: string
        params:
          type: object
          additionalProperties:
            type: string
        rels:
          type: array
          items:
            type: string
        rel:
          type: string
        uri:
          type: string
          format: uri
        uriBuilder:
          $ref: '#/components/schemas/CP_API_UriBuilder'
        title:
          type: string
    CP_API_Locale:
      type: object
      properties:
        language:
          type: string
        country:
          type: string
        displayCountry:
          type: string
        displayLanguage:
          type: string
        displayName:
          type: string
        displayScript:
          type: string
        displayVariant:
          type: string
        extensionKeys:
          uniqueItems: true
          type: array
          items:
            type: string
        iso3Country:
          type: string
        iso3Language:
          type: string
        script:
          type: string
        unicodeLocaleAttributes:
          uniqueItems: true
          type: array
          items:
            type: string
        unicodeLocaleKeys:
          uniqueItems: true
          type: array
          items:
            type: string
        variant:
          type: string
    CP_API_MediaType:
      type: object
      properties:
        type:
          type: string
        subtype:
          type: string
        parameters:
          type: object
          additionalProperties:
            type: string
        wildcardSubtype:
          type: boolean
        wildcardType:
          type: boolean
    CP_API_NewCookie:
      type: object
      properties:
        name:
          type: string
        value:
          type: string
        version:
          type: integer
          format: int32
        path:
          type: string
        domain:
          type: string
        comment:
          type: string
        maxAge:
          type: integer
          format: int32
        expiry:
          type: string
          format: date-time
        secure:
          type: boolean
        httpOnly:
          type: boolean
    CP_API_Response:
      type: object
      properties:
        length:
          type: integer
          format: int32
        language:
          $ref: '#/components/schemas/CP_API_Locale'
        location:
          type: string
          format: uri
        lastModified:
          type: string
          format: date-time
        date:
          type: string
          format: date-time
        headers:
          type: object
          additionalProperties:
            type: array
            items:
              type: object
              properties: {}
        entity:
          type: object
          properties: {}
        status:
          type: integer
          format: int32
        allowedMethods:
          uniqueItems: true
          type: array
          items:
            type: string
        statusInfo:
          $ref: '#/components/schemas/CP_API_StatusType'
        metadata:
          type: object
          additionalProperties:
            type: array
            items:
              type: object
              properties: {}
        cookies:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/CP_API_NewCookie'
        entityTag:
          $ref: '#/components/schemas/CP_API_EntityTag'
        stringHeaders:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
        links:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/CP_API_Link'
        mediaType:
          $ref: '#/components/schemas/CP_API_MediaType'
    CP_API_StatusType:
      type: object
      properties:
        family:
          type: string
          enum:
            - INFORMATIONAL
            - SUCCESSFUL
            - REDIRECTION
            - CLIENT_ERROR
            - SERVER_ERROR
            - OTHER
        statusCode:
          type: integer
          format: int32
        reasonPhrase:
          type: string
    CP_API_UriBuilder:
      type: object
    CP_API_Car:
      required:
        - brand
        - model
      type: object
      properties:
        id:
          type: integer
          description: Car ID in CP
          format: int32
        brand:
          $ref: '#/components/schemas/CP_API_Brand'
        model:
          $ref: '#/components/schemas/CP_API_Model'
        fuelType:
          type: string
          description: Car fuel type
          enum:
            - unknown
            - unleaded
            - petrol
            - diesel
            - electro
            - gas
            - hydrogen
            - other
            - hybrid
        productYear:
          type: integer
          description: Car production year
          format: int32
        description:
          type: string
          description: Car description
      description: This is a car object
    CP_API_Color:
      type: object
      properties:
        id:
          type: integer
          description: Resource ID
          format: int32
        sources:
          type: array
          description: Source IDs
          items:
            $ref: '#/components/schemas/CP_API_Source'
        name:
          type: string
          description: Resource name
        colorCode:
          type: string
          description: Color code
        colorTone:
          type: string
          description: Color tone
          enum:
            - unknown
            - dark
            - bright
        colorType:
          type: string
          description: Color type
          enum:
            - unknown
            - metallic
            - special_paint
            - matt
            - solid
            - pearlescent
      description: This is a color object
    CP_API_Model:
      type: object
      properties:
        id:
          type: integer
          description: Resource ID
          format: int32
        sources:
          type: array
          description: Source IDs
          items:
            $ref: '#/components/schemas/CP_API_Source'
        name:
          type: string
          description: Resource name
        alias:
          type: string
          description: Car model alias
          example: 4C - 4C, 4-E - 4Runner
        autoIdatType:
          type: string
          description: Model auto-i-dat code
          example: '01'
      description: This is a car model object
    CP_API_Vehicle:
      type: object
      properties:
        id:
          type: integer
          description: Resource ID
          format: int32
        sources:
          type: array
          description: Source IDs
          items:
            $ref: '#/components/schemas/CP_API_Source'
        name:
          type: string
          description: Resource name
        car:
          $ref: '#/components/schemas/CP_API_Car'
        color:
          $ref: '#/components/schemas/CP_API_Color'
        vin:
          type: string
          description: Vehicle VIN number
        status:
          type: string
          description: Vehicle status
          enum:
            - Unknown
        type:
          type: string
          description: Vehicle type
          enum:
            - Unknown
            - new
            - used
            - demo
            - day_registration
        typeCode:
          type: string
          description: Vehicle type code
        manufacturerNumber:
          type: string
          description: Vehicle manufacturer number
        description:
          type: string
          description: Vehicle description
        firstRegistration:
          type: string
          description: Vehicle first registration date
          format: date-time
        lastRegistration:
          type: string
          description: Vehicle last registration date
          format: date-time
        productionYear:
          type: integer
          description: Vehicle production year
          format: int32
        productionMonth:
          type: integer
          description: Vehicle production month
          format: int32
        kmLast:
          type: integer
          description: Vehicles last km
          format: int32
        lastPrice:
          type: number
          description: Vehicles last price
        lastPriceDate:
          type: string
          description: When was vehicle last priced
          format: date-time
        used:
          type: boolean
          description: Is vehicle used?
        latestCommissionNumber:
          type: string
          description: Vehicles latest commission number
        manualMileage:
          type: integer
          description: Vehicles manual input mileage
          format: int32
        leasingExpiryDate:
          type: string
          description: Vehicle leasing expiry date
          format: date-time
        nextServiceDate:
          type: string
          description: Vehicle next service date
          format: date-time
        createdByDataSource:
          type: string
          description: Ownership created by external system name
      description: This is a vehicle object
    Contact_API_V1Resource:
      type: object
      properties:
        id:
          type: integer
          format: int32
        sources:
          type: array
          items:
            $ref: '#/components/schemas/CP_API_Source'
        name:
          type: string
        name1:
          type: string
        name2:
          type: string
        additionalName:
          type: string
        customerId:
          type: string
        business:
          type: boolean
        personal:
          type: boolean
      description: This is a declaration contact object
    CP_API_DealerEmployeeResource:
      type: object
      properties:
        dealerNr:
          type: string
        employeeNr:
          type: string
        employeeName1:
          type: string
        employeeName2:
          type: string
      description: This is a dealer employee object
    CP_API_DeclarationCarResource:
      type: object
      properties:
        brand:
          $ref: '#/components/schemas/CP_API_Resource'
        model:
          $ref: '#/components/schemas/CP_API_Resource'
        fuelType:
          type: string
      description: This is a declaration car object
    CP_API_DeclarationContactRelationResource:
      type: object
      properties:
        id:
          type: integer
          description: Relation id.
          format: int32
        contact:
          $ref: '#/components/schemas/CP_API_Resource'
        code:
          type: string
          description: >-
            Relation type code (O - owner, M - manager, E - employee, D -
            driver, F - family, CP - contact person
        function:
          maxLength: 50
          minLength: 0
          type: string
          description: Relation type function.
      description: This is a declaration contact relation resource object
    CP_API_DeclarationSearchResponse:
      type: object
      properties:
        id:
          type: integer
          format: int32
        contact:
          $ref: '#/components/schemas/Contact_API_V1Resource'
        vehicle:
          $ref: '#/components/schemas/CP_API_DeclarationVehicleResource'
        dealer:
          $ref: '#/components/schemas/CP_API_Resource'
        registrationPlate:
          type: string
        declarationType:
          type: string
        declarationStatus:
          type: string
        ownershipType:
          type: string
        declarationVehicleKm:
          type: string
        declarationVehicleUsage:
          type: string
        dealerEmployee:
          $ref: '#/components/schemas/CP_API_DealerEmployeeResource'
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
        createdBy:
          $ref: '#/components/schemas/CP_API_DeclarationCreatedBy'
        modifiedBy:
          $ref: '#/components/schemas/CP_API_DeclarationCreatedBy'
        businessContactPerson:
          $ref: >-
            #/components/schemas/CP_API_DeclarationContactRelationResource
        dateCreated:
          type: string
          format: date-time
        dateModified:
          type: string
          format: date-time
        ownerChangeReason:
          type: string
        entityDateModified:
          type: string
          format: date-time
        firstRegistrationDate:
          type: string
          format: date-time
        ownershipStartDate:
          type: string
          format: date-time
        tags:
          type: array
          description: Declaration tag array
          items:
            type: string
      description: This is a declaration search response object
    CP_API_PageResult:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: >-
              #/components/schemas/CP_API_DeclarationSearchResponse
        page:
          type: integer
          description: Current page number
          format: int32
          readOnly: true
        pageSize:
          type: integer
          description: Current page size
          format: int32
          readOnly: true
        totalPages:
          type: integer
          description: Total number of pages
          format: int32
          readOnly: true
        totalItems:
          type: integer
          description: Total number of items
          format: int32
          readOnly: true
    CP_API_DeclarationSearch:
      type: object
      properties:
        text:
          type: string
        overrideAccess:
          type: boolean
          readOnly: true
        contact:
          $ref: '#/components/schemas/CP_API_Resource'
        declarationStatus:
          type: array
          items:
            type: string
        declarationType:
          type: array
          items:
            type: string
        startDateFrom:
          type: string
          format: date-time
        startDateTo:
          type: string
          format: date-time
        endDateFrom:
          type: string
          format: date-time
        endDateTo:
          type: string
          format: date-time
        dealerEmployee:
          $ref: '#/components/schemas/CP_API_Resource'
        dealer:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/CP_API_Dealer'
        brand:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/CP_API_Resource'
        dateCreatedFrom:
          type: string
          format: date-time
        dateCreatedTo:
          type: string
          format: date-time
        tags:
          type: array
          description: Declaration tag array
          items:
            type: string
        page:
          $ref: '#/components/schemas/CP_API_Page'
      description: This is a declaration search request object
    CP_API_Order:
      type: object
      properties:
        name:
          type: string
        dir:
          type: string
    CP_API_Page:
      type: object
      properties:
        number:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        order:
          $ref: '#/components/schemas/CP_API_Order'
      description: This is a page object, used for pagination
    CP_API_AddressStatusResource:
      type: object
      properties:
        code:
          type: string
          description: Address status code.
        name:
          type: string
          description: Address status name.
        valid:
          type: boolean
          description: Is contact address status valid.
      description: Object containing address status information.
    Contact_API_V1BusinessCategoryResource:
      required:
        - code
      type: object
      properties:
        name:
          type: string
          description: Contact business category name.
        code:
          type: string
          description: Contact business category code.
      description: Object containing contact business category information.
    Contact_API_V1BusinessGroupResource:
      required:
        - code
      type: object
      properties:
        name:
          type: string
          description: Contact business group name.
        code:
          type: string
          description: Contact business group code.
      description: Object containing contact business group information.
    Contact_API_V1Classification:
      type: object
      properties:
        code:
          type: string
          description: Contact business classification code.
      description: Object containing contact business classification information.
    Contact_API_V1ActionTaskType:
      type: object
      properties:
        code:
          type: string
          description: Contact task action code
        name:
          type: string
          description: Contact task action name
      description: Object containing contact task actions.
    Contact_API_V1ActionTask:
      type: object
      properties:
        taskId:
          type: integer
          description: Action task ID
          format: int32
        contact:
          $ref: '#/components/schemas/Contact_API_V1Basic'
        relation:
          $ref: '#/components/schemas/Contact_API_V1Basic'
        employee:
          $ref: '#/components/schemas/CP_API_Resource'
        lastActionDate:
          type: string
          description: Date when last action was created
          format: date-time
        contactType:
          type: string
          description: What type of action was performed
        nextAction:
          type: string
          description: What is the next action with contact going to be
        nextActionDate:
          type: string
          description: When will the next action going to be
          format: date-time
        description:
          type: string
          description: Action task description
        privateTask:
          type: boolean
          description: Is the task private
        inactive:
          type: boolean
          description: >-
            Is the task inactive (because related relation_id is marked as
            deleted)
        dateCreated:
          type: string
          description: Date when action task has been created
          format: date-time
        dateModified:
          type: string
          description: Date when action task has been modified
          format: date-time
      description: Object containing action task information
    Contact_API_V1Basic:
      type: object
      properties:
        id:
          type: integer
          description: Resource ID
          format: int32
        sources:
          type: array
          description: Source IDs
          items:
            $ref: '#/components/schemas/CP_API_Source'
        name:
          type: string
          description: Resource name
        name1:
          type: string
          description: Contact first name
        name2:
          type: string
          description: Contact last name
      description: This is a contact basic object.
    Contact_API_V1ActionTaskPageResult:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/Contact_API_V1ActionTask'
        page:
          type: integer
          description: Current page number
          format: int32
          readOnly: true
        pageSize:
          type: integer
          description: Current page size
          format: int32
          readOnly: true
        totalPages:
          type: integer
          description: Total number of pages
          format: int32
          readOnly: true
        totalItems:
          type: integer
          description: Total number of items
          format: int32
          readOnly: true
      description: Contact action task page result
    Contact_API_V1AutocompleteSearchResult:
      type: object
      properties:
        text:
          type: string
          description: The completed term or phrase
        queryPlusText:
          type: string
          description: The initial query input plus the completed term or phrase
      description: This object contains contacts autocomplete search result
    Contact_API_V1AutocompleteSearch:
      type: object
      properties:
        type:
          type: array
          description: >-
            Contact type. Examples [ C(customer), I(interest), H(EFIT_dealer),
            W(workflow_for_dealer), F(EFAG_dealer_without_workflow) ]
          items:
            type: string
        businessGroup:
          type: array
          description: >-
            Contact business group. Examples [ TCB(T-Com Berlin), TCM(T-Com
            Munchen), TCF(T-Com Frankfurt) ]
          items:
            type: string
        text:
          type: string
          description: Text-search
        business:
          type: boolean
          description: >-
            If contacts returned are only business[true] or personal[false] or
            both[null]
        customer:
          type: boolean
          description: If contacts returned must have customer_id?
        status:
          type: array
          description: List of statuses to search contacts by
          items:
            type: string
        tags:
          type: array
          description: Contact tag codes
          items:
            type: string
        dateFrom:
          type: string
          description: Filter out by date modified from
        dateTo:
          type: string
          description: Filter out by date modified to
        createdFrom:
          type: string
          description: Filter out by date created from
        createdTo:
          type: string
          description: Filter out by date created to
        createdByEmployee:
          $ref: '#/components/schemas/CP_API_Resource'
        modifiedByEmployee:
          $ref: '#/components/schemas/CP_API_Resource'
        zipFrom:
          type: string
          description: Filter out by address zip from
        zipTo:
          type: string
          description: Filter out by address zip to
        creditLock:
          type: boolean
          description: Filter out by contact credit lock
        customerGroup:
          type: array
          description: Contact group code
          items:
            type: string
        customerFeature:
          type: array
          description: Contact feature code
          items:
            type: string
        dealerId:
          type: integer
          description: >-
            Filter out contacts which have access_right to specific dealer. PP
            dealer ID should be used.
          format: int32
        valid:
          type: boolean
          description: >-
            Filter duplicate contact. Example valid[true] return duplicate,
            valid[false] return non duplicate, valid[null] ignore filed
        addressValid:
          type: boolean
          description: >-
            Filter Omikron validated address. Example valid[true] return
            validate address, valid[false] return non validate address,
            valid[null] ignore filed
        top:
          type: integer
          description: The number of autocompleted suggestions to retrieve.
          format: int32
      description: This object is used for contacts autocomplete or suggestions search
    Contact_API_V1SuggestionsSearchResult:
      type: object
      properties:
        text:
          type: string
          description: The search suggestions text.
        contactId:
          type: integer
          description: The contact ID.
          format: int32
      description: This object contains contact suggestions search result
    CP_API_Address:
      type: object
      properties:
        country:
          type: string
        region:
          type: string
        city:
          type: string
        zip:
          type: string
        street:
          type: string
        streetNumber:
          type: string
        valid:
          type: boolean
        status:
          type: string
        validationDate:
          type: string
          format: date-time
        createdByEmployee:
          type: string
        modifiedByEmployee:
          type: string
        createdByDealer:
          type: string
        modifiedByDealer:
          type: string
        createdByDataSource:
          type: string
        modifiedByDataSource:
          type: string
    CP_API_AddressBook:
      type: object
      properties:
        defaultAddress:
          $ref: '#/components/schemas/CP_API_Address'
        deliveryAddress:
          $ref: '#/components/schemas/CP_API_Address'
        invoiceAddress:
          $ref: '#/components/schemas/CP_API_Address'
    Contact_API_V1Business:
      type: object
      properties:
        companyRegistrationNumber:
          maxLength: 50
          minLength: 0
          type: string
          description: Company registration number
        vatNumber:
          maxLength: 50
          minLength: 0
          type: string
          description: Company VAT number
        noOfEmployees:
          type: integer
          description: Number of employees in the company
          format: int32
        noOfVehicles:
          type: integer
          description: Number of vehicles in the company
          format: int32
        functionCompany:
          maxLength: 50
          minLength: 0
          type: string
          description: Company function
        additionalName1:
          maxLength: 200
          minLength: 0
          type: string
          description: First name of a person representing a company.
        additionalName2:
          maxLength: 200
          minLength: 0
          type: string
          description: Last name of a person representing a company.
        salutation:
          type: string
          description: Company salutation
          example: >-
            mr, mrs, unknown, mr_mrs, family, gentlemen, dealership, lawfirm,
            company
        loanCompanies:
          type: array
          description: List of loan companies contact has
          items:
            $ref: '#/components/schemas/Contact_API_V1LoanCompany'
        customerGroup:
          type: string
          description: Company customer group
        fleetManagementCompany:
          maxLength: 256
          minLength: 0
          type: string
          description: Fleet management company
        parkingSize:
          type: integer
          description: Company parking size
          format: int32
        classification:
          type: string
          description: Company classification
        purchase:
          type: boolean
          description: Is business purchase?
        sale:
          type: boolean
          description: Is business sale?
        businessCategory:
          type: string
          description: Business category
      description: This is a contact business data.
    Contact_API_V1History:
      type: object
      properties:
        id:
          type: string
        user:
          type: string
        userSources:
          type: array
          items:
            $ref: '#/components/schemas/CP_API_Source'
        date:
          type: string
          format: date-time
        type:
          type: string
        contactId:
          type: integer
          format: int32
        snapshot:
          $ref: '#/components/schemas/Contact_API_V1Snapshot'
        actions:
          type: array
          items:
            $ref: '#/components/schemas/Contact_API_V1PropertyAction'
        version:
          type: integer
          format: int32
        latest:
          type: boolean
    Contact_API_V1Personal:
      type: object
      properties:
        gender:
          type: string
          description: Persons gender
          enum:
            - female
            - male
            - other
            - unknown
        salutation:
          type: string
          description: Persons salutation
          example: >-
            mr, mrs, unknown, mr_mrs, family, gentlemen, dealership, lawfirm,
            company
        title:
          maxLength: 128
          minLength: 0
          type: string
          description: Persons title
          example: prof, dr, unknown, prof_dr, dipl_ing, phd, ing, dir, don
        status:
          maxLength: 50
          minLength: 0
          type: string
          description: Personal status
        dateOfBirth:
          type: string
          description: Date of birth
          format: date-time
        pictureDriverLicenseUrl:
          maxLength: 200
          minLength: 0
          type: string
          description: URL of the driving licence photo
        qualification:
          type: string
          description: Person qualification
        noOfChildren:
          type: integer
          description: Number of children
          format: int32
        noOfChildrenYounger17:
          type: integer
          description: Number of children younger of 17 years old
          format: int32
        positionInHousehold:
          type: string
          description: Position in household
          enum:
            - mother
            - father
            - other
        matrialStatus:
          type: string
          description: Marital status
          enum:
            - married
            - not_specified
            - single
            - divorced
            - widowed
            - unknown
        purchasingStatus:
          type: string
          description: Purchasing status
          enum:
            - 1-29_tsd
            - 100-124_tsd
            - 125-149_tsd
            - 150-174_tsd
            - 175-199_tsd
            - 200-249_tsd
            - 250-299_tsd
            - 30-39_tsd
            - 300_plus_tsd
            - 40-49_tsd
            - 50-59_tsd
            - 60-69_tsd
            - 70-79_tsd
            - 80-89_tsd
            - 90-99_tsd
            - unknown
      description: This is a contact personal data
    Contact_API_V1PoBox:
      required:
        - pobox
      type: object
      properties:
        addressType:
          type: string
          description: Contact address type
          enum:
            - home
            - delivery
            - invoice
            - commercial_register
            - unknown
        country:
          maxLength: 3
          minLength: 0
          type: string
          description: Country ISO2 code
        region:
          type: string
          description: National region code
        zip:
          maxLength: 20
          minLength: 0
          type: string
          description: Postal code
        city:
          maxLength: 50
          minLength: 0
          type: string
          description: Postal box city
        pobox:
          maxLength: 128
          minLength: 0
          type: string
          description: Postal box number
        primary:
          type: boolean
          description: Is this primary postal box?
      description: This is a contact postal box.
    Contact_API_V1PropertyAction:
      type: object
      properties:
        type:
          type: string
        property:
          type: string
        oldValue:
          type: object
          properties: {}
        newValue:
          type: object
          properties: {}
    Contact_API_V1Snapshot:
      type: object
      properties:
        customerId:
          type: string
        interestId:
          type: string
        sources:
          type: array
          items:
            $ref: '#/components/schemas/CP_API_Source'
        name:
          $ref: '#/components/schemas/CP_API_Name'
        type:
          type: string
        businessGroup:
          type: string
        salutation:
          type: string
        title:
          type: string
        status:
          type: string
        lang:
          type: string
        secondaryLang:
          type: array
          items:
            type: string
        vatNumber:
          type: string
        euVatNumber:
          type: string
        identificationNumber:
          type: string
        carVin:
          type: string
        conversionNumber:
          type: integer
          format: int32
        email:
          $ref: '#/components/schemas/CP_API_Email'
        addressBook:
          $ref: '#/components/schemas/CP_API_AddressBook'
        poBoxBook:
          $ref: '#/components/schemas/CP_API_PoBoxBook'
        phoneBook:
          $ref: '#/components/schemas/CP_API_PhoneBook'
        isBusiness:
          type: boolean
        personal:
          $ref: '#/components/schemas/Contact_API_V1Personal'
        business:
          $ref: '#/components/schemas/Contact_API_V1Business'
        creditLock:
          type: boolean
        personalNumber:
          type: string
        generalAgreementNumber:
          type: string
        generalAgreementNumbers:
          type: array
          items:
            type: string
        group:
          type: integer
          format: int32
        groupFeature:
          type: integer
          format: int32
        groupTaxCode:
          type: integer
          format: int32
        job:
          type: string
        interest:
          type: array
          items:
            type: string
        contactTag:
          type: array
          items:
            type: string
        contactTime:
          type: string
        contactMethod:
          type: string
        modifiedByEmployee:
          type: string
    CP_API_Email:
      type: object
      properties:
        noEmail:
          type: boolean
        emailDenied:
          type: boolean
        emailAddress:
          type: string
        emailValid:
          type: boolean
        emailActual:
          type: boolean
    CP_API_Name:
      type: object
      properties:
        name1:
          type: string
        name2:
          type: string
        additionalName:
          type: string
    CP_API_PhoneBook:
      type: object
      properties:
        telPrivate:
          type: string
        telBusiness:
          type: string
        mobilePrivate:
          type: string
        mobileBusiness:
          type: string
        faxPrivate:
          type: string
        faxBusiness:
          type: string
    CP_API_PoBoxBook:
      type: object
      properties:
        defaultPoBox:
          $ref: '#/components/schemas/Contact_API_V1PoBox'
        deliveryPoBox:
          $ref: '#/components/schemas/Contact_API_V1PoBox'
        invoicePoBox:
          $ref: '#/components/schemas/Contact_API_V1PoBox'
    Contact_API_V1PageResult:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/Contact_API_V1'
        page:
          type: integer
          description: Current page number
          format: int32
          readOnly: true
        pageSize:
          type: integer
          description: Current page size
          format: int32
          readOnly: true
        totalPages:
          type: integer
          description: Total number of pages
          format: int32
          readOnly: true
        totalItems:
          type: integer
          description: Total number of items
          format: int32
          readOnly: true
      description: Contact page result
    Contact_API_V1Details:
      required:
        - name1
      type: object
      properties:
        id:
          type: integer
          description: Resource ID
          format: int32
        sources:
          type: array
          description: Source IDs
          items:
            $ref: '#/components/schemas/CP_API_Source'
        name:
          type: string
          description: Resource name
        name1:
          maxLength: 128
          minLength: 0
          type: string
          description: Contact first name
        name2:
          maxLength: 128
          minLength: 0
          type: string
          description: Contact last name
        additionalName:
          maxLength: 200
          minLength: 0
          type: string
          description: Contact additional name
        type:
          type: string
          description: >-
            Contact type. Examples [ C(customer), I(interest), H(EFIT_dealer),
            W(workflow_for_dealer), F(EFAG_dealer_without_workflow) ]
          enum:
            - C
            - I
            - W
            - H
            - F
        businessGroup:
          type: string
          description: Business Group codes
        status:
          type: string
          description: Contact status
          enum:
            - active
            - inactive
            - converted
            - deceased
            - not_editable
        customerGroup:
          type: string
          description: Contact group code
          enum:
            - '1001'
            - '1004'
            - '1006'
            - '1008'
            - '1101'
            - '1201'
            - '1202'
            - '1301'
            - '1401'
            - '1402'
            - '1501'
            - '1502'
            - '1510'
            - '1511'
            - '1512'
            - '1515'
            - '1701'
            - '2001'
            - '2010'
            - '2020'
            - '2101'
            - '2501'
            - '2502'
            - '2503'
            - '4001'
            - '4005'
            - '9001'
            - '9002'
        customerFeature:
          type: string
          description: Contact feature code
          enum:
            - '1000'
            - '1100'
            - '1200'
            - '1300'
            - '1400'
            - '1500'
            - '1700'
            - '2000'
            - '2100'
            - '2500'
            - '4000'
            - '9000'
        taxCode:
          type: string
          description: Contact tax code
          enum:
            - '10'
            - '11'
            - '12'
            - '13'
            - '14'
            - '15'
            - '17'
            - '20'
            - '21'
            - '25'
            - '40'
            - '90'
            - '95'
        ef:
          type: boolean
          description: Is an Emil Frey contact?
        efClubId:
          maxLength: 50
          minLength: 0
          type: string
          description: Emil Frey Club ID
        rating:
          type: integer
          description: Contact rating
          format: int32
        conversionNumber:
          type: integer
          description: Contact conversion number
          format: int32
        generalAgreementNumber:
          maxLength: 50
          minLength: 0
          type: string
          description: Contact general agreement number
        generalAgreementNumbers:
          type: array
          description: Contact general agreement numbers (if environment supports multiple)
          items:
            type: string
        customer:
          type: boolean
          description: Is a customer contact?
        dealer:
          type: boolean
          description: Is a dealer contact?
        lead:
          type: boolean
          description: Is a lead contact?
        pictureUrl:
          maxLength: 512
          minLength: 0
          type: string
          description: Contact photo URL
        lastBillDate:
          type: string
          description: When contact was last billed
          format: date-time
        vatNumber:
          maxLength: 50
          minLength: 0
          type: string
          description: Contact VAT number
        vatCountry:
          maxLength: 3
          minLength: 0
          type: string
          description: Contact VAT country (ISO2)
        euVatNumber:
          maxLength: 50
          minLength: 0
          type: string
          description: Contact EU VAT number
        identificationNumber:
          maxLength: 100
          minLength: 0
          type: string
          description: Contact identification number
        carVin:
          maxLength: 17
          minLength: 0
          type: string
          description: Contacts car VIN used for GDPR
        noEmail:
          type: boolean
          description: Does contact have email (GDPR)
        emailDenied:
          type: boolean
          description: Contact has email but doesn't want anyone to use it (GDPR)
        personal:
          $ref: '#/components/schemas/Contact_API_V1Personal'
        business:
          $ref: '#/components/schemas/Contact_API_V1Business'
        contactMethods:
          type: array
          description: List of contact methods for a contact
          items:
            $ref: '#/components/schemas/Contact_API_V1Method'
        address:
          type: array
          description: List of addresses contact has
          items:
            $ref: '#/components/schemas/Contact_API_V1Address'
        pobox:
          type: array
          description: List of postal boxes contact has
          items:
            $ref: '#/components/schemas/Contact_API_V1PoBox'
        email:
          type: array
          description: List of emails contact has
          items:
            $ref: '#/components/schemas/Contact_API_V1Email'
        telephone:
          type: array
          description: List of telephones contact has
          items:
            $ref: '#/components/schemas/Contact_API_V1Telephone'
        socialMedia:
          type: array
          description: List of social medias contact has
          items:
            $ref: '#/components/schemas/Contact_API_V1SocialMedia'
        language:
          type: array
          description: List of languages contact speaks
          items:
            $ref: '#/components/schemas/Contact_API_V1Language'
        job:
          type: array
          description: List of jobs contact has
          items:
            $ref: '#/components/schemas/Contact_API_V1Job'
        tag:
          type: array
          description: List of tags contact has
          items:
            type: string
        dateCreated:
          type: string
          description: When this object was created
          format: date-time
          readOnly: true
        dateModified:
          type: string
          description: When this object was updated
          format: date-time
          readOnly: true
        contactTimes:
          type: array
          description: List of contact times for a contact.
          items:
            $ref: '#/components/schemas/Contact_API_V1Time'
        contactTime:
          type: string
          description: Used for setting preferred contact time for a contact.
          enum:
            - morning
            - at_noon
            - afternoon
            - in_the_evening
            - unknown
        contactMethod:
          type: string
          description: Used for setting preferred contact method for a contact.
          enum:
            - mobile
            - phone
            - email
            - messenger
            - social_network
            - any
            - unknown
        interest:
          type: array
          description: List of interest contact has
          items:
            $ref: '#/components/schemas/Contact_API_V1Interest'
        interestCategories:
          type: array
          description: List of interest categories contact has
          items:
            $ref: '#/components/schemas/Contact_API_V1InterestCategory'
        vehiclePreferences:
          type: array
          description: List of vehicle preferences contact has
          items:
            $ref: '#/components/schemas/Contact_API_V1VehiclePreference'
        assignedEmployees:
          type: array
          description: List of assigned dealer/employees this contact has
          readOnly: true
          items:
            $ref: '#/components/schemas/Contact_API_V1Salesman'
        owner:
          $ref: '#/components/schemas/CP_API_Dealer'
        modifiedByEmployee:
          $ref: '#/components/schemas/CP_API_Resource'
        modifiedByDealer:
          $ref: '#/components/schemas/CP_API_Resource'
        creditworthiness:
          type: string
          description: Contacts creditworthiness
        creditLock:
          type: boolean
          description: If contact has a credit lock
        blockingIndicator:
          type: string
          description: Blocking indicator
          readOnly: true
        customerNumber:
          maxLength: 20
          minLength: 0
          type: string
          description: Contacts customer/employee number
        hasRelation:
          type: boolean
          description: If contact has relation to another contact
          readOnly: true
        isPersonal:
          type: boolean
          description: If contact is personal type
        isBusiness:
          type: boolean
          description: If contact is business type
        customerId:
          type: string
          description: Contact's customer id
          readOnly: true
        alphaCustomerId:
          type: string
          description: Contact's alphanumeric id
          readOnly: true
        interestId:
          type: string
          description: Customer's interest id
          readOnly: true
        invalid:
          type: boolean
          description: If contact information is valid. CP backend handles this internally.
          readOnly: true
        duplicateExclude:
          type: boolean
          description: Should this contact be excluded as a result of duplicate search?
        lastModifiedByDatSource:
          type: boolean
          description: >-
            Was this contact last modified by external data-source?? If false,
            it was modified by user/dealer.
        interestConversionDate:
          type: string
          description: When was this contact converted from Interest to Customer
          format: date-time
          readOnly: true
      description: This is a contact full details object
    Contact_API_V1Email:
      required:
        - email
      type: object
      properties:
        email:
          maxLength: 255
          minLength: 0
          type: string
          description: Email address
        primary:
          type: boolean
          description: Is this primary email?
        valid:
          type: boolean
          description: Is valid address?
        actual:
          type: boolean
          description: Is actual confirmed email address of contact?
      description: This is a contact email
    Contact_API_V1Interest:
      required:
        - code
      type: object
      properties:
        name:
          type: string
          description: Interest name
        code:
          type: string
          description: Interest unique code
        dateCreated:
          type: string
          description: When it was created for that contact
          format: date-time
      description: Object containing contact interests
    Contact_API_V1InterestCategory:
      required:
        - code
      type: object
      properties:
        name:
          type: string
          description: Interest category name
        code:
          type: string
          description: Interest category unique code
        dateCreated:
          type: string
          description: When it was created for that contact
          format: date-time
      description: Object containing contact interest categories
    Contact_API_V1Job:
      required:
        - code
      type: object
      properties:
        name:
          type: string
          description: Job name
        code:
          type: string
          description: Job unique code
        description:
          type: string
          description: Job description
        dateCreated:
          type: string
          description: When it was created for that contact
          format: date-time
      description: This is a contact job.
    Contact_API_V1Language:
      required:
        - language
      type: object
      properties:
        language:
          maxLength: 3
          minLength: 0
          type: string
          description: Language name
        primary:
          type: boolean
          description: Is this a primary language?
      description: This is a contact language.
    Contact_API_V1LoanCompany:
      required:
        - code
      type: object
      properties:
        code:
          type: string
          description: Contact loan company code
        name:
          type: string
          description: Contact loan company name
      description: Object containing contact loan company information.
    Contact_API_V1Method:
      required:
        - name
      type: object
      properties:
        name:
          type: string
          description: Contact method
          enum:
            - mobile
            - phone
            - email
            - messenger
            - social_network
            - post
            - any
            - unknown
        isPreferred:
          type: boolean
          description: Is this a preferred contact method?
      description: Object containing contact method information.
    Contact_API_V1Salesman:
      type: object
      properties:
        id:
          type: integer
          description: Resource ID
          format: int32
        sources:
          type: array
          description: Source IDs
          items:
            $ref: '#/components/schemas/CP_API_Source'
        name:
          type: string
          description: Resource name
        dealer:
          $ref: '#/components/schemas/CP_API_Resource'
        salesSalesperson:
          $ref: '#/components/schemas/CP_API_Resource'
        salesAdvisor:
          $ref: '#/components/schemas/CP_API_Resource'
        salesConsultant:
          $ref: '#/components/schemas/CP_API_Resource'
        dateCreated:
          type: string
          description: Date when record is created
          format: date-time
          readOnly: true
        dateModified:
          type: string
          description: Date when record is modified
          format: date-time
          readOnly: true
      description: >-
        Object containing assigned employees (sales-person, sales-advisor and
        sales-consultant) and dealer information.
    Contact_API_V1SocialMedia:
      type: object
      properties:
        type:
          type: string
          description: Social media type
          enum:
            - website
            - facebook
            - youtube
            - instagram
            - twitter
            - snapchat
            - google_plus
        url:
          maxLength: 1028
          minLength: 0
          type: string
          description: Url to specified profile on social media.
        apiKey:
          maxLength: 1028
          minLength: 0
          type: string
          description: Api key to specified social media platform.
        description:
          maxLength: 1028
          minLength: 0
          type: string
          description: Description for specified social media profile.
        active:
          type: boolean
          description: Is this active social media profile?
      description: This is a contact social media.
    Contact_API_V1Telephone:
      type: object
      properties:
        country:
          maxLength: 2
          minLength: 0
          type: string
          description: Country ISO2 code
        type:
          type: string
          description: Telephone number type
          enum:
            - fax
            - mobile
            - landline
            - unknown
        usage:
          type: string
          description: Telephone number usage
          enum:
            - private
            - business
            - unknown
        number:
          maxLength: 255
          minLength: 0
          type: string
          description: Telephone number
        formattedNumber:
          type: string
          description: Telephone number in human readable format
          readOnly: true
        primary:
          type: boolean
          description: Is this primary number?
        dateModified:
          type: string
          description: Telephone last date modified
          format: date-time
          readOnly: true
      description: This is a contact telephone number
    Contact_API_V1Time:
      required:
        - name
      type: object
      properties:
        name:
          type: string
          description: Contact time
          enum:
            - morning
            - at_noon
            - afternoon
            - in_the_evening
            - unknown
        isPreferred:
          type: boolean
          description: Is this a preferred contact time?
      description: Object containing contact time information.
    Contact_API_V1VehiclePreference:
      required:
        - category
        - code
      type: object
      properties:
        id:
          type: integer
          description: Resource ID
          format: int32
        sources:
          type: array
          description: Source IDs
          items:
            $ref: '#/components/schemas/CP_API_Source'
        name:
          type: string
          description: Resource name
        category:
          type: string
          description: Vehicle preference category unique code
        code:
          type: string
          description: Vehicle preference code for desired category
        dateCreated:
          type: string
          description: When it was created for that contact
          format: date-time
      description: Object containing contact vehicle preference
    Contact_API_V1SalesmanDetails:
      type: object
      properties:
        id:
          type: integer
          description: Resource ID
          format: int32
        sources:
          type: array
          description: Source IDs
          items:
            $ref: '#/components/schemas/CP_API_Source'
        name:
          type: string
          description: Resource name
        dealer:
          $ref: '#/components/schemas/CP_API_EmployeeDealerDetails'
        salesSalesperson:
          $ref: '#/components/schemas/CP_API_EmployeeDealerDetails'
        salesAdvisor:
          $ref: '#/components/schemas/CP_API_EmployeeDealerDetails'
        salesConsultant:
          $ref: '#/components/schemas/CP_API_EmployeeDealerDetails'
        dateCreated:
          type: string
          description: Date when record is created
          format: date-time
          readOnly: true
        dateModified:
          type: string
          description: Date when record is modified
          format: date-time
          readOnly: true
      description: >-
        Object containing assigned employees details (sales-person,
        sales-advisor and sales-consultant) and dealer information.
    Contact_API_V1SalesmanPageResult:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/Contact_API_V1SalesmanDetails'
        page:
          type: integer
          description: Current page number
          format: int32
          readOnly: true
        pageSize:
          type: integer
          description: Current page size
          format: int32
          readOnly: true
        totalPages:
          type: integer
          description: Total number of pages
          format: int32
          readOnly: true
        totalItems:
          type: integer
          description: Total number of items
          format: int32
          readOnly: true
      description: Contact salesman page result
    CP_API_ConsentsFilter:
      type: object
      properties:
        type:
          type: string
        group:
          type: boolean
        brand:
          $ref: '#/components/schemas/CP_API_Resource'
        dealer:
          $ref: '#/components/schemas/CP_API_Resource'
        confirmed:
          type: boolean
        groupChannels:
          type: array
          items:
            $ref: '#/components/schemas/CP_API_Flag'
        brandChannels:
          type: array
          items:
            $ref: '#/components/schemas/CP_API_Flag'
        dealerChannels:
          type: array
          items:
            $ref: '#/components/schemas/CP_API_Flag'
    Contact_API_V1FullTextSearch:
      type: object
      properties:
        type:
          type: array
          description: >-
            Contact type. Examples [ C(customer), I(interest), H(EFIT_dealer),
            W(workflow_for_dealer), F(EFAG_dealer_without_workflow) ]
          items:
            type: string
        businessGroup:
          type: array
          description: >-
            Contact business group. Examples [ TCB(T-Com Berlin), TCM(T-Com
            Munchen), TCF(T-Com Frankfurt) ]
          items:
            type: string
        text:
          type: string
          description: Text-search
        business:
          type: boolean
          description: >-
            If contacts returned are only business[true] or personal[false] or
            both[null]
        customer:
          type: boolean
          description: If contacts returned must have customer_id?
        status:
          type: array
          description: List of statuses to search contacts by
          items:
            type: string
        tags:
          type: array
          description: Contact tag codes
          items:
            type: string
        dateFrom:
          type: string
          description: Filter out by date modified from
        dateTo:
          type: string
          description: Filter out by date modified to
        createdFrom:
          type: string
          description: Filter out by date created from
        createdTo:
          type: string
          description: Filter out by date created to
        createdByEmployee:
          $ref: '#/components/schemas/CP_API_Resource'
        modifiedByEmployee:
          $ref: '#/components/schemas/CP_API_Resource'
        zipFrom:
          type: string
          description: Filter out by address zip from
        zipTo:
          type: string
          description: Filter out by address zip to
        creditLock:
          type: boolean
          description: Filter out by contact credit lock
        customerGroup:
          type: array
          description: Contact group code
          items:
            type: string
        customerFeature:
          type: array
          description: Contact feature code
          items:
            type: string
        consents:
          $ref: '#/components/schemas/CP_API_ConsentsFilter'
        dealerId:
          type: integer
          description: >-
            Filter out contacts which have access_right to specific dealer. PP
            dealer ID should be used.
          format: int32
        searchMode:
          type: string
          description: >-
            Should search use OR conjunction in filters instead of AND when
            building search query?
          enum:
            - all
            - any
        searchFields:
          type: array
          description: List of properties to search contacts by
          items:
            type: string
        valid:
          type: boolean
          description: >-
            Filter duplicate contact. Example valid[true] return duplicate,
            valid[false] return non duplicate, valid[null] ignore filed
        addressValid:
          type: boolean
          description: >-
            Filter Omikron validated address. Example valid[true] return
            validate address, valid[false] return non validate address,
            valid[null] ignore filed
        id:
          type: number
          description: Filter by Contact ID (MDM ID)
        sources:
          type: array
          description: Filter by Sources
          items:
            $ref: '#/components/schemas/CP_API_Source'
        includeDatasources:
          type: array
          description: Filter users by datasources eg.Care
          items:
            type: string
            description: Datasource ID to include
        excludeDatasources:
          type: array
          description: Exclude users by datasources eg.Care
          items:
            type: string
            description: Datasource ID to exclude
        customerId:
          type: string
          description: Filter by customer or interest ID
        name1:
          type: string
          description: Filter by contact first name
        name2:
          type: string
          description: Filter by contact last name
        additionalName:
          type: string
          description: Filter by contact additional name
        fullName:
          type: string
          description: Filter by contact full name
        address:
          $ref: '#/components/schemas/Contact_API_V1SearchAddress'
        email:
          type: string
          description: Filter by contact email
        telephone:
          type: string
          description: Filter by contact telephone
        classification:
          type: string
          description: Filter by contact classification
        usageSystems:
          type: array
          description: Filter contact by activity in desired external platform
          items:
            type: string
            description: Datasource ID to filter by activity
        usageSystemInactive:
          type: boolean
          description: >-
            Filter only contacts which are marked as unused in external
            platforms
        brandId:
          type: integer
          description: Filter out contacts which have access_right to specific brand.
          format: int32
        page:
          $ref: '#/components/schemas/CP_API_Page'
      description: This object is used for detailed search of contacts
    CP_API_Flag:
      type: object
      properties:
        name:
          type: string
          description: Name
        value:
          type: boolean
          description: Value
    Contact_API_V1Group:
      type: object
      properties:
        code:
          type: integer
          description: Group code
          format: int32
        name:
          type: string
          description: Group name
        groups:
          type: array
          description: List of child groups
          items:
            $ref: '#/components/schemas/Contact_API_V1Group'
      description: This is a contact group object
    Contact_API_V1NoteResource:
      type: object
      properties:
        id:
          type: integer
          description: Note ID
          format: int32
        note:
          type: string
          description: Note about a contact, usually specified by an employee.
        dateCreated:
          type: string
          description: Date when note has been created.
          format: date-time
          readOnly: true
        createdBy:
          $ref: '#/components/schemas/CP_API_Resource'
        dateModified:
          type: string
          description: Date when note has been modified.
          format: date-time
          readOnly: true
        modifiedBy:
          $ref: '#/components/schemas/CP_API_Resource'
        privateNote:
          type: boolean
          description: Is this note private?
        noteType:
          type: string
          description: Is note created from internal or external system?
          enum:
            - EMPLOYEE_INPUT
            - CPT_CONTACT_DELETION
      description: Object containing note about a contact.
    Contact_API_V1VehicleDriver:
      type: object
      properties:
        id:
          type: integer
          description: Contact vehicle driver id
          format: int32
        contact:
          $ref: '#/components/schemas/CP_API_Resource'
        status:
          type: string
          description: Contact vehicle driver status
        createdByDataSource:
          type: string
          description: Created by data sources name
        modifiedByDataSource:
          type: string
          description: Modified by data sources name
        dateCreated:
          type: string
          description: When this object was created
          format: date-time
        dateModified:
          type: string
          description: When this object was updated
          format: date-time
      description: This is a contact vehicle driver object
    Contact_API_V1Vehicle:
      type: object
      properties:
        id:
          type: integer
          description: Contact vehicle id
          format: int32
        vehicleId:
          type: integer
          description: Vehicle id
          format: int32
        model:
          $ref: '#/components/schemas/CP_API_Model'
        brand:
          $ref: '#/components/schemas/CP_API_Brand'
        contact:
          $ref: '#/components/schemas/Contact_API_V1'
        registrationPlate:
          type: string
          description: Contact vehicle registration plate
        firstRegistration:
          type: string
          description: Vehicles first registration date
          format: date-time
        removedByEmployee:
          $ref: '#/components/schemas/CP_API_Resource'
        removedReason:
          type: string
          description: Contact vehicle removal reason
        dateRemoved:
          type: string
          description: Contact vehicle removal date
          format: date-time
          readOnly: true
        frequentDriver:
          $ref: >-
            #/components/schemas/Contact_API_V1VehicleFrequentDriver
        loanProvider:
          $ref: '#/components/schemas/CP_API_LoanProvider'
        drivers:
          type: array
          description: Contact vehicle drivers
          items:
            $ref: '#/components/schemas/Contact_API_V1VehicleDriver'
        entityDateCreated:
          type: string
          description: Contact vehicle entity creation date
          format: date-time
          readOnly: true
      description: This is a contact vehicle object
    CP_API_LoanProvider:
      type: object
      properties:
        id:
          type: integer
          description: Loan provided ID in CP
          format: int32
        name:
          type: string
          description: Loan provider name
        description:
          type: string
          description: Loan provider description
        customerId:
          type: string
          description: Loan provider contact customer_id
      description: This is a loan provider object
    Contact_API_V1VehicleDealer:
      type: object
      properties:
        salesDealer:
          $ref: '#/components/schemas/CP_API_Resource'
        salesEmployee:
          $ref: '#/components/schemas/CP_API_Resource'
        serviceDealer:
          $ref: '#/components/schemas/CP_API_Resource'
        serviceEmployee:
          $ref: '#/components/schemas/CP_API_Resource'
        preferredSalesDealer:
          $ref: '#/components/schemas/CP_API_Resource'
        preferredSalesEmployee:
          $ref: '#/components/schemas/CP_API_Resource'
        preferredServiceDealer:
          $ref: '#/components/schemas/CP_API_Resource'
        preferredServiceEmployee:
          $ref: '#/components/schemas/CP_API_Resource'
      description: >-
        Object containing contact vehicle default/preferred dealership and
        employee (sales/service)
    CP_API_AccessRight:
      type: object
      properties:
        id:
          type: integer
          format: int32
        contact:
          $ref: '#/components/schemas/Contact_API_V1'
        dealer:
          $ref: '#/components/schemas/CP_API_Dealer'
        brand:
          $ref: '#/components/schemas/CP_API_Brand'
        emailAccess:
          type: boolean
        telephoneAccess:
          type: boolean
        dateCreated:
          type: string
          format: date-time
        dateModified:
          type: string
          format: date-time
        dateDeleted:
          type: string
          format: date-time
    CP_API_Action:
      type: object
      properties:
        id:
          type: integer
          format: int32
        actionType:
          $ref: '#/components/schemas/CP_API_ActionType'
        lead:
          $ref: '#/components/schemas/CP_API_Lead'
        employee:
          $ref: '#/components/schemas/CP_API_Employee'
        car:
          $ref: '#/components/schemas/CP_API_Car'
        vehicle:
          $ref: '#/components/schemas/CP_API_Vehicle'
        description:
          type: string
        actionExecutionDate:
          type: string
          format: date-time
        actionExecuted:
          type: boolean
        numberOfAttempts:
          type: integer
          format: int32
        dateCreated:
          type: string
          format: date-time
        dateModified:
          type: string
          format: date-time
        sources:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/CP_API_ActionSource'
    CP_API_ActionSource:
      type: object
      properties:
        id:
          type: integer
          format: int32
        dataSource:
          $ref: '#/components/schemas/CP_API_DataSource'
        sourceId:
          type: string
        action:
          $ref: '#/components/schemas/CP_API_Action'
    CP_API_ActionType:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        enabled:
          type: boolean
        dateCreated:
          type: string
          format: date-time
        dateModified:
          type: string
          format: date-time
    CP_API_AddressStatus:
      type: object
      properties:
        id:
          type: integer
          format: int32
        code:
          type: string
        name:
          type: string
        enabled:
          type: boolean
        dateCreated:
          type: string
          format: date-time
        dateModified:
          type: string
          format: date-time
    CP_API_AddressType:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        priority:
          type: integer
          format: int32
        enabled:
          type: boolean
        dateCreated:
          type: string
          format: date-time
    CP_API_Attributes:
      type: object
      properties:
        id:
          type: integer
          format: int32
        contact:
          $ref: '#/components/schemas/Contact_API_V1'
        name:
          type: string
        value:
          type: string
        valueNumeric:
          type: number
    CP_API_BrandSource:
      type: object
      properties:
        id:
          type: integer
          format: int32
        dataSource:
          $ref: '#/components/schemas/CP_API_DataSource'
        sourceId:
          type: string
        brand:
          $ref: '#/components/schemas/CP_API_Brand'
    CP_API_Business:
      type: object
      properties:
        id:
          type: integer
          format: int32
        contact:
          $ref: '#/components/schemas/Contact_API_V1'
        companyRegistrationNumber:
          type: string
        noOfEmployees:
          type: integer
          format: int32
        noOfVehicles:
          type: integer
          format: int32
        functionCompany:
          type: string
        additionalName1:
          type: string
        additionalName2:
          type: string
        salutation:
          $ref: '#/components/schemas/CP_API_Salutation'
        contactLoanCompanies:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Contact_API_V1LoanCompany'
        customerGroup:
          $ref: '#/components/schemas/CP_API_CustomerGroup'
        fleetManagementCompany:
          type: string
        parkingSize:
          type: integer
          format: int32
        classification:
          $ref: '#/components/schemas/CP_API_Classification'
        purchase:
          type: boolean
        sale:
          type: boolean
        businessCategory:
          $ref: '#/components/schemas/Contact_API_V1BusinessCategory'
        dateCreated:
          type: string
          format: date-time
        dateModified:
          type: string
          format: date-time
    CP_API_CarType:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        dateCreated:
          type: string
          format: date-time
        dateModified:
          type: string
          format: date-time
        vehicles:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/CP_API_Vehicle'
    CP_API_Classification:
      type: object
      properties:
        id:
          type: integer
          format: int32
        code:
          type: string
        enabled:
          type: boolean
        dateCreated:
          type: string
          format: date-time
        dateModified:
          type: string
          format: date-time
    CP_API_ColorCode:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        code:
          type: string
        dateCreated:
          type: string
          format: date-time
    CP_API_ColorTone:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        code:
          type: string
        dateCreated:
          type: string
          format: date-time
    CP_API_ColorType:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        code:
          type: string
        dateCreated:
          type: string
          format: date-time
    Contact_API_V1AssignedEmployee:
      type: object
      properties:
        id:
          type: integer
          format: int32
        contact:
          $ref: '#/components/schemas/Contact_API_V1'
        dealer:
          $ref: '#/components/schemas/CP_API_Dealer'
        salesSalesperson:
          $ref: '#/components/schemas/CP_API_Employee'
        salesAdvisor:
          $ref: '#/components/schemas/CP_API_Employee'
        salesConsultant:
          $ref: '#/components/schemas/CP_API_Employee'
        dateCreated:
          type: string
          format: date-time
        dateModified:
          type: string
          format: date-time
        deleted:
          type: boolean
        visible:
          type: boolean
    Contact_API_V1BusinessCategory:
      type: object
      properties:
        id:
          type: integer
          format: int32
        code:
          type: string
        name:
          type: string
        enabled:
          type: boolean
        dateCreated:
          type: string
          format: date-time
        dateModified:
          type: string
          format: date-time
    Contact_API_V1BusinessGroup:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        code:
          type: string
        enabled:
          type: boolean
        dateCreated:
          type: string
          format: date-time
        dateModified:
          type: string
          format: date-time
    Contact_API_V1ContactMethod:
      type: object
      properties:
        id:
          type: integer
          format: int32
        contact:
          $ref: '#/components/schemas/Contact_API_V1'
        contactMethod:
          $ref: '#/components/schemas/Contact_API_V1Method'
        isPreferred:
          type: boolean
        dateCreated:
          type: string
          format: date-time
        dateModified:
          type: string
          format: date-time
    Contact_API_V1ContactTime:
      type: object
      properties:
        id:
          type: integer
          format: int32
        contact:
          $ref: '#/components/schemas/Contact_API_V1'
        contactTime:
          $ref: '#/components/schemas/Contact_API_V1Time'
        isPreferred:
          type: boolean
        dateCreated:
          type: string
          format: date-time
        dateModified:
          type: string
          format: date-time
    Contact_API_V1Creditworthiness:
      type: object
      properties:
        id:
          type: integer
          format: int32
        contact:
          $ref: '#/components/schemas/Contact_API_V1'
        creditworthinessStatus:
          $ref: '#/components/schemas/CP_API_CreditworthinessStatus'
        dealer:
          $ref: '#/components/schemas/CP_API_Dealer'
        dateCreated:
          type: string
          format: date-time
        dateModified:
          type: string
          format: date-time
    Contact_API_V1Document:
      required:
        - format
        - storageType
        - type
      type: object
      properties:
        id:
          type: integer
          description: Contact document id
          format: int32
          readOnly: true
        sources:
          type: array
          description: Source IDs
          items:
            $ref: '#/components/schemas/CP_API_Source'
        name:
          type: string
          description: Contact document name
        type:
          type: string
          description: Contact document type
          enum:
            - driver_license
            - profile_picture
            - commercial_register_document
            - company_logo
            - general_agreement
            - detail_agreement
            - sale_contract
            - leasing_contract
            - delivery_handover_document
            - insurance_contract
            - invoice
            - note_document
            - vehicle_registration_document
            - vehicle_picture
            - vehicle_damage_picture
            - warranty_document
            - user_manual
            - fleet_discount_document
            - fleet_authorization_document
        format:
          type: string
          description: Contact document format
          enum:
            - jpg
            - jpeg
            - png
            - gif
            - pdf
            - csv
            - doc
            - docx
            - ppt
            - pptx
            - rtf
            - xls
            - xlsx
        storageType:
          type: string
          description: Contact document storage type
          enum:
            - local
            - blob
            - easyarhiv
        dealer:
          $ref: '#/components/schemas/CP_API_Resource'
        vehicle:
          $ref: '#/components/schemas/CP_API_Resource'
        noteId:
          type: integer
          description: Contact note
          format: int32
        documentId:
          type: string
          description: Contact document external ID
        description:
          type: string
          description: Contact document description
        downloadUrl:
          type: string
          description: Contact document download Url
        uploadUrl:
          type: string
          description: Contact document upload Url
          readOnly: true
        dateCreated:
          type: string
          description: When this object was created
          format: date-time
          readOnly: true
        dateModified:
          type: string
          description: When this object was updated
          format: date-time
          readOnly: true
        fileSize:
          type: integer
          description: Document file size
          format: int32
          readOnly: true
      description: This is a contact document object
    Contact_API_V1DocumentFormat:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        code:
          type: string
        contentType:
          type: string
        enabled:
          type: boolean
        dateCreated:
          type: string
          format: date-time
        dateModified:
          type: string
          format: date-time
    Contact_API_V1DocumentSource:
      type: object
      properties:
        id:
          type: integer
          format: int32
        dataSource:
          $ref: '#/components/schemas/CP_API_DataSource'
        sourceId:
          type: string
        contactDocument:
          $ref: '#/components/schemas/Contact_API_V1Document'
    Contact_API_V1DocumentStorageType:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        code:
          type: string
        enabled:
          type: boolean
        dateCreated:
          type: string
          format: date-time
        dateModified:
          type: string
          format: date-time
    Contact_API_V1DocumentType:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        code:
          type: string
        isPersonal:
          type: boolean
        isBusiness:
          type: boolean
        download:
          type: boolean
        upload:
          type: boolean
        enabled:
          type: boolean
        dateCreated:
          type: string
          format: date-time
        dateModified:
          type: string
          format: date-time
    Contact_API_V1GeneralAgreementNumber:
      type: object
      properties:
        id:
          type: integer
          format: int32
        contact:
          $ref: '#/components/schemas/Contact_API_V1'
        number:
          type: string
        dateCreated:
          type: string
          format: date-time
        dateModified:
          type: string
          format: date-time
    Contact_API_V1Note:
      type: object
      properties:
        id:
          type: integer
          format: int32
        contact:
          $ref: '#/components/schemas/Contact_API_V1'
        note:
          type: string
        dateCreated:
          type: string
          format: date-time
        createdBy:
          $ref: '#/components/schemas/CP_API_Employee'
        dateModified:
          type: string
          format: date-time
        modifiedBy:
          $ref: '#/components/schemas/CP_API_Employee'
        privateNote:
          type: boolean
        deleted:
          type: boolean
        noteType:
          $ref: '#/components/schemas/Contact_API_V1NoteType'
        documents:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Contact_API_V1Document'
    Contact_API_V1NoteType:
      type: object
      properties:
        id:
          type: integer
          format: int32
        code:
          type: string
        enabled:
          type: boolean
        dateCreated:
          type: string
          format: date-time
    Contact_API_V1PaymentType:
      type: object
      properties:
        id:
          type: integer
          format: int32
        contact:
          $ref: '#/components/schemas/Contact_API_V1'
        dealer:
          $ref: '#/components/schemas/CP_API_Dealer'
        paymentType:
          $ref: '#/components/schemas/CP_API_PaymentType'
        salePaymentType:
          $ref: '#/components/schemas/CP_API_PaymentType'
        active:
          type: boolean
        dateCreated:
          type: string
          format: date-time
        dateModified:
          type: string
          format: date-time
    Contact_API_V1Relation:
      type: object
      properties:
        id:
          type: integer
          description: Relation id.
          format: int32
        contact:
          $ref: '#/components/schemas/Contact_API_V1'
        types:
          type: array
          description: Contact relation types.
          items:
            $ref: '#/components/schemas/Contact_API_V1RelationType'
        email:
          $ref: '#/components/schemas/Contact_API_V1Email'
        telephones:
          type: array
          description: Contact relation telephones.
          items:
            $ref: '#/components/schemas/Contact_API_V1Telephone'
        dateOfBirth:
          type: string
          description: Personal contact date of birth
          format: date-time
      description: Object containing contact relation information.
    Contact_API_V1RelationFunction:
      required:
        - code
      type: object
      properties:
        name:
          type: string
          description: Relation function name
        code:
          type: string
          description: Relation function unique code
        dateCreated:
          type: string
          description: When it was created for that contact
          format: date-time
          readOnly: true
      description: This is a contact relation function.
    Contact_API_V1RelationType:
      required:
        - code
      type: object
      properties:
        code:
          type: string
          description: >-
            Relation type code (O - owner, M - manager, E - employee, D -
            driver, F - family, CP - contact person
        name:
          type: string
          description: Relation type name.
        function:
          type: string
          description: Relation type function.
        administrator:
          type: boolean
          description: Is relation administrator?
        decisionMaker:
          type: boolean
          description: Is relation decision maker?
      description: Object containing contact relation type information.
    Contact_API_V1Source:
      type: object
      properties:
        id:
          type: integer
          format: int32
        dataSource:
          $ref: '#/components/schemas/CP_API_DataSource'
        sourceId:
          type: string
        contact:
          $ref: '#/components/schemas/Contact_API_V1'
        active:
          type: boolean
        lastTransactionDate:
          type: string
          format: date-time
    Contact_API_V1Status:
      type: object
      properties:
        name:
          type: string
          description: Contact status name.
      description: Object containing contact status information.
    Contact_API_V1Tag:
      type: object
      properties:
        code:
          type: string
          description: Contact tag code.
      description: Object containing contact tag information.
    Contact_API_V1TelephoneType:
      type: object
      properties:
        name:
          type: string
          description: Contact telephone type name.
      description: Object containing contact telephone type information.
    Contact_API_V1TelephoneUsage:
      type: object
      properties:
        name:
          type: string
          description: Contact telephone usage name.
      description: Object containing contact telephone usage information.
    Contact_API_V1Task:
      type: object
      properties:
        contactId:
          type: integer
          description: CP contact ID
          format: int32
        contactName:
          type: string
          description: CP contact full name
        name1:
          type: string
          description: CP contact first name
        name2:
          type: string
          description: CP contact last name
        isBusiness:
          type: boolean
          description: is contact business?
        type:
          type: string
          description: Task type
          enum:
            - correct_contact
            - assign_salesperson
        status:
          type: string
          description: Task status
          enum:
            - open
            - pending
            - closed
            - in_progress
        description:
          type: string
          description: Task description
        dateCreated:
          type: string
          description: Date when task has been created
          format: date-time
          readOnly: true
        dateModified:
          type: string
          description: Date when task has been modified
          format: date-time
          readOnly: true
        dateAssigned:
          type: string
          description: Date when task has been assigned
          format: date-time
          readOnly: true
      description: Object containing task information
    Contact_API_V1TaskStatus:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        dateCreated:
          type: string
          format: date-time
        dateModified:
          type: string
          format: date-time
    Contact_API_V1TaskType:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        dateCreated:
          type: string
          format: date-time
        dateModified:
          type: string
          format: date-time
    Contact_API_V1Type:
      type: object
      properties:
        name:
          type: string
          description: Contact type name.
        code:
          type: string
          description: Contact type code.
      description: Object containing contact type information.
    Contact_API_V1VehicleDriverStatus:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        code:
          type: string
        dateCreated:
          type: string
          format: date-time
        dateModified:
          type: string
          format: date-time
    Contact_API_V1VehicleStatus:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        dateCreated:
          type: string
          format: date-time
        dateModified:
          type: string
          format: date-time
    CP_API_Contract:
      type: object
      properties:
        customerId:
          type: string
          description: Customer ID
        contactData:
          $ref: '#/components/schemas/CP_API_ContractContact'
        contractNumber:
          type: string
          description: Contract number from DCMi
        contractDate:
          type: string
          description: Contract creation/start date
          format: date-time
        docUrl:
          type: string
          description: Contract document url
        commissionNumber:
          type: string
          description: Commission number
        loanNumber:
          type: string
          description: Loan Number of contract
        vin:
          type: string
          description: VIN number from vehicle from contract
      description: Object received on contract search
    CP_API_ContractDocuments:
      type: object
      properties:
        id:
          type: integer
          format: int32
        contract:
          $ref: '#/components/schemas/CP_API_Contract'
        contractStatus:
          $ref: '#/components/schemas/CP_API_ContractStatus'
        name:
          type: string
        docUrl:
          type: string
        active:
          type: boolean
        dateCreated:
          type: string
          format: date-time
        dateModified:
          type: string
          format: date-time
    CP_API_ContractSource:
      type: object
      properties:
        id:
          type: integer
          format: int32
        dataSource:
          $ref: '#/components/schemas/CP_API_DataSource'
        sourceId:
          type: string
        contract:
          $ref: '#/components/schemas/CP_API_Contract'
    CP_API_ContractStatus:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        dateCreated:
          type: string
          format: date-time
    CP_API_Country:
      type: object
      properties:
        isoCode2:
          type: string
          description: Country ISO code 2
        name:
          type: string
          description: Country name
        order:
          type: integer
          description: Order number
          format: int32
        alphanumericZip:
          type: boolean
          description: Alphanumeric zip
        eu:
          type: boolean
          description: Is country EU member?
      description: Country
    CP_API_CountryAcronym:
      type: object
      properties:
        id:
          type: integer
          format: int32
        country:
          $ref: '#/components/schemas/CP_API_Country'
        acronym:
          type: string
        dateCreated:
          type: string
          format: date-time
        dateModified:
          type: string
          format: date-time
    CP_API_County:
      type: object
      properties:
        id:
          type: integer
          format: int32
        country:
          $ref: '#/components/schemas/CP_API_Country'
        name:
          type: string
        code:
          type: string
        dateCreated:
          type: string
          format: date-time
        dateModified:
          type: string
          format: date-time
        countyAcronyms:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/CP_API_CountyAcronym'
    CP_API_CountyAcronym:
      type: object
      properties:
        id:
          type: integer
          format: int32
        county:
          $ref: '#/components/schemas/CP_API_County'
        acronym:
          type: string
        dateCreated:
          type: string
          format: date-time
        dateModified:
          type: string
          format: date-time
    CP_API_CreditworthinessStatus:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        alias:
          type: string
        enabled:
          type: boolean
        dateCreated:
          type: string
          format: date-time
        dateModified:
          type: string
          format: date-time
    CP_API_CustomerGroup:
      type: object
      properties:
        code:
          type: string
          description: Contact customer group code
        name:
          type: string
          description: Contact customer group name
      description: Object containing contact customer group.
    CP_API_DataSource:
      type: object
      properties:
        id:
          type: integer
          format: int32
        parentId:
          type: integer
          format: int32
        parent:
          $ref: '#/components/schemas/CP_API_DataSource'
        name:
          type: string
        priority:
          type: integer
          format: int32
        permanentToken:
          type: string
    CP_API_DealerSource:
      type: object
      properties:
        id:
          type: integer
          format: int32
        dataSource:
          $ref: '#/components/schemas/CP_API_DataSource'
        sourceId:
          type: string
        dealer:
          $ref: '#/components/schemas/CP_API_Dealer'
    CP_API_Employee:
      type: object
      properties:
        id:
          type: integer
          format: int32
        username:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        active:
          type: boolean
        dateCreated:
          type: string
          format: date-time
        dateModified:
          type: string
          format: date-time
        sources:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/CP_API_EmployeeSource'
        tasks:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Contact_API_V1Task'
        name:
          type: string
    CP_API_EmployeeSource:
      type: object
      properties:
        id:
          type: integer
          format: int32
        dataSource:
          $ref: '#/components/schemas/CP_API_DataSource'
        sourceId:
          type: string
        employee:
          $ref: '#/components/schemas/CP_API_Employee'
    CP_API_FuelType:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        dateCreated:
          type: string
          format: date-time
        dateModified:
          type: string
          format: date-time
    CP_API_Gender:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        code:
          type: string
        enabled:
          type: boolean
        dateCreated:
          type: string
          format: date-time
    CP_API_Groups:
      type: object
      properties:
        id:
          type: integer
          format: int32
        parentId:
          type: integer
          format: int32
        code:
          type: integer
          format: int32
        name:
          type: string
        enabled:
          type: boolean
        dateCreated:
          type: string
          format: date-time
    CP_API_Interest:
      type: object
      properties:
        id:
          type: integer
          format: int32
        code:
          type: string
        name:
          type: string
        enabled:
          type: boolean
        dateCreated:
          type: string
          format: date-time
        dateModified:
          type: string
          format: date-time
    CP_API_InterestCategory:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        code:
          type: string
        dateCreated:
          type: string
          format: date-time
        dateModified:
          type: string
          format: date-time
    CP_API_Job:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        code:
          type: string
        description:
          type: string
        enabled:
          type: boolean
        dateCreated:
          type: string
          format: date-time
        dateModified:
          type: string
          format: date-time
    CP_API_Language:
      type: object
      properties:
        name:
          type: string
          description: Langauge name
        isoCode:
          type: string
          description: Language ISO code
        order:
          type: integer
          description: Order number
          format: int32
      description: Language
    CP_API_LanguageAcronym:
      type: object
      properties:
        id:
          type: integer
          format: int32
        language:
          $ref: '#/components/schemas/CP_API_Language'
        acronym:
          type: string
        dateCreated:
          type: string
          format: date-time
        dateModified:
          type: string
          format: date-time
    CP_API_Lead:
      type: object
      properties:
        id:
          type: integer
          description: Resource ID
          format: int32
        sources:
          type: array
          description: Source IDs
          items:
            $ref: '#/components/schemas/CP_API_Source'
        name:
          type: string
          description: Resource name
        dealer:
          $ref: '#/components/schemas/CP_API_Resource'
        contact:
          $ref: '#/components/schemas/CP_API_Resource'
        contactMethod:
          type: string
          description: Contact method
          enum:
            - mobile
            - phone
            - email
            - messenger
            - social_network
            - any
            - unknown
        type:
          type: string
          description: Lead type
          enum:
            - new_car
            - used_car
            - Unknown
        status:
          type: string
          description: Lead status
          enum:
            - open
            - pending
            - close
            - deleted
            - canceled
            - SLA_exceeded
            - offer
        usage:
          type: string
          description: Lead usage
          enum:
            - Unknown
            - Private
            - Work
            - Racing
        sourceType:
          type: string
          description: Source type from which lead came from
          enum:
            - walk-in
            - social_media
            - online
            - online_car_Market
            - telephone
            - e-mail
            - attack_list
            - Unknown
        rating:
          type: string
          description: Lead rating
          enum:
            - hot
            - warm
            - cold
            - Unknown
        expectedBuyingDate:
          type: string
          description: When is expected buying date
          format: date-time
        tradeIn:
          type: boolean
          description: If lead is trade in
        carType:
          type: string
          description: Lead car type
          enum:
            - Unknown
            - new
            - used
            - demo
            - day_registration
        currentVehicle:
          $ref: '#/components/schemas/CP_API_CurrentVehicle'
        description:
          type: string
          description: Lead description
        nextPurchase:
          type: string
          description: When is leads next purchase
        actions:
          type: array
          description: List of lead actions
          items:
            $ref: '#/components/schemas/CP_API_LeadAction'
      description: This is a lead object
    CP_API_LeadRating:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        dateCreated:
          type: string
          format: date-time
    CP_API_LeadSource:
      type: object
      properties:
        id:
          type: integer
          format: int32
        dataSource:
          $ref: '#/components/schemas/CP_API_DataSource'
        sourceId:
          type: string
        lead:
          $ref: '#/components/schemas/CP_API_Lead'
    CP_API_LeadStatus:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        dateCreated:
          type: string
          format: date-time
        dateModified:
          type: string
          format: date-time
    CP_API_LeadType:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        active:
          type: boolean
        dateCreated:
          type: string
          format: date-time
    CP_API_Loan:
      type: object
      properties:
        id:
          type: integer
          description: Loan ID in CP
          format: int32
        sources:
          type: array
          description: Source IDs
          items:
            $ref: '#/components/schemas/CP_API_Source'
        name:
          type: string
          description: Resource name
        provider:
          $ref: '#/components/schemas/CP_API_LoanProvider'
        type:
          $ref: '#/components/schemas/CP_API_LoanType'
        insurance:
          $ref: '#/components/schemas/CP_API_loanInsurance'
        dealer:
          $ref: '#/components/schemas/CP_API_Resource'
        startDate:
          type: string
          description: Loan start date
          format: date-time
        endDate:
          type: string
          description: Loan end date
          format: date-time
        realEndDate:
          type: string
          description: Loan real end date
          format: date-time
        number:
          type: string
          description: Loan number
        status:
          type: string
          description: Loan status
        loanContractType:
          type: string
          description: Loan contract type
        netoPrice:
          type: number
          description: Loan neto price value
        specialPayment:
          type: number
          description: Loan special payment value
        financialAmount:
          type: number
          description: Loan financial amount
        restValue:
          type: number
          description: Loan remaining value
        installment:
          type: number
          description: Loan installment value
        durationMonth:
          type: integer
          description: Loan duration in months
          format: int32
        interestRate:
          type: number
          description: Loan interest rate
        insuranceRate:
          type: number
          description: Loan insurance rate
        costPerKm:
          type: number
          description: Loan cost per KM
        kmLimit:
          type: integer
          description: Yearly KM limit
          format: int32
        firstInstallment:
          type: number
          description: Loan first installment value
        bookValue:
          type: number
          description: Loan book value
        downPayment:
          type: number
          description: Loan down payment value
        dateCreated:
          type: string
          description: Loan creation date
          format: date-time
        dateModified:
          type: string
          description: Loan last modification date
          format: date-time
      description: This is a loan object
    CP_API_LoanCompany:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        code:
          type: string
        enabled:
          type: boolean
        dateCreated:
          type: string
          format: date-time
    CP_API_LoanInsurance:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        dateCreated:
          type: string
          format: date-time
        dateModified:
          type: string
          format: date-time
    CP_API_LoanRepayment:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/CP_API_LoanRepaymentId'
        loan:
          $ref: '#/components/schemas/CP_API_Loan'
    CP_API_LoanRepaymentId:
      type: object
      properties:
        id:
          type: integer
          format: int32
        loanId:
          type: integer
          format: int32
        rateNumber:
          type: integer
          format: int32
        payDay:
          type: string
          format: date-time
        realPayDay:
          type: string
          format: date-time
        rate:
          type: number
        dateCreated:
          type: string
          format: date-time
        dateModified:
          type: string
          format: date-time
    CP_API_LoanSource:
      type: object
      properties:
        id:
          type: integer
          format: int32
        dataSource:
          $ref: '#/components/schemas/CP_API_DataSource'
        sourceId:
          type: string
        loan:
          $ref: '#/components/schemas/CP_API_Loan'
    CP_API_LoanType:
      type: object
      properties:
        id:
          type: integer
          description: Loan type ID in CP
          format: int32
        name:
          type: string
          description: Loan type name
          enum:
            - leasing
      description: This is a loan type object
    CP_API_MatrialStatus:
      type: object
      properties:
        id:
          type: integer
          format: int32
        status:
          type: string
        description:
          type: string
        enabled:
          type: boolean
        dateCreaed:
          type: string
          format: date-time
        dateModified:
          type: string
          format: date-time
    CP_API_ModelSource:
      type: object
      properties:
        id:
          type: integer
          format: int32
        dataSource:
          $ref: '#/components/schemas/CP_API_DataSource'
        sourceId:
          type: string
        model:
          $ref: '#/components/schemas/CP_API_Model'
    CP_API_NextPurchase:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        dateCreated:
          type: string
          format: date-time
        dateModified:
          type: string
          format: date-time
    CP_API_PaymentType:
      type: object
      properties:
        id:
          type: integer
          format: int32
        code:
          type: string
        name:
          type: string
        dateCreated:
          type: string
          format: date-time
        dateModified:
          type: string
          format: date-time
    CP_API_Personal:
      type: object
      properties:
        id:
          type: integer
          format: int32
        contact:
          $ref: '#/components/schemas/Contact_API_V1'
        gender:
          $ref: '#/components/schemas/CP_API_Gender'
        matrialStatus:
          $ref: '#/components/schemas/CP_API_MatrialStatus'
        positionInHousehold:
          $ref: '#/components/schemas/CP_API_PositionInHousehold'
        professionTitle:
          $ref: '#/components/schemas/CP_API_ProfessionTitle'
        purchasingStatus:
          $ref: '#/components/schemas/CP_API_PurchasingStatus'
        qualification:
          $ref: '#/components/schemas/CP_API_Qualification'
        salutation:
          $ref: '#/components/schemas/CP_API_Salutation'
        title:
          type: string
        status:
          type: string
        dateOfBirth:
          type: string
          format: date-time
        pictureDriverLicenseUrl:
          type: string
        noOfChildren:
          type: integer
          format: int32
        noOfChildrenYounger17:
          type: integer
          format: int32
        dateCreated:
          type: string
          format: date-time
        dateModified:
          type: string
          format: date-time
    CP_API_PoBox:
      type: object
      properties:
        id:
          type: integer
          format: int32
        addressType:
          $ref: '#/components/schemas/CP_API_AddressType'
        contact:
          $ref: '#/components/schemas/Contact_API_V1'
        poBox:
          type: string
        country:
          $ref: '#/components/schemas/CP_API_Country'
        county:
          $ref: '#/components/schemas/CP_API_County'
        zip:
          type: string
        city:
          type: string
        isPrimary:
          type: boolean
        valid:
          type: boolean
        dateCreated:
          type: string
          format: date-time
        dateModified:
          type: string
          format: date-time
    CP_API_PositionInHousehold:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        description:
          type: string
        enabled:
          type: boolean
        dateCreated:
          type: string
          format: date-time
        dateModified:
          type: string
          format: date-time
    CP_API_ProfessionTitle:
      type: object
      properties:
        name:
          type: string
          description: Profession title name.
      description: Object containing profession title information.
    CP_API_PurchasingStatus:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        description:
          type: string
        enabled:
          type: boolean
        dateCreated:
          type: string
          format: date-time
        dateModified:
          type: string
          format: date-time
    CP_API_Qualification:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        description:
          type: string
        enabled:
          type: boolean
        dateCreated:
          type: string
          format: date-time
        dateModified:
          type: string
          format: date-time
    CP_API_Salutation:
      type: object
      properties:
        name:
          type: string
          description: Salutation name
        business:
          type: boolean
          description: Is salutation used for business contacts?
        personal:
          type: boolean
          description: Is salutation used for personal contacts?
      description: Object containing salutation information
    CP_API_SocialMedia:
      type: object
      properties:
        id:
          type: integer
          format: int32
        socialMediaType:
          $ref: '#/components/schemas/CP_API_SocialMediaType'
        url:
          type: string
        apiKey:
          type: string
        description:
          type: string
        active:
          type: boolean
        dateCreated:
          type: string
          format: date-time
        dateModified:
          type: string
          format: date-time
        contactSocialMedias:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Contact_API_V1SocialMedia'
    CP_API_SocialMediaType:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        mainUrl:
          type: string
        enabled:
          type: boolean
        dateCreated:
          type: string
          format: date-time
        dateModification:
          type: string
          format: date-time
    CP_API_SourceType:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        active:
          type: boolean
        dateCreated:
          type: string
          format: date-time
    CP_API_Tag:
      type: object
      properties:
        id:
          type: integer
          format: int32
        code:
          type: string
        enabled:
          type: boolean
        dateCreated:
          type: string
          format: date-time
    CP_API_TelephoneType:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        enabled:
          type: boolean
        dateCreated:
          type: string
          format: date-time
    CP_API_TelephoneUsage:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        enabled:
          type: boolean
        dateCreated:
          type: string
          format: date-time
    CP_API_TradeIn:
      type: object
      properties:
        id:
          type: integer
          format: int32
        contract:
          $ref: '#/components/schemas/CP_API_Contract'
        vehicle:
          $ref: '#/components/schemas/CP_API_Vehicle'
        tradeInPrice:
          type: number
        active:
          type: boolean
        dateModified:
          type: string
          format: date-time
        dateCreated:
          type: string
          format: date-time
    CP_API_Usage:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        dateCreated:
          type: string
          format: date-time
    CP_API_VehiclePreference:
      type: object
      properties:
        id:
          type: integer
          format: int32
        category:
          $ref: '#/components/schemas/CP_API_VehiclePreferenceCategory'
        code:
          type: string
        dateCreated:
          type: string
          format: date-time
        dateModified:
          type: string
          format: date-time
        sources:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/CP_API_VehiclePreferenceSource'
    CP_API_VehiclePreferenceCategory:
      type: object
      properties:
        code:
          type: string
          description: Vehicle preference category unique code
        name:
          type: string
          description: Vehicle preference category name
      description: Object containing vehicle preference category
    CP_API_VehiclePreferenceSource:
      type: object
      properties:
        id:
          type: integer
          format: int32
        dataSource:
          $ref: '#/components/schemas/CP_API_DataSource'
        sourceId:
          type: string
        dateCreated:
          type: string
          format: date-time
        dateModified:
          type: string
          format: date-time
        vehiclePreference:
          $ref: '#/components/schemas/CP_API_VehiclePreference'
    CP_API_VehicleSale:
      type: object
      properties:
        id:
          type: integer
          description: Vehicle sale ID in CP
          format: int32
        actionId:
          type: string
          description: Action ID in FFU
        owner:
          $ref: '#/components/schemas/CP_API_Resource'
        payer:
          $ref: '#/components/schemas/CP_API_Resource'
        driver:
          $ref: '#/components/schemas/CP_API_Resource'
        vehicle:
          $ref: '#/components/schemas/CP_API_Vehicle'
        car:
          $ref: '#/components/schemas/CP_API_Car'
        active:
          type: boolean
          description: Is this vehicle-sale active?
        availableFrom:
          type: string
          description: When is this vehicle available from
          format: date-time
        deliveryDate:
          type: string
          description: Deliver date for a vehicle
          format: date-time
        description:
          type: string
          description: Vehicle sale description
        kmStandSale:
          type: integer
          description: Number of KM vehicle has
          format: int32
        operatingHoursSale:
          type: integer
          description: Operating hours
          format: int32
        purchasePriceNeto:
          type: number
          description: Vehicle purchase price in neto
          format: double
        purchasePriceBruto:
          type: number
          description: Vehicle purchase price in bruto
          format: double
        estimatedCarValue:
          type: number
          description: Vehicle estimated value
          format: double
        inventoryCarValue:
          type: number
          description: Car inventory value
          format: double
        carValueAdjustment:
          type: number
          description: Car value adjustment
          format: double
        eurotaxShopping:
          type: number
          description: Eurotax shopping value
          format: double
        eurotaxSale:
          type: number
          description: Eurotax sale value
          format: double
        targetPrice:
          type: number
          description: Vehicle target price
          format: double
        minimumPrice:
          type: number
          description: Vehicle minimum price
          format: double
        finalVehiclePrice:
          type: number
          description: Vehicle final price for which it was sold for
          format: double
        mountingPlan:
          type: number
          description: Mounting plan
          format: double
        fleetDiscount:
          type: number
          description: Fleet discount
          format: double
        tradeInPrice:
          type: number
          description: Trade-in price if vehicle is used as a trade-in
          format: double
        tradeInAdditionalPayment:
          type: number
          description: 'Additional payment value for trade '
          format: double
        profitFinal:
          type: number
          description: Final profit value
          format: double
        profitPercentage:
          type: number
          description: Profit percentage
          format: double
        discount:
          type: number
          description: Discount
          format: double
      description: This is a vehicle sale object
    CP_API_VehicleSaleSource:
      type: object
      properties:
        id:
          type: integer
          format: int32
        dataSource:
          $ref: '#/components/schemas/CP_API_DataSource'
        sourceId:
          type: string
        vehicleSale:
          $ref: '#/components/schemas/CP_API_VehicleSale'
    CP_API_VehicleSource:
      type: object
      properties:
        id:
          type: integer
          format: int32
        dataSource:
          $ref: '#/components/schemas/CP_API_DataSource'
        sourceId:
          type: string
        vehicle:
          $ref: '#/components/schemas/CP_API_Vehicle'
    CP_API_VehicleStatus:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        code:
          type: string
        dateCreated:
          type: string
          format: date-time
    Contact_API_V1EmailPhoneSearch:
      type: object
      properties:
        email:
          type: string
          description: Email to search contact by
        telephone:
          type: string
          description: Telephone number to search contact by
        page:
          $ref: '#/components/schemas/CP_API_Page'
      description: This object used for searching contact by email or telephone
    CP_API_AddressAutocompleteResource:
      type: object
      properties:
        country:
          maxLength: 3
          minLength: 0
          type: string
          description: Country ISO2 code
        address:
          type: string
          description: Address autocomplete term
        suggestions:
          type: array
          description: Address autocomplete suggestions result
          items:
            $ref: '#/components/schemas/Contact_API_V1Address'
      description: This is a contact autocomplete address
    CP_API_ParentContact:
      required:
        - contactId
        - groupDuplicate
        - similarity
        - status
      type: object
      properties:
        parentId:
          type: integer
          description: Parent contact id
          format: int32
        contactId:
          type: integer
          description: Contact id
          format: int32
        status:
          type: string
          description: Parent contact status
        groupDuplicate:
          type: boolean
          description: Group duplicate flag
        similarity:
          type: number
          description: Similarity of duplicate check between contact and parent
        createdByDataSource:
          type: string
          description: Created by data sources name
        modifiedByDataSource:
          type: string
          description: Modified by data sources name
        dateCreated:
          type: string
          description: When this object was created
          format: date-time
        dateModified:
          type: string
          description: When this object was updated
          format: date-time
      description: Object containing parent contact info
    CP_API_MaritalStatus:
      type: object
      properties:
        name:
          type: string
          description: Contact marital status.
      description: Object containing contact marital status information.
    Contact_API_V1AdvancedSearchResult:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/Contact_API_V1SearchResult'
        page:
          type: integer
          description: Current page number
          format: int32
          readOnly: true
        pageSize:
          type: integer
          description: Current page size
          format: int32
          readOnly: true
        totalPages:
          type: integer
          description: Total number of pages
          format: int32
          readOnly: true
        totalItems:
          type: integer
          description: Total number of items
          format: int32
          readOnly: true
      description: Contact advanced search page result
    Contact_API_V1SearchResult:
      type: object
      properties:
        weight:
          type: integer
          format: int32
        storage:
          type: string
        contact:
          $ref: '#/components/schemas/Contact_API_V1'
    Contact_API_V1AdvancedSearch:
      type: object
      properties:
        page:
          $ref: '#/components/schemas/CP_API_Page'
        filter:
          $ref: '#/components/schemas/Contact_API_V1SearchFilter'
      description: This object is used for contacts advanced search
    Contact_API_V1SearchAddress:
      type: object
      properties:
        country:
          type: string
          description: Country ISO code
          readOnly: true
        city:
          type: string
          description: Address city
          readOnly: true
        zip:
          type: string
          description: Address postal code
          readOnly: true
        zip2:
          type: string
          description: Address postal code range
          readOnly: true
        street:
          type: string
          description: Address street
          readOnly: true
        streetNumber:
          type: string
          description: Address street number
          readOnly: true
        valid:
          type: boolean
          description: >-
            Filter Omikron validated address. Example valid[true] return
            validate address, valid[false] return non validate address,
            valid[null] ignore filed
      description: This is a contact address
    Contact_API_V1SearchFilter:
      type: object
      properties:
        id:
          type: integer
          description: Contact ID
          format: int32
        sources:
          type: array
          description: Source IDs
          items:
            $ref: '#/components/schemas/CP_API_Source'
        type:
          type: array
          description: Contact type (C, I, W, H, F, G)
          items:
            type: string
        businessGroup:
          type: array
          description: >-
            Contact business group. Examples [ TCB(T-Com Berlin), TCM(T-Com
            Munchen), TCF(T-Com Frankfurt) ]
          items:
            type: string
        status:
          type: array
          description: Contact status
          items:
            type: string
        tag:
          type: array
          description: Contact tag
          items:
            type: string
        includeDatasources:
          type: array
          description: Select users with datasources eg.Care
          items:
            type: string
        excludeDatasources:
          type: array
          description: Exclude users with datasources eg.Care
          items:
            type: string
        customerId:
          type: string
          description: Customer or interest ID
        business:
          type: boolean
          description: true for business contact, false for personal contact, null for both
        name1:
          type: string
          description: Contact first name
        name2:
          type: string
          description: Contact last name
        additionalName:
          type: string
          description: Contact additional name
        fullName:
          type: string
          description: Contact full name
        creditLock:
          type: boolean
          description: Contact credit lock
        address:
          $ref: '#/components/schemas/Contact_API_V1SearchAddress'
        email:
          type: string
          description: Contact email
        telephone:
          type: string
          description: Contact telephone
        customerGroup:
          type: array
          description: Contact group code
          items:
            type: string
        customerFeature:
          type: array
          description: Contact feature code
          items:
            type: string
        classification:
          type: string
          description: Filter out by business classification
        usageSystems:
          type: array
          description: Filter contact by activity in desired external platform
          items:
            type: string
        usageSystemInactive:
          type: boolean
          description: >-
            Filter only contacts which are marked as unused in external
            platforms
        createdBy:
          $ref: '#/components/schemas/CP_API_Resource'
        createdFrom:
          type: string
          description: Filter out by date created from
          example: dd.MM.yyyy
        createdTo:
          type: string
          description: Filter out by date created to
          example: dd.MM.yyyy
        modifiedBy:
          $ref: '#/components/schemas/CP_API_Resource'
        modifiedFrom:
          type: string
          description: Filter out by date modified from
          example: dd.MM.yyyy
        modifiedTo:
          type: string
          description: Filter out by date modified to
          example: dd.MM.yyyy
        dealerId:
          type: string
          description: >-
            Filter out contacts which have access_right to specific dealer. PP
            dealer ID should be used.
        valid:
          type: boolean
          description: >-
            Filter duplicate contact. Example valid[true] return duplicate,
            valid[false] return non duplicate, valid[null] ignore filed
      description: Contact search filter
    CP_API_MultipleContactAdvancedSearchResult:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/Contact_API_V1SearchResult'
        page:
          type: integer
          description: Current page number
          format: int32
          readOnly: true
        pageSize:
          type: integer
          description: Current page size
          format: int32
          readOnly: true
        totalPages:
          type: integer
          description: Total number of pages
          format: int32
          readOnly: true
        totalItems:
          type: integer
          description: Total number of items
          format: int32
          readOnly: true
      description: Contact advanced search page result
    CP_API_MultipleContactAdvanceSearchRequest:
      type: object
      properties:
        page:
          $ref: '#/components/schemas/CP_API_Page'
        filter:
          $ref: >-
            #/components/schemas/CP_API_MultipleContactSearchFilter
      description: This object is used for retrieve multiples contacts ids
    CP_API_MultipleContactSearchFilter:
      type: object
      properties:
        ids:
          type: array
          description: Contact ID
          items:
            type: integer
            format: int32
      description: Multiple contact search filter
    Contact_API_V1ExtendedSearch:
      type: object
      properties:
        storage:
          type: array
          description: Search storage
          items:
            type: string
        maxResults:
          type: integer
          description: Maximal number of results
          format: int32
        filter:
          $ref: '#/components/schemas/Contact_API_V1SearchFilter'
      description: This object is used for contacts extended search
    Contact_API_V1Attribute:
      type: object
      properties:
        name:
          type: string
        value:
          type: string
    CP_API_PpBrand:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        street:
          type: string
        city:
          type: string
        zip:
          type: string
        importerName:
          type: string
        gdprEnabled:
          type: boolean
        privacyPolicyUrl:
          type: string
    CP_API_PpDealer:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        subname:
          type: string
        country:
          type: string
        zip:
          type: string
        city:
          type: string
        street:
          type: string
        status:
          type: string
        enabled:
          type: boolean
        details:
          $ref: '#/components/schemas/CP_API_PpDealerDetails'
        dealerBrands:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/CP_API_PpDealerBrand'
        listOfMasterChildBrands:
          type: array
          items:
            $ref: '#/components/schemas/CP_API_PpBrand'
        ef:
          type: boolean
        type:
          type: string
        usedCars:
          type: boolean
        telephone:
          type: string
        email:
          type: string
        instagram:
          type: string
        facebook:
          type: string
        snapchat:
          type: string
        twitter:
          type: string
        youtube:
          type: string
        logoPicture:
          type: string
        privacyPolicyUrl:
          type: string
        contactAttributes:
          type: array
          items:
            $ref: '#/components/schemas/Contact_API_V1Attribute'
        externalIds:
          type: array
          items:
            $ref: '#/components/schemas/CP_API_PpExternal'
    CP_API_PpDealerBrand:
      type: object
      properties:
        id:
          type: integer
          format: int32
        brand:
          $ref: '#/components/schemas/CP_API_PpBrand'
        dmsType:
          type: string
        enabled:
          type: boolean
    CP_API_PpDealerDetails:
      type: object
      properties:
        legal:
          $ref: '#/components/schemas/CP_API_PpLegal'
    CP_API_PpExternal:
      type: object
      properties:
        id:
          type: string
        platform:
          type: string
    CP_API_PpLegal:
      type: object
      properties:
        name:
          type: string
        subName:
          type: string
        city:
          type: string
        street:
          type: string
        zip:
          type: string
    CP_API_UserDealerBrands:
      type: object
      properties:
        dealer:
          $ref: '#/components/schemas/CP_API_PpDealer'
        brands:
          type: array
          items:
            $ref: '#/components/schemas/CP_API_PpBrand'
        masterCompany:
          $ref: '#/components/schemas/CP_API_PpDealer'
        companies:
          type: array
          items:
            $ref: '#/components/schemas/CP_API_PpDealer'
      description: Object containing user dealer and brands.
    CP_API_ConsentConfiguration:
      type: object
      properties:
        id:
          type: integer
          description: Resource ID
          format: int32
        sources:
          type: array
          description: Source IDs
          items:
            $ref: '#/components/schemas/CP_API_Source'
        name:
          type: string
          description: Resource name
        channels:
          type: array
          description: List of consent channels
          items:
            type: string
        reasons:
          type: array
          description: List of consent reasons
          items:
            type: string
        jointConsents:
          type: boolean
          description: Joint consents between dealer and brand importer.
      description: This is a consent configuration object.
    CP_API_ConsentDealerConfiguration:
      type: object
      properties:
        id:
          type: integer
          description: Resource ID
          format: int32
        sources:
          type: array
          description: Source IDs
          items:
            $ref: '#/components/schemas/CP_API_Source'
        name:
          type: string
          description: Resource name
        channels:
          type: array
          description: List of consent channels
          items:
            type: string
        reasons:
          type: array
          description: List of consent reasons
          items:
            type: string
        jointConsents:
          type: boolean
          description: Joint consents between dealer and brand importer.
        brands:
          type: array
          description: List of brands consent configurations
          items:
            $ref: '#/components/schemas/CP_API_ConsentConfiguration'
      description: This is a consent dealer configuration object.
    CP_API_ConsentGroupConfiguration:
      type: object
      properties:
        id:
          type: integer
          description: Resource ID
          format: int32
        sources:
          type: array
          description: Source IDs
          items:
            $ref: '#/components/schemas/CP_API_Source'
        name:
          type: string
          description: Resource name
        channels:
          type: array
          description: List of consent channels
          items:
            type: string
        reasons:
          type: array
          description: List of consent reasons
          items:
            type: string
        jointConsents:
          type: boolean
          description: Joint consents between dealer and brand importer.
        brands:
          type: array
          description: List of brands consent configurations
          items:
            $ref: '#/components/schemas/CP_API_ConsentConfiguration'
        dealers:
          type: array
          description: List of dealer consent configurations
          items:
            $ref: >-
              #/components/schemas/CP_API_ConsentDealerConfiguration
        ecoSystems:
          type: array
          description: List of EcoSystem consent configurations
          items:
            $ref: '#/components/schemas/CP_API_ConsentConfiguration'
      description: This is a consent group configuration object.
    CP_API_Consent:
      type: object
      properties:
        type:
          type: string
          description: Consent type
          enum:
            - web
            - document
            - custom
        signed:
          type: boolean
          description: If consent document was signed
        confirmed:
          type: boolean
          description: If consent document was confirmed by contact
        removalRequested:
          type: boolean
          description: If consent has had removal requested
        channels:
          type: array
          description: List of consent channels
          items:
            $ref: '#/components/schemas/CP_API_ConsentItem'
        reasons:
          type: array
          description: List of consent reasons
          items:
            $ref: '#/components/schemas/CP_API_ConsentItem'
        document:
          $ref: '#/components/schemas/CP_API_ConsentDocument'
      description: This is a consent object.
    CP_API_ConsentDocument:
      type: object
      properties:
        documentId:
          type: string
          description: Consent document ID
        url:
          type: string
          description: Consent document URL
      description: This is a consent document object.
    CP_API_ConsentItem:
      required:
        - allow
        - name
      type: object
      properties:
        name:
          type: string
          description: Name of item used in consent
        allow:
          type: boolean
          description: If that consent item is allowed
      description: This is a consent item object.
    CP_API_Consents:
      type: object
      properties:
        id:
          type: integer
          description: Resource ID
          format: int32
        sources:
          type: array
          description: Source IDs
          items:
            $ref: '#/components/schemas/CP_API_Source'
        name:
          type: string
          description: Resource name
        consents:
          type: array
          description: List of consent objects
          items:
            $ref: '#/components/schemas/CP_API_Consent'
      description: This is a consents object.
    CP_API_ConsentsDealer:
      type: object
      properties:
        id:
          type: integer
          description: Resource ID
          format: int32
        sources:
          type: array
          description: Source IDs
          items:
            $ref: '#/components/schemas/CP_API_Source'
        name:
          type: string
          description: Resource name
        consents:
          type: array
          description: List of consent objects
          items:
            $ref: '#/components/schemas/CP_API_Consent'
        brands:
          type: array
          description: List of brands consents
          items:
            $ref: '#/components/schemas/CP_API_Consents'
      description: This is a consents dealer object.
    CP_API_ConsentsGroup:
      type: object
      properties:
        id:
          type: integer
          description: Resource ID
          format: int32
        sources:
          type: array
          description: Source IDs
          items:
            $ref: '#/components/schemas/CP_API_Source'
        name:
          type: string
          description: Resource name
        consents:
          type: array
          description: List of consent objects
          items:
            $ref: '#/components/schemas/CP_API_Consent'
        brands:
          type: array
          description: List of brands consents
          items:
            $ref: '#/components/schemas/CP_API_Consents'
        dealers:
          type: array
          description: List of dealers consents
          items:
            $ref: '#/components/schemas/CP_API_ConsentsDealer'
        ecoSystems:
          type: array
          description: List of EcoSystem consents
          items:
            $ref: '#/components/schemas/CP_API_Consents'
        externalResponse:
          type: string
          description: External response if CP is not master-data for GDPR
          readOnly: true
      description: This is a consents group object.
    CP_API_ConsentSigned:
      type: object
      properties:
        type:
          type: string
          description: Consent type (document, web, custom)
          enum:
            - document
            - web
            - custom
        signed:
          type: boolean
          description: Consent signed
        confirmed:
          type: boolean
          description: Consent confirmed
        dealer:
          $ref: '#/components/schemas/CP_API_Resource'
        channels:
          type: array
          description: List of consent channels
          items:
            $ref: '#/components/schemas/CP_API_ConsentItem'
        document:
          $ref: '#/components/schemas/CP_API_ConsentDocument'
        dateCreated:
          type: string
          description: When this consent was created
          format: date-time
        dateModified:
          type: string
          description: When this consent was updated
          format: date-time
      description: This is a contact signed consent object.
    CP_API_InputStream:
      type: object
    CP_API_ConsentHistory:
      type: object
      properties:
        name:
          type: string
          description: History object name
        history:
          type: array
          description: List of history consent objects
          items:
            $ref: '#/components/schemas/CP_API_ConsentHistoryItem'
      description: This is a consent history object.
    CP_API_ConsentHistoryConfirm:
      type: object
      properties:
        date:
          type: string
          description: Date when item was created
          format: date-time
        confirmed:
          type: boolean
          description: If consent was confirmed
        employee:
          $ref: '#/components/schemas/CP_API_Resource'
      description: This is a consent history confirm object.
    CP_API_ConsentHistoryItem:
      type: object
      properties:
        date:
          type: string
          description: Date when item was created
          format: date-time
        allow:
          type: boolean
          description: If consent was allowed
        employee:
          $ref: '#/components/schemas/CP_API_Resource'
      description: This is a consent history item object.
    CP_API_ConsentsGroupHistory:
      type: object
      properties:
        id:
          type: integer
          description: Resource ID
          format: int32
        sources:
          type: array
          description: Source IDs
          items:
            $ref: '#/components/schemas/CP_API_Source'
        name:
          type: string
          description: Resource name
        confirms:
          type: array
          description: History list of confirms
          items:
            $ref: '#/components/schemas/CP_API_ConsentHistoryConfirm'
        channels:
          type: array
          description: History list of channels
          items:
            $ref: '#/components/schemas/CP_API_ConsentHistory'
        reasons:
          type: array
          description: History list of reasons
          items:
            $ref: '#/components/schemas/CP_API_ConsentHistory'
        brands:
          type: array
          description: List of brands consents
          items:
            $ref: '#/components/schemas/CP_API_ConsentsHistory'
        dealers:
          type: array
          description: List of dealers consents
          items:
            $ref: '#/components/schemas/CP_API_ConsentsHistory'
        ecoSystems:
          type: array
          description: List of ecoSystems consents
          items:
            $ref: '#/components/schemas/CP_API_ConsentsHistory'
      description: This is a consents group history object.
    CP_API_ConsentsHistory:
      type: object
      properties:
        id:
          type: integer
          description: Resource ID
          format: int32
        sources:
          type: array
          description: Source IDs
          items:
            $ref: '#/components/schemas/CP_API_Source'
        name:
          type: string
          description: Resource name
        confirms:
          type: array
          description: History list of confirms
          items:
            $ref: '#/components/schemas/CP_API_ConsentHistoryConfirm'
        channels:
          type: array
          description: History list of channels
          items:
            $ref: '#/components/schemas/CP_API_ConsentHistory'
        reasons:
          type: array
          description: History list of reasons
          items:
            $ref: '#/components/schemas/CP_API_ConsentHistory'
      description: This is a consents history object.
    CP_API_ConsentSignature:
      type: object
      properties:
        signatureId:
          type: string
          description: Consent signature ID
        type:
          type: string
          description: Consent signature type
          enum:
            - document
            - signature
            - document_scan
            - digital_signature
        url:
          type: string
          description: Consent signature url
        clientIp:
          type: string
          description: Client IP
        signatureDate:
          type: string
          description: When the document was signed
          format: date-time
      description: This is a consent signature object.
    CP_API_ConsentsContact:
      type: object
      properties:
        id:
          type: integer
          description: Resource ID
          format: int32
        sources:
          type: array
          description: Source IDs
          items:
            $ref: '#/components/schemas/CP_API_Source'
        name:
          type: string
          description: Resource name
        type:
          type: string
          description: >-
            Contact type (I - interest, C - customer, W - dealer without
            workflow, F - dealer with workflow, H - handler dealer)
          enum:
            - I
            - C
            - W
            - F
            - H
        name1:
          type: string
          description: Contact first name
        name2:
          type: string
          description: Contact last name
        additionalName:
          type: string
          description: Contact additional name
        address:
          $ref: '#/components/schemas/Contact_API_V1Address'
        email:
          type: string
          description: Contact's email
        telephone:
          type: string
          description: Contact's private telephone number
        telephoneBusiness:
          type: string
          description: Contact's business telephone number
        mobile:
          type: string
          description: Contact's private mobile phone number
        mobileBusiness:
          type: string
          description: Contact's business mobile phone number
        fax:
          type: string
          description: Contact's private fax number
        faxBusiness:
          type: string
          description: Contact's business fax number
        primaryLanguage:
          type: string
          description: Contact's primary language
        taxId:
          type: string
          description: Contact's tax ID
      description: This is a contact object.
    CP_API_DealerConsents:
      required:
        - contact
      type: object
      properties:
        sources:
          type: array
          description: Source IDs
          items:
            $ref: '#/components/schemas/CP_API_Source'
        contact:
          $ref: '#/components/schemas/CP_API_ConsentsContact'
        dealer:
          $ref: '#/components/schemas/CP_API_ConsentsDealer'
        group:
          $ref: '#/components/schemas/CP_API_Consents'
        brands:
          type: array
          description: List of brands contact has consents for
          items:
            $ref: '#/components/schemas/CP_API_Consents'
        ecoSystem:
          $ref: '#/components/schemas/CP_API_Consents'
        signature:
          $ref: '#/components/schemas/CP_API_ConsentSignature'
        token:
          type: string
          description: Consent token for reading documents
        externalResponse:
          type: string
          description: External response if CP is not master-data for GDPR
          readOnly: true
      description: This is a dealer consents object.
    CP_API_InputPart:
      type: object
      properties:
        headers:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
        mediaType:
          $ref: '#/components/schemas/CP_API_MediaType'
        contentTypeFromMessage:
          type: boolean
        bodyAsString:
          type: string
    CP_API_MultipartFormDataInput:
      type: object
      properties:
        formDataMap:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/CP_API_InputPart'
        formData:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/CP_API_InputPart'
        parts:
          type: array
          items:
            $ref: '#/components/schemas/CP_API_InputPart'
        preamble:
          type: string
    CP_API_DealerConsentsEmail:
      required:
        - contact
      type: object
      properties:
        contact:
          $ref: '#/components/schemas/CP_API_Resource'
        dealer:
          $ref: '#/components/schemas/CP_API_Resource'
        brand:
          $ref: '#/components/schemas/CP_API_Resource'
        ecoSystem:
          $ref: '#/components/schemas/CP_API_Resource'
        token:
          type: string
          description: Token used for sending email
        attachDocument:
          type: boolean
          description: Attach PDF document to email message
      description: This is a Dealer Consents Email object.
    CP_API_DealerCustomConsentEmailResource:
      required:
        - contacts
        - dealer
        - subject
        - template
      type: object
      properties:
        contacts:
          type: array
          description: Contacts object to send email to
          items:
            $ref: '#/components/schemas/CP_API_Resource'
        dealer:
          $ref: '#/components/schemas/CP_API_Resource'
        brand:
          $ref: '#/components/schemas/CP_API_Resource'
        ecoSystem:
          $ref: '#/components/schemas/CP_API_Resource'
        template:
          type: string
          description: >-
            Email template file name which will be used when sending custom
            consent email
        subject:
          type: string
          description: Email subject which will be used when sending custom consent email
      description: This is a custom dealer consent email resource.
    CP_API_GroupConsents:
      required:
        - contact
      type: object
      properties:
        sources:
          type: array
          description: Source IDs
          items:
            $ref: '#/components/schemas/CP_API_Source'
        contact:
          $ref: '#/components/schemas/CP_API_Resource'
        group:
          $ref: '#/components/schemas/CP_API_Consents'
        signature:
          $ref: '#/components/schemas/CP_API_ConsentSignature'
      description: This is a group consents object.
    CP_API_CurrentVehicle:
      type: object
      properties:
        currentCar:
          $ref: '#/components/schemas/CP_API_Car'
        manufacturingYear:
          type: integer
          description: Current car manufacture year
          format: int32
        currentKm:
          type: integer
          description: Current car km
          format: int32
        estimatedValue:
          type: number
          description: Current car estimated value
      description: This is a current vehicle object
    CP_API_LeadAction:
      type: object
      properties:
        id:
          type: integer
          description: Action ID
          format: int32
        sources:
          type: array
          description: Source IDs
          items:
            $ref: '#/components/schemas/CP_API_Source'
        actionType:
          type: string
          description: Lead action type
          enum:
            - email_old
            - outlook
            - customer_followup
            - salesman_followup
            - model_info
            - model_test_drive
            - model_offer
            - replacement_car
            - wac
            - rapid_response_accept
            - welcome
            - stale_lead_remainder
            - allocation_invitation
            - followup_call
            - change_salesman
            - decline_lead
            - not_accepted_sm_reminder
            - lead-entry
            - not_accepted_gm_reminder
            - import
            - opportunity
            - offer
        employee:
          $ref: '#/components/schemas/CP_API_Resource'
        vehicle:
          $ref: '#/components/schemas/CP_API_Resource'
        car:
          $ref: '#/components/schemas/CP_API_Car'
        description:
          type: string
          description: Lead action description
      description: This is a lead action object
    CP_API_AddressResource:
      type: object
      properties:
        country:
          type: string
          description: Address country (ISO-2 standard)
          example: CH
        city:
          type: string
          description: Address city
          example: Zurich
        postalCode:
          type: string
          description: Address postal code (ZIP)
          example: '8048'
        street:
          type: string
          description: Address street name
          example: Badernstrasse
        houseNumber:
          type: string
          description: Address house number
          example: '10'
      description: >-
        This is an address object which contains basic address data which
        desired Legal entities can have.
    CP_API_ChannelResource:
      required:
        - checked
        - code
      type: object
      properties:
        code:
          type: string
          description: Channel which is being given/revoked consent to
          example: email
          enum:
            - post
            - email
            - telephone
            - sms
        name:
          type: string
          description: Channel name
          example: Email
        checked:
          type: boolean
          description: Is specific channel being checked?
          example: true
      description: >-
        This is a channel object which contains information which contact
        channel is contact giving consent to.
    CP_API_ConsentFormResource:
      type: object
      properties:
        legalText:
          type: string
          description: Legal entities legal text
          readOnly: true
        dealer:
          $ref: '#/components/schemas/CP_API_ConsentGroupResource'
        brands:
          type: array
          description: Brands legal entity group object list
          items:
            $ref: '#/components/schemas/CP_API_ConsentGroupResource'
      description: >-
        This is an object which contains all consent objects which belong to
        specified consent group.
    CP_API_ConsentGroupResource:
      type: object
      properties:
        id:
          type: integer
          description: Legal entity group id
          format: int32
          example: 100
        name:
          type: string
          description: Legal entity group name
          example: Emil Frey AG
        partnerId:
          type: integer
          description: Legal entity group PP id
          format: int32
          example: 44
        logo:
          type: string
          description: Legal entity logo url
          example: Emil Frey AG
        consents:
          type: array
          description: Legal entity group consents list
          items:
            $ref: '#/components/schemas/CP_API_ConsentResource'
        channelType:
          type: string
          description: Consent group channel type
          readOnly: true
          example: preferred
      description: >-
        This is an object which contains all consent objects which belong to
        specified consent group.
    CP_API_ConsentRequestResource:
      required:
        - consentForm
        - dataSource
        - signatureType
      type: object
      properties:
        consentForm:
          $ref: '#/components/schemas/CP_API_ConsentFormResource'
        signatureType:
          type: string
          description: Signature type
          example: signature
          enum:
            - signature
            - document_scan
            - digital_signature
        signatureNote:
          type: string
          description: Short user description related to consent signature.
          readOnly: true
        dataSource:
          type: string
          description: System name from which this consent request is being sent from
          example: CP
      description: >-
        This is an consent request object containing all consent data for
        specified contact and legal-entity which will be store inside CP.
    CP_API_ConsentResource:
      required:
        - checked
      type: object
      properties:
        legalEntity:
          $ref: '#/components/schemas/CP_API_LegalEntityResource'
        legalText:
          type: string
          description: Legal entities legal text
          readOnly: true
        checked:
          type: boolean
          description: Is specific legal entity given consent to?
          example: true
        status:
          type: string
          description: Consent status
          example: signed
          enum:
            - unsigned
            - signed
            - expired
        validTo:
          type: string
          description: Until when is this consent valid to?
          format: date-time
        channels:
          type: array
          description: List of channels given consent to
          items:
            $ref: '#/components/schemas/CP_API_ChannelResource'
      description: >-
        This is a consent object which contains all data which legal-entity has
        collected data, which channels has contact given rights to, legal text
        data, etc.
    CP_API_LegalEntityResource:
      type: object
      properties:
        id:
          type: integer
          description: Legal entities CP id.
          format: int32
        type:
          type: string
          description: Legal entity type
          example: retail
          enum:
            - retail
            - marketing_service
            - importer
            - eco_system
        name:
          type: string
          description: Legal entity name
          example: Emil Frey AG
        partnerId:
          type: integer
          description: Legal entity PartnerProfile ID
          format: int32
        address:
          $ref: '#/components/schemas/CP_API_AddressResource'
      description: >-
        This is a legal entity object which represents main entity which contact
        is giving specific consent data to.
    CP_API_ContractContact:
      type: object
      properties:
        business:
          type: boolean
        name:
          type: string
          description: Contact full name
        name1:
          type: string
          description: Contact name1
        name2:
          type: string
          description: Contact name2
        isBusiness:
          type: boolean
          description: Is contact business?
        address:
          type: string
          description: Contact address
      description: This is a contract contact
    CP_API_ContractSearch:
      type: object
      properties:
        page:
          $ref: '#/components/schemas/CP_API_Page'
        filter:
          $ref: '#/components/schemas/CP_API_ContractSearchFilter'
      description: This object is used for contracts search
    CP_API_ContractSearchFilter:
      type: object
      properties:
        loanNumber:
          type: string
          description: Loan Number of contract
          readOnly: true
        contractNumber:
          type: string
          description: Contract number from DCMi
          readOnly: true
        commissionNumber:
          type: string
          description: Commission number
          readOnly: true
        vin:
          type: string
          description: VIN number from vehicle from contract
          readOnly: true
        contractDateFrom:
          type: string
          description: Contract creation/start date
          readOnly: true
        contractDateTo:
          type: string
          description: Contract end date
          readOnly: true
        contact:
          $ref: '#/components/schemas/CP_API_Resource'
      description: Object used for contract search
    CP_API_Offer:
      type: object
      properties:
        id:
          type: integer
          description: Resource ID
          format: int32
        sources:
          type: array
          description: Source IDs
          items:
            $ref: '#/components/schemas/CP_API_Source'
        name:
          type: string
          description: Resource name
        leadId:
          type: string
          description: Lead ID in FFU
        dealer:
          $ref: '#/components/schemas/CP_API_Resource'
        employee:
          $ref: '#/components/schemas/CP_API_Resource'
        contact:
          $ref: '#/components/schemas/CP_API_Resource'
        status:
          type: string
          description: Contract/offer status
          enum:
            - offer
            - in_progress
            - signed
            - canceled
            - invoiced
            - sale_canceled
            - purchase
        country:
          type: string
          description: Country where offer/contract was made
        startDate:
          type: string
          description: Contract start date
          format: date
          example: '2016-01-01'
        endDate:
          type: string
          description: Contract end date
          format: date
          example: '2016-01-01'
        validity:
          type: string
          description: Offer/contract validity date
          format: date-time
        number:
          type: string
          description: Offer/contract number
        ammendment:
          type: boolean
          description: Offer/contract ammendment
        hasCashCalculation:
          type: boolean
          description: Offer/contract contains cache calculation
        hasLeasingCalculation:
          type: boolean
          description: Offer/contract contains leasing calculation
        hasLoanCalculation:
          type: boolean
          description: Offer/contract contains loan calculation
        items:
          type: array
          description: List of vehicles offer/contract is for
          readOnly: true
          items:
            $ref: '#/components/schemas/CP_API_VehicleSale'
        tradeIn:
          type: array
          description: List of trade-in vehicles given in offer/contract
          items:
            $ref: '#/components/schemas/CP_API_VehicleTradeIn'
        loan:
          type: array
          description: List of loans used for contract
          items:
            $ref: '#/components/schemas/CP_API_Loan'
        documents:
          type: array
          description: List of documents for offer/contract
          items:
            $ref: '#/components/schemas/CP_API_OfferDocument'
        description:
          type: string
          description: Offer/contract description
        datePurchase:
          type: string
          description: Contract purchase date
          format: date-time
        dateHandover:
          type: string
          description: Contract handover date
          format: date-time
        dateCreated:
          type: string
          description: When offer/contract was created
          format: date-time
        dateModified:
          type: string
          description: When offer/contract was last modified
          format: date-time
        entityDateCreated:
          type: string
          description: When offer/contract entity created in db
          format: date-time
      description: This is a offer/contract object
    CP_API_OfferDocument:
      type: object
      properties:
        id:
          type: integer
          description: Offer/Contract document ID in CP
          format: int32
        contractStatus:
          type: string
          description: Contract/Offer document status for which document is for
          enum:
            - offer
            - in_progress
            - signed
            - canceled
            - invoiced
            - sale_canceled
            - purchase
        name:
          type: string
          description: >-
            Document name, usually UUID for the specific document, used for
            searching
        docUrl:
          type: string
          description: >-
            Document download URL. [Documents are stored in Azure blob storage
            and fetched through CP serving as proxy]
        active:
          type: boolean
          description: Is document active?
        dateCreated:
          type: string
          description: When this document was created/uploaded
          format: date-time
        dateModified:
          type: string
          description: When this document was last modified
          format: date-time
      description: This is a offer/contract document object
    CP_API_VehicleTradeIn:
      type: object
      properties:
        id:
          type: integer
          description: Trade-In ID in CP
          format: int32
        vehicle:
          $ref: '#/components/schemas/CP_API_Vehicle'
        active:
          type: boolean
          description: Is this trade-in still active?
        tradeInPrice:
          type: number
          description: Trade-in vehicle price
      description: This is a vehicle trade-in object
    CP_API_loanInsurance:
      type: object
      properties:
        id:
          type: integer
          description: Loan insurance provider ID in CP
          format: int32
        name:
          type: string
          description: Loan insurance provider name
      description: This is a loan inasurance type object
    CP_API_OfferContractCount:
      type: object
      properties:
        offerCount:
          type: integer
          description: Number of offers
          format: int32
        contractCount:
          type: integer
          description: Number of contracts
          format: int32
        modelCount:
          type: integer
          description: Active models count
          format: int32
        brandImages:
          type: array
          description: Active brands images
          items:
            type: string
      description: >-
        This is a object containing offer and contract count information,
        usually for a specific contact
    CP_API_OfferPageResult:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/CP_API_Offer'
        page:
          type: integer
          description: Current page number
          format: int32
          readOnly: true
        pageSize:
          type: integer
          description: Current page size
          format: int32
          readOnly: true
        totalPages:
          type: integer
          description: Total number of pages
          format: int32
          readOnly: true
        totalItems:
          type: integer
          description: Total number of items
          format: int32
          readOnly: true
      description: Offers page result
    CP_API_Contract360:
      type: object
      properties:
        brand:
          type: string
          description: Car brand name
        brandPicture:
          type: string
          description: Car brand picture (URL fetched from Partner Profile)
        model:
          type: string
          description: Car brand name
        details:
          type: array
          description: >-
            List of object containing specific contract/offer information for
            specific car of brand/model
          items:
            $ref: '#/components/schemas/CP_API_Contract360Detail'
      description: Object containing contracts/offers grouped by car brand/model
    CP_API_Contract360Detail:
      type: object
      properties:
        vin:
          type: string
          description: Vehicle VIN number
        number:
          type: string
          description: Contract/Offer number
        validity:
          type: string
          description: Contract/Offer validity date
          format: date-time
        status:
          type: string
          description: Contract status
        dealer:
          $ref: '#/components/schemas/CP_API_Dealer360'
        offerDocUrl:
          type: string
          description: Offer document URL
        contractDocUrl:
          type: string
          description: Contract document URL
        dateCreated:
          type: string
          description: Contract/Offer created date
          format: date-time
        dateModified:
          type: string
          description: Contract/Offer last modified date
          format: date-time
      description: Contract detail object used in list by car brand/model
    CP_API_Contract360PageResult:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/CP_API_Contract360'
        page:
          type: integer
          description: Current page number
          format: int32
          readOnly: true
        pageSize:
          type: integer
          description: Current page size
          format: int32
          readOnly: true
        totalPages:
          type: integer
          description: Total number of pages
          format: int32
          readOnly: true
        totalItems:
          type: integer
          description: Total number of items
          format: int32
          readOnly: true
      description: Contract 360 page result
    CP_API_Dealer360:
      type: object
      properties:
        ppId:
          type: string
          description: Dealer ID in Partner Profile
        name1:
          type: string
          description: Dealer name1
        name2:
          type: string
          description: Dealer name2
        city:
          type: string
          description: City where dealer is located in
      description: Dealer object with specific info for Contract360Detail object
    CP_API_TestDrive:
      type: object
      properties:
        id:
          type: integer
          description: Resource ID
          format: int32
        sources:
          type: array
          description: Source IDs
          items:
            $ref: '#/components/schemas/CP_API_Source'
        name:
          type: string
          description: Resource name
        leadId:
          type: string
          description: Lead ID in FFU
        actionId:
          type: string
          description: Lead action ID in FFU
        dealer:
          $ref: '#/components/schemas/CP_API_Resource'
        employee:
          $ref: '#/components/schemas/CP_API_Resource'
        contact:
          $ref: '#/components/schemas/CP_API_Resource'
        vehicle:
          $ref: '#/components/schemas/CP_API_Vehicle'
        status:
          type: string
          description: Test drive status
          enum:
            - scheduled
            - in_progress
            - closed
        scheduleDate:
          type: string
          description: Test drive scheduled date
          format: date-time
        startDate:
          type: string
          description: Test drive start date
          format: date-time
        endDate:
          type: string
          description: Test drive end date
          format: date-time
        description:
          type: string
          description: Test drive description
      description: This is a test drive object
    CP_API_TestDrivePageResult:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/CP_API_TestDrive'
        page:
          type: integer
          description: Current page number
          format: int32
          readOnly: true
        pageSize:
          type: integer
          description: Current page size
          format: int32
          readOnly: true
        totalPages:
          type: integer
          description: Total number of pages
          format: int32
          readOnly: true
        totalItems:
          type: integer
          description: Total number of items
          format: int32
          readOnly: true
      description: Test Drive page result
    CP_API_MonitoringObject:
      type: object
      properties:
        name:
          type: string
          description: Monitoring object name
        status:
          type: string
          description: Monitoring object status
        description:
          type: string
          description: Monitoring object description
      description: This is a monitoring object.
    CP_API_MonitoringObjects:
      type: object
      properties:
        monitoringObjects:
          type: array
          description: Monitoring objects list
          items:
            $ref: '#/components/schemas/CP_API_MonitoringObject'
      description: This is a group monitoring objects.
    CP_API_MessageStatusResource:
      type: object
      properties:
        message:
          type: string
        status:
          type: string
    Ownership_API_ConsentRequest:
      type: object
      description: >-
        Consent request is consent form signing request with filled consent form
        data and signature type.
      properties:
        consentForm:
          $ref: '#/components/schemas/Ownership_API_ConsentForm'
        signatureType:
          type: string
          description: Consent form signature type.
          enum:
            - signature
            - document_scan
            - digital_signature
        signatureNote:
          type: string
          description: Short user description related to consent signature.
          example: This signature is taken from iPad device.
        dataSource:
          type: string
          description: System name from which this consent request is being sent from
          example: CP
    Ownership_API_ConsentResponse:
      type: object
      description: >-
        Consent response contains consent form data and consent document in case
        that consent form has been signed.
      properties:
        status:
          type: string
          description: Consents status.
          enum:
            - unsigned
            - signed
            - partially-signed
            - expired
            - partially-expired
        contact:
          $ref: '#/components/schemas/Contact_API_V2'
        form:
          $ref: '#/components/schemas/Ownership_API_ConsentForm'
        document:
          $ref: '#/components/schemas/Ownership_API_ConsentDocument'
    Ownership_API_ConsentForm:
      type: object
      description: >-
        Consents from is list of all consents that contact gives at one
        dealership.
      properties:
        legalText:
          type: string
          description: Consent form legal text.
        dealer:
          $ref: '#/components/schemas/Ownership_API_ConsentSection'
        brands:
          type: array
          items:
            $ref: '#/components/schemas/Ownership_API_ConsentSection'
    Ownership_API_ConsentDocument:
      type: object
      description: Consent document is a PDF version of a signed consent form.
      properties:
        id:
          type: string
          description: Document ID.
        url:
          type: string
          description: Document download URL.
        contentType:
          type: string
          description: Document MIME type.
        contentLength:
          type: integer
          description: Document length in bytes.
        externalReference:
          type: string
          description: Document reference from external storage.
        clientIp:
          type: string
          description: IP address from where document has been signed.
        signatureType:
          type: string
          description: Document signature type.
          enum:
            - signature
            - document_scan
            - digital_signature
        signatureDate:
          type: string
          format: datetime
          description: Document signature date.
    Ownership_API_ConsentSection:
      type: object
      description: >-
        Consent form section. Consents on UI form and document are grouped into
        sections. A section is group of consents for a dealership or a brand.
      properties:
        id:
          type: integer
          format: int32
          description: Dealer or brand ID.
        consents:
          type: array
          description: Consents grouped in this section.
          items:
            $ref: '#/components/schemas/Ownership_API_Consent'
    Ownership_API_Consent:
      type: object
      description: Consent given to legal entity.
      properties:
        legalEntity:
          allOf:
            - $ref: '#/components/schemas/Ownership_API_LegalEntity'
            - description: Legal entity the consent is given to.
        legalText:
          type: string
          description: Consent legal text.
        checked:
          type: boolean
          description: Consent checkbox flag.
        status:
          type: string
          description: Consent status.
          enum:
            - unsigned
            - signed
            - expired
        channels:
          type: array
          description: Consent channels in this section.
          items:
            $ref: '#/components/schemas/Ownership_API_Channel'
        channelType:
          type: string
          description: Consent channel type (preferred or allowed).
          enum:
            - preferred
            - allowed
    Ownership_API_Channel:
      type: object
      description: Consent channel.
      properties:
        code:
          type: string
          description: Channel code.
        checked:
          type: boolean
          description: Channel checkbox flag.
    Ownership_API_LegalEntity:
      type: object
      description: Legal entity the consent is given whom.
      properties:
        id:
          type: integer
          description: Legal entity ID.
        type:
          type: string
          enum:
            - retail
            - importer
            - marketing-service
            - eco-system
          description: Legal entity type.
        name:
          type: string
          description: Legal entity name.
        privacyUrl:
          type: string
          description: Legal entity privacy URL.
        website:
          type: string
          description: Legal entity website.
        address:
          type: object
          description: Leagal entity address.
          properties:
            country:
              type: string
              description: Address country in ISO code.
            city:
              type: string
              description: Address city.
            postalCode:
              type: string
              description: Address postal code.
            street:
              type: string
              description: Address street.
            streetNumber:
              type: string
              description: Address house number.
    Ownership_API_ConsentHistory:
      type: object
      description: >-
        Consent history object containing all consent data when consent was
        given
      properties:
        id:
          type: string
          description: History UUID ID.
        user:
          type: string
          description: Username which has collected consent.
        userSources:
          type: array
          description: Users external sources
          items:
            type: object
            properties:
              id:
                type: string
                description: user external source platform id
              name:
                type: string
                description: user external source platform name
        date:
          type: string
          format: date-time
          description: When consent was collected.
        type:
          type: string
        consentId:
          type: integer
          format: int32
          description: CP Contact ID.
        contactId:
          type: integer
          format: int32
          description: CP Contact ID.
        legalEntityId:
          type: integer
          format: int32
          description: CP Legal-Entity ID.
        snapshot:
          allOf:
           - $ref: '#/components/schemas/Ownership_API_ConsentSnapshot'
           - description: Consent snapshot of all data given in this version.
        actions:
          type: array
          description: List of changes made from last consent version.
          items:
            $ref: '#/components/schemas/Ownership_API_ConsentHistoryAction'
        version:
          type: integer
          format: int32
          description: Consent version.
        latest:
          type: boolean
          description: Is this latest consent contact has given to this legal-entity.
    Ownership_API_ConsentSnapshot:
      type: object
      description: >-
        Represents whole consent object which is stored to History Service and
        used for delta matching.
      properties:
        contact:
          type: object
          description: Basic contact data which has given consent.
          properties:
            id:
              type: string
              description: CP contact ID.
            name1:
              type: string
              description: Contact first name.
            name2:
              type: string
              description: Contact last name.
        dealer:
          type: object
          description: Basic dealership data in which consent was given.
          properties:
            id:
              type: string
              description: CP dealer ID.
            name:
              type: string
              description: Dealership name.
            address:
              type: object
              description: >-
                Todo we need to add address data for dealer or fetch from PP
                again.
        employee:
          type: object
          description: >-
            Basic employee data which has collected consent. If data is empty,
            consent was collected via CM forms.
          properties:
            id:
              type: string
              description: CP employee ID.
            name:
              type: string
              description: Employee first name.
            familyName:
              type: string
              description: Employee last name.
            username:
              type: string
              description: Employee username.
            email:
              type: string
              description: Employee email. We don't have this info in CP.
        dataSource:
          type: string
          description: System/platform name where consent was collected in.
        status:
          type: string
          description: Consent status.
          enum:
            - unsigned
            - signed
            - expired
        signatureType:
          type: string
          description: Consent signature type.
          enum:
            - signature
            - document_scan
            - digital_signature
        signatureNote:
          type: string
          description: Optional signature note written by employee.
        clientIp:
          type: string
          description: IP address from where consent was collected from.
        document:
          type: object
          description: Consent document information.
          properties:
            id:
              type: integer
              format: int32
              description: CP consent document ID.
            url:
              type: string
              description: URL where this consent document can be retrieved from.
            contentLength:
              type: string
              description: Document size in bytes.
            contentType:
              type: string
              description: Document content-type.
            externalReference:
              type: string
              description: External storage reference ID.
        consentEntities:
          type: array
          items:
            $ref: '#/components/schemas/Ownership_API_ConsentSnapshotEntity'
    Ownership_API_ConsentSnapshotEntity:
      type: object
      description: Legal entitey with consent channels.
      properties:
        id:
          type: integer
          format: int32
          description: Legal entity ID.
        name:
          type: string
          description: Legal Entity name.
        type:
          type: string
          description: Legal Entity type.
          enum:
            - retail
            - importer
            - marketing-service
            - eco-system
        brands:
          type: object
          description: Consent entity of specified legal-entity for specific brand.
          properties:
            id:
              type: integer
              format: int32
              description: CP brand ID.
            url:
              type: string
              description: Brand name.
        checked:
          type: boolean
          description: If Legal-Entity was given consent to.
        channels:
          type: array
          description: Consent channels in this section.
          items:
            $ref: '#/components/schemas/Ownership_API_Channel'
    Ownership_API_ConsentHistoryAction:
      type: object
      description: >-
        Each object represent action on property which has changes since last
        version.
      properties:
        type:
          type: string
          description: Action type done on property
          enum:
            - create
            - update
            - delete
        property:
          type: string
          description: Name of property which has changed value.
        entity:
          type: string
          description: Legal entity name on which change was made
        brand:
          type: string
          description: >-
            Additional brand name data for which data was changed on some
            legal-entity
        oldValue:
          type: object
          description: >-
            Old value of property (dynamic value - can be string, int32,
            custom-object, etc.)
        newValue:
          type: object
          description: >-
            New value of property (dynamic value - can be string, int32,
            custom-object, etc.)
    Contact_API_V2:
      type: object
      description: Object containing all Contact entity data.
      properties:
        id:
          type: integer
          format: int32
          description: CP internal contact ID
        name1:
          type: string
          description: Contacts first name.
        name2:
          type: string
          description: Contacts last name.
        type:
          type: string
          description: Contact customer type.
          enum:
            - I
            - C
        status:
          type: string
          description: Contacts status.
        salutation:
          type: string
          description: Contacts salutation.
          enum:
            - mr
            - mrs
            - ms
            - company
            - unknown
        ef:
          type: boolean
          description: Does this contact belong to Emil Frey group.
        business:
          type: boolean
          description: >-
            Object containing company contacts business information. Object
            should be only provided on contacts which are company
            (isBusiness:true). If contact is marked as private, this object is
            simply ignored.
          allOf:
            - $ref: '#/components/schemas/Ownership_API_Business'
        email:
          type: string
          description: Contacts email address.
        telephone:
          type: string
          description: Contacts telephone number.
        mobile:
          type: string
          description: Contacts mobile phone number.
        primaryLanguage:
          type: string
          description: Contacts primary language (ISO-code format).
        address:
          $ref: '#/components/schemas/Ownership_API_AddressExtended'
        personal:
          allOf:
           - description: >-
              Object containing private contacts personal information. Object
              should be only provided on contacts which are private
              (isBusiness:false). If contact is marked as business, this object is
              simply ignored.
           - $ref: '#/components/schemas/Ownership_API_Personal'
        additionalAddresses:
          type: array
          description: >-
            List of additional contact addresses which are treated as
            non-primary.
          items:
            $ref: '#/components/schemas/Ownership_API_Address'
        additionalPoBoxes:
          type: array
          description: List of additional contact Postal Box addresses.
          items:
            $ref: '#/components/schemas/Ownership_API_PoBox'
        additionalTelephones:
          type: array
          description: List of additional contact telephones.
          items:
            $ref: '#/components/schemas/Ownership_API_TelephoneExtended'
        additionalEmails:
          type: array
          description: List of additional contacts email addresses.
          items:
            type: string
            example: john.doe@emilfrey.ch
        additionalLanguages:
          type: array
          description: List of additional contacts spoken languages.
          items:
            type: string
            example: EN
        jobs:
          type: array
          description: >-
            List of contacts jobs. List of available values /v1/jobs. If you
            wish to delete all contact jobs, you should simply send empty array
            in request body.
          items:
            type: string
            example: pilot
        interests:
          type: array
          description: >-
            List of contacts interests. List of available values
            /v1/interests.If you wish to delete all contact interests, you
            should simply send empty array in request body.
          items:
            type: string
            example: pilot
        preferredContactTime:
          type: string
          description: What is the preferred time this contact wants to be contacted at.
          enum:
            - morning
            - at_noon
            - afternoon
            - in_the_evening
            - unknown
          example: morning
        preferredContactMethod:
          type: string
          description: What is the preferred method this contact wants to be contacted by.
          enum:
            - phone
            - mobile
            - email
            - post
            - messenger
            - social_network
            - any
            - unknown
          example: mobile
        transferNumber:
          type: integer
          description: >-
            Value should represent customerId of the contact to which this
            contact will be transferred to. It's meant to indicate this contact
            is confirmed duplicated and this is way we're linking it original
            contact. If value is passed pointing to other contacts customerId,
            status of this contact will automatically be set as 'converted' and
            cannot be changed again. If this value is NULL, 0, or completely
            omitted, then no contact transfer will be performed.
          example: 675529
        employeeNumber:
          type: string
          description: >-
            This represents username of EF employee, if he is also registered as
            contact(customer) inside Customer Profile. It can be used to link
            specific contact and it's data to existing EF employee.
          maximum: 20
          example: CHED042
        additional:
          $ref: '#/components/schemas/Ownership_API_Additional'
        createdBy:
          $ref: '#/components/schemas/Ownership_API_ActionGroup'
        modifiedBy:
          $ref: '#/components/schemas/Ownership_API_ActionGroup'
        confirmedValid:
          type: boolean
          description: >-
            The confirmedValid field indicates the contact's uniqueness status.
            If true, the contact is unique. If false, it is flagged as a
            confirmed duplicate.
          example: true
        socialMedia:
          type: array
          description: >-
            List of social media that is mostly used for saving contact website
            data.
          items:
            $ref: '#/components/schemas/Ownership_API_SocialMedia'
      allOf:
        - $ref: '#/components/schemas/Contact_API_V2Basic'
    Contact_API_V2Address:
      type: object
      description: Contacts address data object
      properties:
        addressType:
          type: string
          description: Address type.
          enum:
            - home
            - invoice
            - delivery
            - comercial_register
            - unknown
        country:
          type: string
          description: Country ISO code.
        city:
          type: string
          description: City name.
        zip:
          type: string
          description: Address postal code.
        street:
          type: string
          description: Street name.
        streetNumber:
          type: string
          description: Address house number.
    Contact_API_V2Search:
      type: object
      description: >
        Object which contains all filters that client can use to search for
        desired record.
      properties:
        text:
          type: string
          description: >
            Google-like text search input which searches for contacts based on a
            different criteria, such as name1, name2, address, email, telephone,
            id, etc.
          minimum: 0
          maximum: 100
          example: Markus Muller
        filter:
          allOf:
            - $ref: '#/components/schemas/Contact_API_V2SearchFilter'
            - description: Object containing contact search filters.
        page:
          allOf:
            - $ref: '#/components/schemas/Ownership_API_Page'
            - description: Objects containing paging/sort filters.
    Contact_API_V2SearchFilter:
      type: object
      description: >
        Object containing list of contact attributes which can be used to filter
        different contact data sets.
      properties:
        type:
          type: array
          description: List of contact types to filter by.
          items:
            type: string
            example: I
        status:
          type: array
          description: List of contact statuses to filter by.
          items:
            type: string
            example: active
        isBusiness:
          type: boolean
          description: >
            If returned contacts will be private or business contacts. Default
            returns all.
          nullable: true
        id:
          type: integer
          format: int32
          description: Filter by contacts internal ID in Customer Profile.
          example: 1337
        customerId:
          type: string
          description: Filter by customer-id of contact.
          example: '144932'
        name1:
          type: string
          description: Filter by first name of contact.
          minimum: 0
          maximum: 128
          example: Markus
        name2:
          type: string
          description: Filter by last name of contact.
          minimum: 0
          maximum: 128
          example: Muller
        additionalName:
          type: string
          description: Filter by additional name of contact.
          minimum: 0
          maximum: 128
          example: Davidson
        email:
          type: string
          description: Filter by contacts email address.
          minimum: 0
          maximum: 128
          example: markus.muller@emilfrey.ch
        telephone:
          type: string
          description: Filter by contacts telephone number.
          minimum: 0
          maximum: 128
          example: +49123456789
        address:
          $ref: '#/components/schemas/Ownership_API_AddressSearchFilter'
        sources:
          type: array
          description: Filter by desired external system data.
          items:
            $ref: '#/components/schemas/Ownership_API_Source'
        created:
          type: object
          properties:
            from:
              type: string
              format: date
              description: Filter to return contacts created from specified date.
              example: '1992-05-22'
            to:
              type: string
              format: date
              description: Filter to return contacts created to specified date.
              example: '1999-06-10'
            employee:
              $ref: '#/components/schemas/Ownership_API_Resource'
        modified:
          type: object
          properties:
            from:
              type: string
              format: date
              description: Filter to return contacts modified from specified date.
              example: '1992-05-22'
            to:
              type: string
              format: date
              description: Filter to return contacts modified to specified date.
              example: '1999-06-10'
            employee:
              $ref: '#/components/schemas/Ownership_API_Resource'
        tags:
          type: array
          description: List of contact tags to filter by.
          items:
            type: string
            example: kkp_disabled
        creditLock:
          type: boolean
          description: If returned contacts have a credit lock. Default returns all.
          nullable: true
        valid:
          type: boolean
          description: >
            If returned contacts are marked as valid (not-duplicate). Default
            returns all.
          nullable: true
        advanced:
          type: object
          description: Object containing more specific and advanced search options.
          properties:
            customerGroup:
              type: array
              items:
                $ref: '#/components/schemas/Ownership_API_CustomerGroup'
            businessGroup:
              type: array
              description: List of contact business groups to filter by.
              items:
                type: string
                example: active
            classification:
              type: string
              description: Filter by business classification of contact.
              example: B
            externalSource:
              type: object
              description: >
                Filter to search specific contacts which also might exist in
                external system.
              properties:
                existIn:
                  type: array
                  description: >
                    List of external systems to filter by, where contact is
                    recorded.
                  items:
                    type: string
                    example: active
                notExistIn:
                  type: array
                  description: >
                    List of external systems to filter by, where contact is not
                    recorded.
                  items:
                    type: string
                    example: inactive
                active:
                  type: boolean
                  description: >
                    If returned contacts are marked as active/inactive in
                    external system. Default returns all.
                  nullable: true
            searchMode:
              type: string
              description: >
                Define how search mode on full-text input is treating search
                terms. Two options are provided. ALL mode ensures that input
                terms match all searchable fields (For example term 'Markus
                Muller' will search only for records that contain both of these
                terms in searchable fields). ANY mode will search for any records
                that match input search term by any searchable fields but will
                prioritize results with higher match (For example 'Markus
                Muller' will return all Markuses and all Mullers, and all
                persons with last name Markus and Muller, and with street like
                this, etc. but will prioritize Markus Muller result higher in
                the list as it has search term match). Default value is ALL.
              enum:
                - ALL
                - ANY
            searchFields:
              type: array
              description: List of attributes that client wants to search records by.
              items:
                type: string
                enum:
                  - name1
                  - name2
                  - additionalName
                  - email
                  - telephone
                  - city
                  - zip
                  - street
                  - streetNumber
                  - vatNumber
                  - eutVatNumber
                  - identificationNumber
                  - customerId
                  - interestId
            ownerId:
              type: integer
              description: >
                Filter contacts by a dealer who is their owner. Partner Profile
                ID is needed as value.
              example: 2406
    Ownership_API_AddressSearchFilter:
      type: object
      description: Object containing filters to search by contacts primary address.
      properties:
        country:
          type: string
          description: Filter by country (ISO 3166-1 alpha-2).
          maximum: 2
          example: CH
        city:
          type: string
          description: Filter by city.
          maximum: 100
          example: Bern
        zip:
          type: string
          description: Filter by specific zip-code.
          maximum: 20
          example: 40011
        zipFrom:
          type: string
          description: Filter from specific zip code. Works only for numeric zip codes.
          maximum: 20
          example: 31000
        zipTo:
          type: string
          description: Filter to specific zip code. Works only for numeric zip codes.
          maximum: 20
          example: 42000
        street:
          type: string
          description: Filter by street name.
          maximum: 256
          example: Sunnenbergstrasse
        houseNumber:
          type: string
          description: Filter by house number.
          maximum: 40
          example: 24A
        valid:
          type: boolean
          description: >-
            If returned contacts have valid primary address. Default returns
            all.
          nullable: true
    Contact_API_V2Minimal:
      type: object
      description: Contact object containing minimal but all-round important information.
      required:
        - name1
      properties:
        id:
          type: integer
          format: int32
          description: Contacts internal ID in Customer Profile.
          readOnly: true
        name1:
          type: string
          description: First name of private or business contact.
          minimum: 3
          maximum: 128
          example: Markus
        name2:
          type: string
          description: Last name of private contact or additional business name.
          minimum: 3
          maximum: 128
          example: Muller
        type:
          type: string
          description: >
            Contact type in accounting/transactional flow. List available on
            /v1/contact-type
          enum:
            - I
            - C
            - F
            - W
            - H
            - G
          default: I
          example: C
        isBusiness:
          type: boolean
          description: Determines if this contact is private or business(company) type.
          default: false
          example: false
        salutation:
          type: string
          description: >
            Contacts official salutation. If contact is 'business' then only
            'company' or 'self_employed' should be used. List available at
            /v1/contact-salutation This APi also returns grouping information
            which salutation belongs to which contact type (business/private).
          enum:
            - mr
            - mrs
            - ms
            - company
            - self_employed
            - unknown
          default: unknown
          example: mr
        address:
          allOf:
            - $ref: '#/components/schemas/Ownership_API_Address'
            - description: Object containing contacts primary address information.
        email:
          type: string
          description: Contact primary email address.
          maximum: 255
          example: markus.muller@emilfrey.ch
        telephone:
          allOf:
            - $ref: '#/components/schemas/Ownership_API_TelephoneExtended'
            - description: Contacts primary telephone number.
        mobile:
          allOf:
            - $ref: '#/components/schemas/Ownership_API_TelephoneExtended'
            - description: Contacts primary mobile phone number.
    Contact_API_V2Basic:
      allOf:
        - $ref: '#/components/schemas/Contact_API_V2Minimal'
        - type: object
          properties:
            sources:
              type: array
              items:
                $ref: '#/components/schemas/Ownership_API_Source'
            additionalName:
              type: string
              description: >
                Additional contact name (used for adding optional private contact
                names of company contact).
              maximum: 200
              example: Augustin Bard
            status:
              type: string
              description: Contact status in INSiDE system.
              enum:
                - active
                - inactive
                - converted
                - not_editable
                - locked
                - deceased
              example: active
            fax:
              allOf:
                - $ref: '#/components/schemas/Ownership_API_TelephoneExtended'
                - description: Contacts primary fax number.
            language:
              type: string
              description: Contacts primary language code (ISO 639).
              maximum: 2
              example: DE
            interestId:
              type: string
              description: >
                Represents master contact-ID in a country. If Customer Profile is
                master contact system in a country this value will be generated by
                CP and assigned only to contacts which are type Interest. If CP is
                not master contact system in a country, then this property is filled
                by master systems internal contact ID but only if contact is
                Interest type.
              readOnly: true
              maximum: 50
              example: I2333583
            customerId:
              type: string
              description: >
                Also represents master contact-ID in a country but is assigned to
                any contact which is a real Customer type (C, F, W, H, G). As with
                interestId, this value is generated by CP and assigned to contact if
                CP is master contact system in a country. If it's not then it is
                filled by master system internal contact ID but only if contact is
                NOT of Interest type. This value is also filled in the contact gets
                converted from Interest type to Customer.
              readOnly: true
              maximum: 50
              example: 748851
            valid:
              type: boolean
              description: >
                Property is used internally, when contact is being created, it goes
                through automatic duplicate detection process (if available) which
                will mark this contact as potential duplicate based on certain
                criteria. If value is 'true', it means that internal process was not
                able to find potential duplicate of this contact.
              nullable: true
              readOnly: true
            dateCreated:
              type: string
              format: date-time
              description: When was this entity created in Customer Profile.
              readOnly: true
              example: '2022-09-29T08:09:14'
            dateModified:
              type: string
              format: date-time
              description: When was this entity last modified in Customer Profile.
              readOnly: true
              example: '2023-02-29T10:22:32'
            owner:
              allOf:
                - $ref: '#/components/schemas/Ownership_API_DealerResource'
                - description: >
                    Dealer which is actual owner of this contact. In most cases
                    represents dealership which created this contact. This data is only
                    available to certain user roles.
            dataSource:
              type: string
              description: Name of external system which created/updated this entity data.
              readOnly: true
              example: EFIT
    Contact_API_V2Duplicate:
      type: object
      description: >-
        Contact object containing data set which was used for potential
        duplicate internal check and for merging of contact process.
      allOf:
        - $ref: '#/components/schemas/Contact_API_V2Basic'
      properties:
        personal:
          type: object
          properties:
            dateOfBirth:
              type: string
              format: date
              description: Contacts date of birth.
              example: '1992-05-22'
        additionalTelephones:
          type: array
          description: List of additional contact telephones.
          items:
            $ref: '#/components/schemas/Ownership_API_TelephoneExtended'
        usage:
          type: array
          description: List of contact usages in external systems.
          items:
            $ref: '#/components/schemas/Contact_API_V2Usage'
        masterDuplicate:
          type: boolean
          description: >-
            Property is used internally, when contact is being validated, it
            goes through automatic duplicate detection process (if available)
            which will mark this contact as a potential master based on certain
            criteria. If value is 'true', it means that this contact is marked
            as potential master duplicate. In the suggestion list there will be
            no or only one contact duplicate with this flag set to true.
          nullable: true
          readOnly: true
    Ownership_API_Address:
      type: object
      description: Object containing contacts basic address information.
      properties:
        type:
          type: string
          description: >-
            Address type which describes this address object relation to
            contact.
          enum:
            - home
            - delivery
            - invoice
            - commercial_register
            - unknown
          default: unknown
          example: home
        country:
          type: string
          description: >-
            Address country code (ISO 3166-1 alpha-2). If no value is provided,
            default value is set based on environment.
          minimum: 2
          maximum: 2
          example: CH
        region:
          type: string
          description: >-
            Address region code (ISO 3166-1 alpha-2). If no value is provided,
            UNK is set as default (UNKNOWN).
          minimum: 20
          maximum: 20
          example: LU
        city:
          type: string
          description: Address city name.
          maximum: 100
          example: Bern
        zip:
          type: string
          description: Address postal code (ZIP).
          maximum: 20
          example: 40011
        street:
          type: string
          description: Address street name.
          maximum: 256
          example: Sunnenbergstrasse
        houseNumber:
          type: string
          description: Address house number.
          maximum: 40
          example: 24A
    Ownership_API_AddressExtended:
      type: object
      allOf:
        - $ref: '#/components/schemas/Ownership_API_Address'
      description: Object containing contacts extended address information.
      properties:
        valid:
          type: boolean
          description: >-
            Marks the address as valid if it has passed internal validation
            process (If exists on environment) check and is treated as valid and
            existing address.
          nullable: true
          readOnly: true
        status:
          type: string
          description: >-
            External validation status of related contact and this address. (If
            exists on environment)
          enum:
            - verified_person
            - verified_household
            - verified_company
            - moved_new_address
            - moved_unknown
            - moved_abroad
            - deceased
            - out_of_business
            - resident_unknown
            - unknown_address
            - address_to_be_verified
          example: verified_person
        validationDate:
          type: string
          format: date-time
          description: >-
            Last validation date of related contact and this address. (If exists
            on environment)
        modifiedBy:
          $ref: '#/components/schemas/Ownership_API_ActionGroup'
        poBox:
          $ref: '#/components/schemas/Ownership_API_PoBox'
    Ownership_API_PoBox:
      type: object
      description: Object containing contacts Postal Box information.
      properties:
        addressType:
          type: string
          description: Address type which describes this Postal Box object relation to.
          enum:
            - home
            - delivery
            - invoice
            - commercial_register
            - unknown
          default: unknown
          example: home
        country:
          type: string
          description: >-
            Postal Box address country code (ISO 3166-1 alpha-2). If no value is
            provided, default value is set based on environment.
          minimum: 2
          maximum: 2
          example: CH
        city:
          type: string
          description: Postal Box address city name.
          maximum: 100
          example: Zurich
        zip:
          type: string
          description: Postal Box address postal code (ZIP).
          maximum: 20
          example: 8005
        poBox:
          type: string
          description: Postal Box value.
          maximum: 20
          example: 228T
    Ownership_API_Telephone:
      type: object
      description: Object containing basic telephone information.
      required:
        - number
      properties:
        number:
          type: string
          description: Telephone number.
          maximum: 100
          example: '+41764039994'
        country:
          type: string
          description: Telephones numbers country origin (ISO 3166-1 alpha-2).
          minimum: 2
          maximum: 2
          example: CH
    Ownership_API_TelephoneExtended:
      type: object
      allOf:
        - $ref: '#/components/schemas/Ownership_API_Telephone'
      description: Object containing contacts additional extended telephone data.
      properties:
        type:
          type: string
          description: Type of telephone.
          enum:
            - landline
            - mobile
            - fax
            - unknown
        usage:
          type: string
          description: Usage of telephone.
          enum:
            - private
            - business
            - unknown
        formattedNumber:
          type: string
          description: Telephone number formatted in international format.
          maximum: 100
          example: +41 76 403 99 94
    Ownership_API_Personal:
      type: object
      description: >-
        Object which contains all additional data for private/personal contacts.
        Mandatory if contact is isBusiness=false.
      properties:
        gender:
          type: string
          description: Gender of contact.
          enum:
            - male
            - female
            - other
            - unknown
          default: unknown
          example: male
        title:
          type: string
          description: >-
            Professional title of contact. List available at
            /v1/profession-titles
          enum:
            - prof
            - dr
            - prof_dr
            - dipl_ing
            - architect
            - lawyer
            - mba
            - reverend
            - unknown
          default: unknown
          example: dr
        dateOfBirth:
          type: string
          format: date
          description: Contacts date of birth.
          example: '1992-05-22'
        maritalStatus:
          type: string
          description: Marital status of contact.
          enum:
            - married
            - single
            - divorced
            - widowed
            - partnership
            - not_specified
            - unknown
          default: unknown
          example: single
        noOfChildren:
          type: integer
          description: How many children does the contact have.
          nullable: true
          example: 1
    Ownership_API_Business:
      type: object
      description: >-
        Object which contains all additional data for business/company contacts.
        Mandatory for such contact types.
      properties:
        companyRegistrationNumber:
          type: string
          description: Number under which company is registered (not VAT).
          maximum: 50
          example: 122/5084/0125
        parkingSize:
          type: integer
          description: Number of parking spaces company has.
          example: 10
        businessGroup:
          type: string
          description: >-
            To which business group does the company belong. List of available
            values /v1/contact-business-group (only DE environment)
          example: CarHolding d.o.o
        fleetManagementCompany:
          type: string
          description: Which company is providing fleet. (only DE environment)
          maximum: 255
          example: CarHolding d.o.o
        classification:
          type: string
          description: >-
            Company classification code. It defines the potential of customers.
            (only DE environment)
          enum:
            - A
            - B
            - C
          example: B
        sale:
          type: boolean
          description: >-
            If company is fleet, is it registered for selling? (only DE
            environment)
          nullable: true
        purchase:
          type: boolean
          description: >-
            If company is fleet, is it registered for purchasing? (only DE
            environment)
          nullable: true
        businessCategory:
          type: string
          description: >-
            If company is fleet, which category of business is it? List of
            available values /v1/contact-business-category (only DE environment)
          example: Trade International.
        loanCompanies:
          type: array
          description: >-
            List of loan companies this business contact is working with. (only
            DE environment)
          items:
            type: string
            description: List of available values /v1/contact-loan-company
            example:
              - Money-Loan
              - Mercedes Leasing
        generalAgreementNumbers:
          type: array
          description: >-
            Used only for business contacts. Value represents a contract number
            between company (contact) and supplier on which they agreed to use
            their services and get other benefits.
          items:
            type: string
            maximum: 50
            example: 994431
    Ownership_API_Additional:
      type: object
      description: >-
        Object containing optional additional financial, transactional or other
        type of contact data.
      properties:
        creditLock:
          type: boolean
          description: Is contact credit locked?
          nullable: true
          example: false
        identificationNumber:
          type: integer
          description: Represents contacts identification number in a country.
          maximum: 100
          example: 9337566223
        vatNumber:
          type: string
          description: >-
            General VAT number of company. Value should be used for country
            specific VAT format.
          maximum: 50
          example: '30847737'
        vatCountry:
          type: string
          description: country code (ISO 3166-1 alpha-2).
          minimum: 2
          maximum: 2
          example: SK
        euVatNumber:
          type: string
          description: EU standard VAT number of company.
          maximum: 50
          example: SK30847737
        blockingIndicator:
          type: string
          description: Represents blocking indicator status based on creditLock and status.
          enum:
            - N [not locked]
            - J [locked]
            - B [blocked]
          example: 'N'
        lastBillDate:
          type: string
          description: When is the last time this contact made transaction in Emil Frey.
          format: date
          example: '2022-05-11'
        customerGroup:
          $ref: '#/components/schemas/Ownership_API_CustomerGroup'
        carVin:
          type: string
          description: Manual input of contact vehicle VIN. (Only SI environment)
          maximum: 17
          example: JKAZR900PPA003487
        noEmail:
          type: boolean
          description: >-
            Did this customer confirm that he doesn't have email or is not
            willing to give his email information.
          nullable: true
          example: false
        boughtNewEfVehicle:
          type: boolean
          description: Is contact credit locked?
          nullable: true
          readOnly: true
          example: true
        boughtUsedEfVehicle:
          type: boolean
          description: Is contact credit locked?
          nullable: true
          readOnly: true
          example: false
    Ownership_API_CustomerGroup:
      type: object
      description: >-
        Customer group information based on the customer type and status. List
        of available values /v1/contact-customer-group (only CH environment)
      properties:
        group:
          type: string
          example: 1201
        feature:
          type: string
          example: 1200
        tax:
          type: string
          example: 12
    Ownership_API_ActionGroup:
      type: object
      description: >
        Object containing data for tracking creation/modification of certain
        entity dataset.
      readOnly: true
      properties:
        employee:
          allOf:
            - $ref: '#/components/schemas/Ownership_API_Resource'
            - description: Basic data of last user which created/modified this entity data.
            - readOnly: true
        dealer:
          allOf:
            - $ref: '#/components/schemas/Ownership_API_Resource'
            - description: Basic data of last user's dealer which created/modified this entity data.
            - readOnly: true
    Ownership_API_DealerResource:
      allOf:
        - $ref: '#/components/schemas/Ownership_API_Resource'
      type: object
      description: Basic dataset of dealership data.
      properties:
        ef:
          type: boolean
          description: Is this dealership part of Emil Frey group?
          example: true
    Ownership_API_VehiclePreference:
      allOf:
        - $ref: '#/components/schemas/Ownership_API_Resource'
      type: object
      description: >-
        Vehicle preference object. Each vehicle preference belongs to a specific
        category. If Vehicle Preference object contains list of 'sources', it
        indicates that specific preference category can also be matched by
        external system data. For example 'favorite_brand' category can have
        preference 'Jaguar' which can also be matched by external source name
        'Partner_Profile_CH' and id '6'
      properties:
        category:
          type: string
          description: Name of category to which this vehicle preference belongs.
          example: body_type
    Ownership_API_SalesEntity:
      allOf:
        - $ref: '#/components/schemas/Ownership_API_Resource'
      type: object
      readOnly: true
      description: Represents basic dataset of dealer or employee.
      properties:
        name1:
          type: string
          description: Sales entity first name.
          readOnly: true
        name2:
          type: string
          description: Sales entity last/additional name.
          readOnly: true
        picture:
          type: string
          description: Picture URL.
          readOnly: true
        role:
          type: string
          description: Sales entity role.
          readOnly: true
        telephone:
          type: string
          description: Telephone number.
          readOnly: true
        email:
          type: string
          description: Email address.
          readOnly: true
        status:
          type: string
          description: Status of entity in master system.
          readOnly: true
          enum:
            - active
            - inactive
            - not_found
    Ownership_API_DealerHistory:
      type: object
      description: >
        Object containing dealer/employee information which have been working
        with contacts.
      properties:
        dealer:
          allOf:
            - $ref: '#/components/schemas/Ownership_API_SalesEntity'
            - description: Dealership where contact was in.
            - readOnly: true
        salesPerson:
          allOf:
            - $ref: '#/components/schemas/Ownership_API_SalesEntity'
            - description: Sales person within dealer with which contact was in touch with.
            - readOnly: true
        salesAdvisor:
          allOf:
            - $ref: '#/components/schemas/Ownership_API_SalesEntity'
            - description: Sales advisor within dealer with which contact was in touch with.
            - readOnly: true
        salesConsultant:
          allOf:
            - $ref: '#/components/schemas/Ownership_API_SalesEntity'
            - description: Sales consultant within dealer with which contact was in touch with.
            - readOnly: true
    Ownership_API_Note:
      type: object
      description: Note data set which will be assigned to contact.
      properties:
        id:
          type: integer
          description: Internal contact-note ID.
          readOnly: true
          example: 18
        note:
          type: string
          description: Free form input of a note for specified contact.
          minimum: 0
          maximum: 2048
          example: Please contact him after test-drive.
        type:
          type: string
          description: >-
            Which type of contact note is this. Is note created from internal or
            external system?
          enum:
            - EMPLOYEE_INPUT
            - CPT_CONTACT_DELETION
        private:
          type: boolean
          description: Should this note be visible to all users or only owner of note?
          nullable: true
        dateCreated:
          type: string
          format: date-time
          description: When was this entity created in Customer Profile.
          readOnly: true
          example: '2022-09-29T08:09:14'
        dateModified:
          type: string
          format: date-time
          description: When was this entity last modified in Customer Profile.
          readOnly: true
          example: '2023-02-29T10:22:32'
        createdByEmployee:
          $ref: '#/components/schemas/Ownership_API_SalesEntity'
        modifiedByEmployee:
          $ref: '#/components/schemas/Ownership_API_SalesEntity'
    Contact_API_V2Usage:
      type: object
      required:
        - sourceName
        - sourceId
        - active
      description: Object containing data about contacts external system activity/usage.
      properties:
        parent:
          description: >-
            If multiple "child" entities are represented by single parent
            system.
          readOnly: true
          type: object
          allOf:
           - $ref: '#/components/schemas/Contact_API_V2Usage'
        sourceName:
          type: string
          description: Contacts external system name.
          example: Hertz
        sourceId:
          type: string
          description: Contacts external system ID.
          example: 78332
        customerId:
          type: string
          description: Contacts customer-id value.
          example: 827710
        active:
          type: boolean
          description: If contact is still active in this system.
          example: true
        lastTransactionDate:
          type: string
          format: date
          description: Date when this system has last interacted with this contact.
          example: '2023-09-23'
    Ownership_API_SocialMedia:
      type: object
      description: Object containing social media information.
      properties:
        type:
          type: string
          description: >-
            Social media type which describes this social media object relation
            to contact. It will mostly be website.
          enum:
            - website
            - facebook
            - youtube
            - instagram
            - twitter
            - snapchat
            - google_plus
          default: website
          example: home
        url:
          type: string
          description: Url address of the social media.
          minimum: 1028
          maximum: 1028
          example: https://www.auto-haus-safenwil.ch/
        description:
          type: string
          description: Description of the social media.
          minimum: 1028
          maximum: 1028
          example: This is the website of Auto Haus Safenwil
    Contact_API_V2TypeResource:
      type: object
      description: Object containing information about a contact type.
      properties:
        name:
          type: string
          description: The name of the contact type.
          example: customer
        code:
          type: string
          description: Unique code identifying the contact type.
          example: C
      required:
        - name
        - code
    Contact_API_V2ContactStatusResource:
      type: object
      description: Object containing information about the status of a contact.
      properties:
        name:
          type: string
          description: The name of the contact status.
          example: active
      required:
        - name
    Ownership_API_Ownership:
      type: object
      description: Contact vehicle ownership.
      properties:
        id:
          type: integer
          format: int32
          description: Ownership ID in Customer Profile.
          readOnly: true
        owner:
          $ref: '#/components/schemas/Ownership_API_OwnershipContact'
        vehicle:
          $ref: '#/components/schemas/Ownership_API_OwnershipVehicle'
        status:
          type: string
          description: Ownership status.
          enum:
            - PENDING
            - ACTIVE
            - INACTIVE
            - OWNER_CHANGED
            - REMOVED
        registrationPlate:
          type: string
          description: Vehicles current registration plate.
        startMileage:
          type: integer
          description: Vehicles mileage value when creating ownership (in km).
          example: 12388
        currentMileage:
          type: integer
          description: Vehicles current mileage (in km).
          example: 32011
        startDate:
          type: string
          description: When has this ownership started.
          format: date-time
          example: '2022-02-29T10:22:32'
        endDate:
          type: string
          description: When has this ownership ended.
          format: date-time
          example: '2023-02-29T10:22:32'
        isFirstOwner:
          type: boolean
          description: Is this contact first owner of a vehicle?
          nullable: true
        isCurrentOwner:
          type: boolean
          description: Is this contact current owner of a vehicle?
          nullable: true
          readOnly: true
        createdAt:
          type: string
          description: Date when ownership is created.
          format: date-time
          example: '2021-02-25T10:22:32'
        createdBy:
          $ref: '#/components/schemas/Ownership_API_ActionGroup'
        removedAt:
          type: string
          description: Date when ownership is removed.
          format: date-time
          example: '2021-02-25T10:22:32'
        removedBy:
          $ref: '#/components/schemas/Ownership_API_ActionGroup'
        removeReason:
          type: string
          description: Reason why ownership is being removed.
          minimum: 0
          maximum: 1024
          example: Accidentally created this ownership.
        dateCreated:
          type: string
          description: Timestamp of ownership creation in Customer Profile.
          format: date-time
          readOnly: true
        dateModified:
          type: string
          description: Timestamp of ownership modification in Customer Profile.
          format: date-time
          readOnly: true
    Ownership_API_OwnershipContact:
      type: object
      properties:
        id:
          type: number
          format: int32
          description: Customer Profile contact ID.
        name1:
          type: string
          description: Customer first name.
          readOnly: true
        name2:
          type: string
          description: Customer last name.
          readOnly: true
        fullName:
          type: string
          description: Customer full name.
          readOnly: true
        type:
          type: string
          description: Customer type.
          readOnly: true
        address:
          $ref: '#/components/schemas/Ownership_API_OwnershipAddress'
    Ownership_API_OwnershipAddress:
      type: object
      readOnly: true
      properties:
        country:
          type: string
          description: Address country ISO code.
          readOnly: true
        postalCode:
          type: string
          description: Address postal code.
          readOnly: true
        city:
          type: string
          description: Address city.
          readOnly: true
        street:
          type: string
          description: Address street.
          readOnly: true
        houseNumber:
          type: string
          description: Address house number.
          readOnly: true
    Ownership_API_OwnershipVehicle:
      type: object
      properties:
        vin:
          type: string
          description: Vehicle Identification Number.
          minimum: 17
          maximum: 17
          example: WBA7B01040G713141
        retail:
          $ref: '#/components/schemas/Ownership_API_OwnershipVehicleDetails'
        wholesale:
          $ref: '#/components/schemas/Ownership_API_OwnershipVehicleDetails'
    Ownership_API_OwnershipVehicleDetails:
      type: object
      properties:
        commissionNumber:
          type: string
          description: Vehicle commission number.
        homologationNumber:
          type: string
          description: Vehicle homologation number.
        productYear:
          type: string
          description: Vehicle production year.
        productMonth:
          type: string
          description: Vehicle production month.
        model:
          $ref: '#/components/schemas/Ownership_API_OwnershipVehicleModel'
    Ownership_API_OwnershipVehicleModel:
      type: object
      properties:
        code:
          type: string
          description: Vehicle model code.
        name:
          type: string
          description: Vehicle model name.
        factoryCode:
          type: string
          description: Vehicle model factory code.
        brand:
          $ref: '#/components/schemas/Ownership_API_OwnershipVehicleBrand'
    Ownership_API_OwnershipVehicleBrand:
      type: object
      properties:
        code:
          type: string
          description: Vehicle brand code.
        name:
          type: string
          description: Vehicle brand name.
    Ownership_API_OwnershipDriver:
      type: object
      properties:
        id:
          type: number
          format: int32
          description: Onwership internal ID in Customer Profile.
          readOnly: true
        contact:
          $ref: '#/components/schemas/Ownership_API_OwnershipContact'
        status:
          type: string
          description: Status of driver for this ownership.
          enum:
            - active
            - pending
            - inactive
            - declined
            - expired
            - deleted
        createdByDataSource:
          type: string
          description: Name of external system which created this entity data.
          example: CPT
        modifiedByDataSource:
          type: string
          description: Name of external system which updated this entity data.
          example: CP
        dateCreated:
          type: string
          description: When is this ownership driver entity creatred.
          format: date-time
          readOnly: true
        dateModified:
          type: string
          description: When was this ownership driver entity last modified.
          format: date-time
          readOnly: true
    Ownership_API_Source:
      type: object
      description: Object containing external system name and external object ID.
      properties:
        name:
          type: string
          description: External system name.
          example: FFU
        id:
          type: string
          description: External system object primary key.
          maximum: 50
          example: 9988-13
    Ownership_API_Resource:
      type: object
      properties:
        id:
          type: integer
          description: Internal Customer Profile entity ID.
        sources:
          type: array
          description: List of identifiers for other external systems.
          items:
            $ref: '#/components/schemas/Ownership_API_Source'
        name:
          type: string
          description: Generic name
    Ownership_API_Error:
      type: object
      description: An error details that can be bind to a property or field from request.
      required:
        - name
        - code
        - message
      properties:
        name:
          type: string
          description: A property or field in error.
          example: email
        code:
          type: string
          description: An error code.
          example: bad.format
        message:
          type: string
          description: A human-readable error message description.
          example: Format of email property is not valid.
    Ownership_API_ErrorResponse:
      type: object
      description: A REST API error response.
      required:
        - source
        - code
        - message
        - timestamp
        - errors
      properties:
        source:
          type: string
          description: Backend service identifier.
          example: customer-profile
        code:
          type: string
          description: >-
            Error codes are classified into a common general error codes and
            specific ones for each product. Error codes from 0 to 0999 are
            reserved for common error codes. Error codes from 1000 and above are
            product specific.
          example: '002'
        message:
          type: string
          description: A human-readable error message description.
          example: Failed to store contact into database.
        requestId:
          type: string
          description: Unique request ID. (For easier debugging)
          example: cd9dce34-be5c-11ed-afa1-0242ac120002
        timestamp:
          type: string
          format: datetime
          description: Timestamp when error has occured. (For easier debugging)
          example: '2023-03-29T00:00:00.000Z'
        errors:
          type: array
          description: >-
            A list of additional detail errors that can be used for error
            binding to a property or a field from request.
          items:
            $ref: '#/components/schemas/Ownership_API_Error'
    Ownership_API_Sort:
      type: object
      description: Provides a list of filters for sorting collection APIs.
      properties:
        field:
          type: string
          description: Attribute to sort by.
          example: id
        direction:
          type: string
          description: Direction to sort by.
          enum:
            - asc
            - desc
    Ownership_API_Page:
      type: object
      description: Provides a list of filters for paging/sorting different collection APIs.
      properties:
        number:
          type: integer
          format: int32
          description: Desired page number.
          default: 1
        size:
          type: integer
          format: int32
          description: Desired page size.
          default: 20
        sort:
          $ref: '#/components/schemas/Ownership_API_Sort'
    Ownership_API_PageResult:
      type: object
      properties:
        content:
          type: array
          description: Current page results.
          items:
            type: object
        page:
          type: integer
          format: int32
          description: Current page number.
        pageSize:
          type: integer
          format: int32
          description: Current page size.
        totalPages:
          type: integer
          format: int32
          description: Total number of pages.
        totalItems:
          type: integer
          format: int32
          description: Total number of items.
  securitySchemes:
    CP_API_api_key:
      type: apiKey
      description: Requests should pass an X-Auth-Token header.
      name: X-Auth-Token
      in: header
  parameters:
    Contact_API_V2Id:
      name: contactId
      in: path
      required: true
      description: Contact ID
      schema:
        type: integer
        format: int32
    Ownership_API_documentId:
      name: documentId
      in: path
      required: true
      description: PDF document ID
      schema:
        type: string
    Ownership_API_lang:
      name: lang
      in: query
      required: false
      description: Language in ISO code
      schema:
        type: string
    Ownership_API_aggregate:
      name: aggregate
      in: query
      required: false
      description: >-
        If brands of legal-entity should include only dealers brands or all
        master brands
      schema:
        type: boolean
        default: false
    Ownership_API_entities:
      name: entities
      in: query
      required: false
      description: Should email template include signed entities
      schema:
        type: boolean
        default: false
    Ownership_API_consentId:
      name: consentId
      in: query
      required: false
      description: Consent ID
      schema:
        type: integer
        format: int32
    Ownership_API_version:
      name: version
      in: query
      required: false
      description: Consent version
      schema:
        type: string
    Ownership_API_pageSize:
      name: pageSize
      in: query
      required: false
      description: Page size.
      schema:
        type: integer
        format: int32
    Ownership_API_pageNumber:
      name: pageNumber
      in: query
      required: false
      description: Page number.
      schema:
        type: integer
        format: int32
    Ownership_API_token:
      name: token
      in: query
      required: true
      description: JWT token used for fetching/storing consent data from web-forms
      schema:
        type: string
    Ownership_API_customerId:
      name: customerId
      in: path
      required: true
      description: Customer ID
      schema:
        type: string
    Ownership_API_force:
      name: force
      in: query
      required: false
      description: >-
        If the force flag is false, the API will only perform contact/address
        validation. If the force flag is true, the operation will create or
        update the contact accordingly.
      schema:
        type: boolean
    Ownership_API_cidLength:
      name: cidLength
      in: query
      required: false
      description: >-
        Only CH env. Define the length of customerId when CP is the one
        responsible for generation of it.
      schema:
        type: integer
        minimum: 4
        maximum: 6
    Ownership_API_dealerId:
      name: dealerId
      in: query
      required: false
      description: >-
        Used to manually override dealer which will be set as owner of contact
        that is being created. Only allowed for certain roles.
      schema:
        type: integer
    Ownership_API_noteId:
      name: noteId
      in: path
      required: true
      description: >-
        Represents CP note ID which is used for update and delete operations of
        specific notes.
      schema:
        type: integer
    Ownership_API_include:
      name: include
      in: query
      required: false
      description: >-
        Provides client an option to include otherwise optional data entities
        when fetching entity from API. If no value is provided, API returns
        reasonable dataset.
      schema:
        type: array
        items:
          type: string
          enum:
            - additional
            - owner
            - createdBy
            - modifiedBy
            - all
        nullable: true
    Ownership_API_ownershipId:
      name: ownershipId
      in: path
      required: true
      description: Ownership ID.
      schema:
        type: integer
        format: int32
    Ownership_API_driverId:
      name: driverId
      in: path
      required: true
      description: Ownership driver ID.
      schema:
        type: integer
        format: int32
    Ownership_API_ownerId:
      name: ownerId
      in: query
      required: false
      description: Owner contact ID.
      schema:
        type: array
        items:
          type: integer
          format: int32
    Ownership_API_vin:
      name: vin
      in: query
      required: false
      description: Vehicle identification number.
      schema:
        type: array
        items:
          type: string
    Ownership_API_status:
      name: status
      in: query
      required: false
      description: Ownership status.
      schema:
        type: string
        enum:
          - ACTIVE
          - OWNER_CHANGED
          - REMOVED
  responses:
    Ownership_API_Unauthorized:
      description: Unauthorized API request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Ownership_API_ErrorResponse'
          example:
            source: customer-profile
            code: '001'
            message: Unauthorized API request
            requestId: fd9dce34-be5c-11ed-afa1-0242ac120002
            timestamp: 2023-01-30:00:00.000Z
            errors: []
    Ownership_API_ServerError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Ownership_API_ErrorResponse'
          example:
            source: customer-profile
            code: '999'
            message: Internal server error
            requestId: dd9dce34-be5c-11ed-afa1-0242ac120002
            timestamp: '2022-11-20T00:00:00.000Z'
            errors: []
    Ownership_API_NotFound:
      description: Requested resource is not found or is forbidden.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Ownership_API_ErrorResponse'
          example:
            source: customer-profile
            code: '007'
            message: Resource not found
            requestId: dd9dce34-be5c-11ed-afa1-0242ac120002
            timestamp: '2023-02-03T00:00:00.000Z'
            errors: []
    Ownership_API_BadRequest:
      description: Request with bad data or structure format.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Ownership_API_ErrorResponse'
x-tagGroups:
  - name: Customer Profile API
    tags:
      - Ownership
      - Config
      - Declaration
      - Vehicle
      - Contact API V1 Task
      - Contact API V1
      - Contact API V1 Note
      - Contact API V1 Ownership
      - Contact API V1 Relation
      - Contact API V1 Vehicle
      - Contact API V1 Document
      - Contact API V2 Search
      - Contact API V2
      - Contact API V2 Tags
      - Contact API V2 Notes
      - Contact API V2 Type
      - Contact API V2 Interest Categories
      - Contact API V2 Vehicle Preferences
      - Contact API V2 Dealer History
      - Contact API V2 Usage
      - Sync
      - Tasks
      - Data Quality
      - Customer
      - Interest
      - Country
      - Language
      - Documents
      - Storage
      - EF
      - Consents
      - Lead
      - Privacy
      - Offer
      - Test Drive
      - MonitoringEndpoint
      - Contact Status
  - name: Ownership API
    tags:
      - Ownership API Ownership
      - Ownership API Consents
      - Ownership API Download
      - Ownership API Email
      - Ownership API Form
      - Ownership API Customer Usage
